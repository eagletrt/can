syntax = "proto3";
package primary;


enum primary_hv_jmp_to_blt_forward {
	primary_hv_jmp_to_blt_forward_off = 0;
	primary_hv_jmp_to_blt_forward_on = 1;
}
enum primary_hv_jmp_to_blt_cellboard_id {
	primary_hv_jmp_to_blt_cellboard_id_cellboard_0 = 0;
	primary_hv_jmp_to_blt_cellboard_id_cellboard_1 = 1;
	primary_hv_jmp_to_blt_cellboard_id_cellboard_2 = 2;
	primary_hv_jmp_to_blt_cellboard_id_cellboard_3 = 3;
	primary_hv_jmp_to_blt_cellboard_id_cellboard_4 = 4;
	primary_hv_jmp_to_blt_cellboard_id_cellboard_5 = 5;
}
enum primary_hv_cellboard_version_cellboard_id {
	primary_hv_cellboard_version_cellboard_id_cellboard_0 = 0;
	primary_hv_cellboard_version_cellboard_id_cellboard_1 = 1;
	primary_hv_cellboard_version_cellboard_id_cellboard_2 = 2;
	primary_hv_cellboard_version_cellboard_id_cellboard_3 = 3;
	primary_hv_cellboard_version_cellboard_id_cellboard_4 = 4;
	primary_hv_cellboard_version_cellboard_id_cellboard_5 = 5;
}
enum primary_hv_fans_status_fans_override {
	primary_hv_fans_status_fans_override_off = 0;
	primary_hv_fans_status_fans_override_on = 1;
}
enum primary_hv_set_fans_status_fans_override {
	primary_hv_set_fans_status_fans_override_off = 0;
	primary_hv_set_fans_status_fans_override_on = 1;
}
enum primary_hv_feedback_status_feedback_implausibility_detected {
	primary_hv_feedback_status_feedback_implausibility_detected_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_implausibility_detected_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_implausibility_detected_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_imd_cockpit {
	primary_hv_feedback_status_feedback_imd_cockpit_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_imd_cockpit_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_imd_cockpit_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_tsal_green_fault_latched {
	primary_hv_feedback_status_feedback_tsal_green_fault_latched_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_tsal_green_fault_latched_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_tsal_green_fault_latched_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_bms_cockpit {
	primary_hv_feedback_status_feedback_bms_cockpit_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_bms_cockpit_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_bms_cockpit_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_ext_latched {
	primary_hv_feedback_status_feedback_ext_latched_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_ext_latched_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_ext_latched_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_tsal_green {
	primary_hv_feedback_status_feedback_tsal_green_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_tsal_green_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_tsal_green_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_ts_over_60v_status {
	primary_hv_feedback_status_feedback_ts_over_60v_status_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_ts_over_60v_status_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_ts_over_60v_status_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_airn_status {
	primary_hv_feedback_status_feedback_airn_status_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_airn_status_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_airn_status_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_airp_status {
	primary_hv_feedback_status_feedback_airp_status_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_airp_status_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_airp_status_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_airp_gate {
	primary_hv_feedback_status_feedback_airp_gate_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_airp_gate_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_airp_gate_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_airn_gate {
	primary_hv_feedback_status_feedback_airn_gate_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_airn_gate_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_airn_gate_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_precharge_status {
	primary_hv_feedback_status_feedback_precharge_status_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_precharge_status_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_precharge_status_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_tsp_over_60v_status {
	primary_hv_feedback_status_feedback_tsp_over_60v_status_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_tsp_over_60v_status_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_tsp_over_60v_status_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_imd_fault {
	primary_hv_feedback_status_feedback_imd_fault_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_imd_fault_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_imd_fault_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_check_mux {
	primary_hv_feedback_status_feedback_check_mux_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_check_mux_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_check_mux_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_sd_end {
	primary_hv_feedback_status_feedback_sd_end_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_sd_end_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_sd_end_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_sd_out {
	primary_hv_feedback_status_feedback_sd_out_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_sd_out_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_sd_out_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_sd_in {
	primary_hv_feedback_status_feedback_sd_in_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_sd_in_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_sd_in_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_sd_bms {
	primary_hv_feedback_status_feedback_sd_bms_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_sd_bms_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_sd_bms_feedback_state_high = 2;
}
enum primary_hv_feedback_status_feedback_sd_imd {
	primary_hv_feedback_status_feedback_sd_imd_feedback_state_low = 0;
	primary_hv_feedback_status_feedback_sd_imd_feedback_state_error = 1;
	primary_hv_feedback_status_feedback_sd_imd_feedback_state_high = 2;
}
enum primary_hv_imd_status_imd_status {
	primary_hv_imd_status_imd_status_sc = 0;
	primary_hv_imd_status_imd_status_normal = 1;
	primary_hv_imd_status_imd_status_under_voltage = 2;
	primary_hv_imd_status_imd_status_start_measure = 3;
	primary_hv_imd_status_imd_status_device_error = 4;
	primary_hv_imd_status_imd_status_earth_fault = 5;
}
enum primary_hv_status_status {
	primary_hv_status_status_init = 0;
	primary_hv_status_status_idle = 1;
	primary_hv_status_status_airn_close = 2;
	primary_hv_status_status_precharge = 3;
	primary_hv_status_status_airp_close = 4;
	primary_hv_status_status_ts_on = 5;
	primary_hv_status_status_fatal_error = 6;
}
enum primary_hv_set_status_ecu_hv_status_set {
	primary_hv_set_status_ecu_hv_status_set_off = 0;
	primary_hv_set_status_ecu_hv_status_set_on = 1;
}
enum primary_hv_set_status_handcart_hv_status_set {
	primary_hv_set_status_handcart_hv_status_set_off = 0;
	primary_hv_set_status_handcart_hv_status_set_on = 1;
}
enum primary_hv_balancing_status_cellboard_id {
	primary_hv_balancing_status_cellboard_id_cellboard_0 = 0;
	primary_hv_balancing_status_cellboard_id_cellboard_1 = 1;
	primary_hv_balancing_status_cellboard_id_cellboard_2 = 2;
	primary_hv_balancing_status_cellboard_id_cellboard_3 = 3;
	primary_hv_balancing_status_cellboard_id_cellboard_4 = 4;
	primary_hv_balancing_status_cellboard_id_cellboard_5 = 5;
}
enum primary_hv_balancing_status_balancing_status {
	primary_hv_balancing_status_balancing_status_off = 0;
	primary_hv_balancing_status_balancing_status_on = 1;
}
enum primary_hv_set_balancing_status_handcart_set_balancing_status {
	primary_hv_set_balancing_status_handcart_set_balancing_status_off = 0;
	primary_hv_set_balancing_status_handcart_set_balancing_status_on = 1;
}
enum primary_hv_set_balancing_status_steering_wheel_set_balancing_status {
	primary_hv_set_balancing_status_steering_wheel_set_balancing_status_off = 0;
	primary_hv_set_balancing_status_steering_wheel_set_balancing_status_on = 1;
}
enum primary_lv_status_status {
	primary_lv_status_status_init = 0;
	primary_lv_status_status_idle = 1;
	primary_lv_status_status_tson = 2;
	primary_lv_status_status_run = 3;
	primary_lv_status_status_flashing = 4;
	primary_lv_status_status_error = 5;
}
enum primary_lv_radiator_speed_status {
	primary_lv_radiator_speed_status_off = 0;
	primary_lv_radiator_speed_status_auto = 1;
	primary_lv_radiator_speed_status_manual = 2;
}
enum primary_lv_pumps_speed_status {
	primary_lv_pumps_speed_status_off = 0;
	primary_lv_pumps_speed_status_auto = 1;
	primary_lv_pumps_speed_status_manual = 2;
}
enum primary_lv_set_radiator_speed_status {
	primary_lv_set_radiator_speed_status_off = 0;
	primary_lv_set_radiator_speed_status_auto = 1;
	primary_lv_set_radiator_speed_status_manual = 2;
}
enum primary_lv_set_pumps_speed_status {
	primary_lv_set_pumps_speed_status_off = 0;
	primary_lv_set_pumps_speed_status_auto = 1;
	primary_lv_set_pumps_speed_status_manual = 2;
}
enum primary_lv_inverter_connection_status_status {
	primary_lv_inverter_connection_status_status_off = 0;
	primary_lv_inverter_connection_status_status_on = 1;
}
enum primary_lv_set_inverter_connection_status_status {
	primary_lv_set_inverter_connection_status_status_off = 0;
	primary_lv_set_inverter_connection_status_status_on = 1;
}
enum primary_tlm_status_status {
	primary_tlm_status_status_off = 0;
	primary_tlm_status_status_on = 1;
}
enum primary_tlm_set_status_status {
	primary_tlm_set_status_status_off = 0;
	primary_tlm_set_status_status_on = 1;
}
enum primary_handcart_status_connected {
	primary_handcart_status_connected_off = 0;
	primary_handcart_status_connected_on = 1;
}
enum primary_handcart_settings_fans_override {
	primary_handcart_settings_fans_override_off = 0;
	primary_handcart_settings_fans_override_on = 1;
}
enum primary_handcart_settings_status {
	primary_handcart_settings_status_none = 0;
	primary_handcart_settings_status_check = 1;
	primary_handcart_settings_status_idle = 2;
	primary_handcart_settings_status_precharge = 3;
	primary_handcart_settings_status_ready = 4;
	primary_handcart_settings_status_charge = 5;
	primary_handcart_settings_status_charge_done = 6;
	primary_handcart_settings_status_balancing = 7;
	primary_handcart_settings_status_error = 8;
}
enum primary_handcart_set_settings_fans_override {
	primary_handcart_set_settings_fans_override_off = 0;
	primary_handcart_set_settings_fans_override_on = 1;
}
enum primary_handcart_set_settings_status {
	primary_handcart_set_settings_status_none = 0;
	primary_handcart_set_settings_status_check = 1;
	primary_handcart_set_settings_status_idle = 2;
	primary_handcart_set_settings_status_precharge = 3;
	primary_handcart_set_settings_status_ready = 4;
	primary_handcart_set_settings_status_charge = 5;
	primary_handcart_set_settings_status_charge_done = 6;
	primary_handcart_set_settings_status_balancing = 7;
	primary_handcart_set_settings_status_error = 8;
}
enum primary_ecu_status_status {
	primary_ecu_status_status_init = 0;
	primary_ecu_status_status_enable_inv_updates = 1;
	primary_ecu_status_status_check_inv_settings = 2;
	primary_ecu_status_status_idle = 3;
	primary_ecu_status_status_start_ts_precharge = 4;
	primary_ecu_status_status_wait_ts_precharge = 5;
	primary_ecu_status_status_wait_driver = 6;
	primary_ecu_status_status_enable_inv_drive = 7;
	primary_ecu_status_status_drive = 8;
	primary_ecu_status_status_disable_inv_drive = 9;
	primary_ecu_status_status_start_ts_discharge = 10;
	primary_ecu_status_status_wait_ts_discharge = 11;
	primary_ecu_status_status_fatal_error = 12;
}
enum primary_ecu_set_status_status {
	primary_ecu_set_status_status_idle = 0;
	primary_ecu_set_status_status_ready = 1;
	primary_ecu_set_status_status_drive = 2;
}
enum primary_ecu_inverter_status_rl {
	primary_ecu_inverter_status_rl_disabled = 0;
	primary_ecu_inverter_status_rl_rfe_on = 1;
	primary_ecu_inverter_status_rl_frg_on = 2;
	primary_ecu_inverter_status_rl_enabled = 3;
}
enum primary_ecu_inverter_status_rr {
	primary_ecu_inverter_status_rr_disabled = 0;
	primary_ecu_inverter_status_rr_rfe_on = 1;
	primary_ecu_inverter_status_rr_frg_on = 2;
	primary_ecu_inverter_status_rr_enabled = 3;
}
enum primary_ecu_ptt_status_status {
	primary_ecu_ptt_status_status_off = 0;
	primary_ecu_ptt_status_status_on = 1;
}
enum primary_ecu_set_ptt_status_status {
	primary_ecu_set_ptt_status_status_off = 0;
	primary_ecu_set_ptt_status_status_on = 1;
}
enum primary_ecu_steer_actuator_status_status {
	primary_ecu_steer_actuator_status_status_off = 0;
	primary_ecu_steer_actuator_status_status_on = 1;
}
enum primary_ecu_set_steer_actuator_status_steering_wheel_status {
	primary_ecu_set_steer_actuator_status_steering_wheel_status_off = 0;
	primary_ecu_set_steer_actuator_status_steering_wheel_status_on = 1;
}
enum primary_ecu_set_steer_actuator_status_tlm_status {
	primary_ecu_set_steer_actuator_status_tlm_status_off = 0;
	primary_ecu_set_steer_actuator_status_tlm_status_on = 1;
}


message NLG5_DIAG_TX{
	uint64 LAD_D_ParamRp = 1;
	uint64 _inner_timestamp = 2;
}
message NLG5_DIAG_RX{
	uint64 LAD_D_ParamRq = 1;
	uint64 _inner_timestamp = 2;
}
message NLG5_ERR{
	bool NLG5_E_OOV = 1;
	bool NLG5_E_MOV_II = 2;
	bool NLG5_E_MOV_I = 3;
	bool NLG5_E_SC = 4;
	bool NLG5_E_P_OM = 5;
	bool NLG5_E_P_MV = 6;
	bool NLG5_E_OF = 7;
	bool NLG5_E_MF = 8;
	bool NLG5_E_B_P = 9;
	bool NLG5_E_T_C = 10;
	bool NLG5_E_T_POW = 11;
	bool NLG5_E_T_DIO = 12;
	bool NLG5_E_T_TR = 13;
	bool NLG5_E_T_EXT1 = 14;
	bool NLG5_E_T_EXT2 = 15;
	bool NLG5_E_T_EXT3 = 16;
	bool NLG5_E_F_CRC = 17;
	bool NLG5_E_NV_CRC = 18;
	bool NLG5_E_ES_CRC = 19;
	bool NLG5_E_EP_CRC = 20;
	bool NLG5_E_WDT = 21;
	bool NLG5_E_INIT = 22;
	bool NLG5_E_C_TO = 23;
	bool NLG5_E_C_OFF = 24;
	bool NLG5_E_C_TX = 25;
	bool NLG5_E_C_RX = 26;
	bool NLG5_E_SDT_BT = 27;
	bool NLG5_E_SDT_BV = 28;
	bool NLG5_E_SDT_AH = 29;
	bool NLG5_E_SDT_CT = 30;
	bool NLG5_W_PL_MV = 31;
	bool NLG5_W_PL_BV = 32;
	bool NLG5_W_PL_IT = 33;
	bool NLG5_W_C_VOR = 34;
	bool NLG5_W_CM_NA = 35;
	bool NLG5_W_OD = 36;
	bool NLG5_W_SC_M = 37;
	uint64 _inner_timestamp = 38;
}
message NLG5_TEMP{
	double NLG5_P_TMP = 1;
	double NLG5_TMP_EXT1 = 2;
	double NLG5_TEMP_EXT2 = 3;
	double NLG5_TMP_EXT3 = 4;
	uint64 _inner_timestamp = 5;
}
message NLG5_ACT_II{
	double NLG5_S_MC_M_CP = 1;
	double NLG5_S_MC_M_PI = 2;
	double NLG5_ABV = 3;
	double NLG5_AHC_EXT = 4;
	double NLG5_OC_BO = 5;
	uint64 _inner_timestamp = 6;
}
message NLG5_ACT_I{
	double NLG5_MC_ACT = 1;
	double NLG5_MV_ACT = 2;
	double NLG5_OV_ACT = 3;
	double NLG5_OC_ACT = 4;
	uint64 _inner_timestamp = 5;
}
message NLG5_ST{
	bool NLG5_S_HE = 1;
	bool NLG5_S_ERR = 2;
	bool NLG5_S_WAR = 3;
	bool NLG5_S_FAN = 4;
	bool NLG5_S_EUM = 5;
	bool NLG5_S_UM_I = 6;
	bool NLG5_S_UM_II = 7;
	bool NLG5_S_CP_DT = 8;
	bool NLG5_S_BPD_I = 9;
	bool NLG5_S_BPD_II = 10;
	bool NLG5_S_L_OV = 11;
	bool NLG5_S_L_OC = 12;
	bool NLG5_S_L_MC = 13;
	bool NLG5_S_L_PI = 14;
	bool NLG5_S_L_CP = 15;
	bool NLG5_S_L_PMAX = 16;
	bool NLG5_S_L_MC_MAX = 17;
	bool NLG5_S_L_OC_MAX = 18;
	bool NLG5_S_L_MO_MAX = 19;
	bool NLG5_S_L_T_CPRIM = 20;
	bool NLG5_S_L_T_POW = 21;
	bool NLG5_S_L_T_DIO = 22;
	bool NLG5_S_L_T_TR = 23;
	bool NLG5_S_L_T_BATT = 24;
	bool NLG5_S_AAC = 25;
	uint64 _inner_timestamp = 26;
}
message NLG5_CTL{
	bool NLG5_C_C_EN = 1;
	bool NLG5_C_C_EL = 2;
	bool NLG5_C_CP_V = 3;
	bool NLG5_C_MR = 4;
	double NLG5_MC_MAX = 5;
	double NLG5_OV_COM = 6;
	double NLG5_OC_COM = 7;
	uint64 _inner_timestamp = 8;
}
message HV_JMP_TO_BLT{
	primary_hv_jmp_to_blt_forward forward = 1;
	primary_hv_jmp_to_blt_cellboard_id cellboard_id = 2;
	uint64 _inner_timestamp = 3;
}
message HV_FLASH_MAINBOARD_TX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_MAINBOARD_RX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_0_TX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_0_RX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_1_TX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_1_RX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_2_TX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_2_RX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_3_TX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_3_RX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_4_TX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_4_RX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_5_TX{
	uint64 _inner_timestamp = 1;
}
message HV_FLASH_CELLBOARD_5_RX{
	uint64 _inner_timestamp = 1;
}
message LV_JMP_TO_BLT{
	uint64 _inner_timestamp = 1;
}
message LV_FLASH_TX{
	uint64 _inner_timestamp = 1;
}
message LV_FLASH_RX{
	uint64 _inner_timestamp = 1;
}
message ECU_JMP_TO_BLT{
	uint64 _inner_timestamp = 1;
}
message ECU_FLASH_TX{
	uint64 _inner_timestamp = 1;
}
message ECU_FLASH_RX{
	uint64 _inner_timestamp = 1;
}
message STEERING_WHEEL_JMP_TO_BLT{
	uint64 _inner_timestamp = 1;
}
message STEERING_WHEEL_FLASH_TX{
	uint64 _inner_timestamp = 1;
}
message STEERING_WHEEL_FLASH_RX{
	uint64 _inner_timestamp = 1;
}
message STEERING_WHEEL_VERSION{
	uint32 component_build_time = 1;
	uint32 canlib_build_time = 2;
	uint64 _inner_timestamp = 3;
}
message ECU_VERSION{
	uint32 component_build_time = 1;
	uint32 canlib_build_time = 2;
	uint64 _inner_timestamp = 3;
}
message LV_VERSION{
	uint32 component_build_time = 1;
	uint32 canlib_build_time = 2;
	uint64 _inner_timestamp = 3;
}
message TLM_VERSION{
	uint32 component_build_time = 1;
	uint32 canlib_build_time = 2;
	uint64 _inner_timestamp = 3;
}
message HV_MAINBOARD_VERSION{
	uint32 component_build_time = 1;
	uint32 canlib_build_time = 2;
	uint64 _inner_timestamp = 3;
}
message HV_CELLBOARD_VERSION{
	primary_hv_cellboard_version_cellboard_id cellboard_id = 1;
	uint32 component_version = 2;
	uint32 canlib_build_time = 3;
	uint64 _inner_timestamp = 4;
}
message HV_ERRORS{
	bool errors_cell_under_voltage = 1;
	bool errors_cell_over_voltage = 2;
	bool errors_cell_under_temperature = 3;
	bool errors_cell_over_temperature = 4;
	bool errors_over_current = 5;
	bool errors_can = 6;
	bool errors_int_voltage_mismatch = 7;
	bool errors_cellboard_comm = 8;
	bool errors_cellboard_internal = 9;
	bool errors_connector_disconnected = 10;
	bool errors_fans_disconnected = 11;
	bool errors_feedback = 12;
	bool errors_feedback_circuitry = 13;
	bool errors_eeprom_comm = 14;
	bool errors_eeprom_write = 15;
	uint64 _inner_timestamp = 16;
}
message HV_DEBUG_SIGNALS{
	bool feedbacks_implausibility_detected = 1;
	bool feedbacks_imd_cockpit = 2;
	bool feedbacks_tsal_green_fault_latched = 3;
	bool feedbacks_bms_cockpit = 4;
	bool feedbacks_ext_latched = 5;
	bool feedbacks_tsal_green = 6;
	bool feedbacks_ts_over_60v_status = 7;
	bool feedbacks_airn_status = 8;
	bool feedbacks_airp_status = 9;
	bool feedbacks_airp_gate = 10;
	bool feedbacks_airn_gate = 11;
	bool feedbacks_precharge_status = 12;
	bool feedbacks_tsp_over_60v_status = 13;
	bool feedbacks_imd_fault = 14;
	bool feedbacks_check_mux = 15;
	bool feedbacks_sd_end = 16;
	bool feedbacks_sd_out = 17;
	bool feedbacks_sd_in = 18;
	bool feedbacks_sd_bms = 19;
	bool feedbacks_sd_imd = 20;
	bool errors_cell_under_voltage = 21;
	bool errors_cell_over_voltage = 22;
	bool errors_cell_under_temperature = 23;
	bool errors_cell_over_temperature = 24;
	bool errors_over_current = 25;
	bool errors_can = 26;
	bool errors_int_voltage_mismatch = 27;
	bool errors_cellboard_comm = 28;
	bool errors_cellboard_internal = 29;
	bool errors_connector_disconnected = 30;
	bool errors_fans_disconnected = 31;
	bool errors_feedback = 32;
	bool errors_feedback_circuitry = 33;
	bool errors_eeprom_comm = 34;
	bool errors_eeprom_write = 35;
	uint64 _inner_timestamp = 36;
}
message HV_FANS_STATUS{
	primary_hv_fans_status_fans_override fans_override = 1;
	double fans_speed = 2;
	uint64 _inner_timestamp = 3;
}
message HV_SET_FANS_STATUS{
	primary_hv_set_fans_status_fans_override fans_override = 1;
	double fans_speed = 2;
	uint64 _inner_timestamp = 3;
}
message HV_FEEDBACK_STATUS{
	primary_hv_feedback_status_feedback_implausibility_detected feedback_implausibility_detected = 1;
	primary_hv_feedback_status_feedback_imd_cockpit feedback_imd_cockpit = 2;
	primary_hv_feedback_status_feedback_tsal_green_fault_latched feedback_tsal_green_fault_latched = 3;
	primary_hv_feedback_status_feedback_bms_cockpit feedback_bms_cockpit = 4;
	primary_hv_feedback_status_feedback_ext_latched feedback_ext_latched = 5;
	primary_hv_feedback_status_feedback_tsal_green feedback_tsal_green = 6;
	primary_hv_feedback_status_feedback_ts_over_60v_status feedback_ts_over_60v_status = 7;
	primary_hv_feedback_status_feedback_airn_status feedback_airn_status = 8;
	primary_hv_feedback_status_feedback_airp_status feedback_airp_status = 9;
	primary_hv_feedback_status_feedback_airp_gate feedback_airp_gate = 10;
	primary_hv_feedback_status_feedback_airn_gate feedback_airn_gate = 11;
	primary_hv_feedback_status_feedback_precharge_status feedback_precharge_status = 12;
	primary_hv_feedback_status_feedback_tsp_over_60v_status feedback_tsp_over_60v_status = 13;
	primary_hv_feedback_status_feedback_imd_fault feedback_imd_fault = 14;
	primary_hv_feedback_status_feedback_check_mux feedback_check_mux = 15;
	primary_hv_feedback_status_feedback_sd_end feedback_sd_end = 16;
	primary_hv_feedback_status_feedback_sd_out feedback_sd_out = 17;
	primary_hv_feedback_status_feedback_sd_in feedback_sd_in = 18;
	primary_hv_feedback_status_feedback_sd_bms feedback_sd_bms = 19;
	primary_hv_feedback_status_feedback_sd_imd feedback_sd_imd = 20;
	uint64 _inner_timestamp = 21;
}
message HV_FEEDBACK_TS_VOLTAGE{
	double ts_over_60v_status = 1;
	double airn_status = 2;
	double airp_status = 3;
	double airp_gate = 4;
	double airn_gate = 5;
	double precharge_status = 6;
	double tsp_over_60v_status = 7;
	uint64 _inner_timestamp = 8;
}
message HV_FEEDBACK_MISC_VOLTAGE{
	double implausibility_detected = 1;
	double imd_cockpit = 2;
	double tsal_green_fault_latched = 3;
	double bms_cockpit = 4;
	double ext_latched = 5;
	double tsal_green = 6;
	double imd_fault = 7;
	double check_mux = 8;
	uint64 _inner_timestamp = 9;
}
message HV_FEEDBACK_SD_VOLTAGE{
	double sd_end = 1;
	double sd_out = 2;
	double sd_in = 3;
	double sd_bms = 4;
	double sd_imd = 5;
	uint64 _inner_timestamp = 6;
}
message HV_IMD_STATUS{
	bool imd_fault = 1;
	primary_hv_imd_status_imd_status imd_status = 2;
	uint32 imd_details = 3;
	uint32 imd_duty_cycle = 4;
	uint32 imd_freq = 5;
	uint32 imd_period = 6;
	uint64 _inner_timestamp = 7;
}
message HV_STATUS{
	primary_hv_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message HV_SET_STATUS_ECU{
	primary_hv_set_status_ecu_hv_status_set hv_status_set = 1;
	uint64 _inner_timestamp = 2;
}
message HV_SET_STATUS_HANDCART{
	primary_hv_set_status_handcart_hv_status_set hv_status_set = 1;
	uint64 _inner_timestamp = 2;
}
message HV_BALANCING_STATUS{
	primary_hv_balancing_status_cellboard_id cellboard_id = 1;
	primary_hv_balancing_status_balancing_status balancing_status = 2;
	bool errors_can_comm = 3;
	bool errors_ltc_comm = 4;
	bool errors_temp_comm_0 = 5;
	bool errors_temp_comm_1 = 6;
	bool errors_temp_comm_2 = 7;
	bool errors_temp_comm_3 = 8;
	bool errors_temp_comm_4 = 9;
	bool errors_temp_comm_5 = 10;
	bool errors_open_wire = 11;
	bool balancing_cells_cell0 = 12;
	bool balancing_cells_cell1 = 13;
	bool balancing_cells_cell2 = 14;
	bool balancing_cells_cell3 = 15;
	bool balancing_cells_cell4 = 16;
	bool balancing_cells_cell5 = 17;
	bool balancing_cells_cell6 = 18;
	bool balancing_cells_cell7 = 19;
	bool balancing_cells_cell8 = 20;
	bool balancing_cells_cell9 = 21;
	bool balancing_cells_cell10 = 22;
	bool balancing_cells_cell11 = 23;
	bool balancing_cells_cell12 = 24;
	bool balancing_cells_cell13 = 25;
	bool balancing_cells_cell14 = 26;
	bool balancing_cells_cell15 = 27;
	bool balancing_cells_cell16 = 28;
	bool balancing_cells_cell17 = 29;
	uint64 _inner_timestamp = 30;
}
message HV_SET_BALANCING_STATUS_HANDCART{
	primary_hv_set_balancing_status_handcart_set_balancing_status set_balancing_status = 1;
	uint32 balancing_threshold = 2;
	uint64 _inner_timestamp = 3;
}
message HV_SET_BALANCING_STATUS_STEERING_WHEEL{
	primary_hv_set_balancing_status_steering_wheel_set_balancing_status set_balancing_status = 1;
	uint32 balancing_threshold = 2;
	uint64 _inner_timestamp = 3;
}
message LV_STATUS{
	primary_lv_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message LV_RADIATOR_SPEED{
	primary_lv_radiator_speed_status status = 1;
	double radiator_speed = 2;
	uint64 _inner_timestamp = 3;
}
message LV_PUMPS_SPEED{
	primary_lv_pumps_speed_status status = 1;
	double pumps_speed = 2;
	uint64 _inner_timestamp = 3;
}
message LV_SET_RADIATOR_SPEED{
	primary_lv_set_radiator_speed_status status = 1;
	double radiator_speed = 2;
	uint64 _inner_timestamp = 3;
}
message LV_SET_PUMPS_SPEED{
	primary_lv_set_pumps_speed_status status = 1;
	double pumps_speed = 2;
	uint64 _inner_timestamp = 3;
}
message LV_ERRORS{
	bool errors_cell_undervoltage = 1;
	bool errors_cell_overvoltage = 2;
	bool errors_battery_open_wire = 3;
	bool errors_can = 4;
	bool errors_spi = 5;
	bool errors_over_current = 6;
	bool errors_cell_under_temperature = 7;
	bool errors_cell_over_temperature = 8;
	bool errors_relay = 9;
	bool errors_bms_monitor = 10;
	bool errors_voltages_not_ready = 11;
	bool errors_mcp23017 = 12;
	bool errors_radiator = 13;
	bool errors_fan = 14;
	bool errors_pump = 15;
	bool errors_adc_init = 16;
	bool errors_mux = 17;
	bool health_signals_lvms_out = 18;
	bool health_signals_relay_out = 19;
	bool health_signals_battery_voltage_out = 20;
	bool health_signals_charger_current = 21;
	bool health_signals_battery_current = 22;
	bool health_signals_sign_battery_current = 23;
	uint64 _inner_timestamp = 24;
}
message LV_FEEDBACK_TS_VOLTAGE{
	double bspd = 1;
	double hvd = 2;
	double invc_interlock = 3;
	double ams = 4;
	uint64 _inner_timestamp = 5;
}
message LV_FEEDBACK_SD_VOLTAGE{
	double sd_end = 1;
	double lvms = 2;
	double interlock = 3;
	double sd_start = 4;
	uint64 _inner_timestamp = 5;
}
message LV_FEEDBACK_ENCLOSURE_VOLTAGE{
	double lv_encl = 1;
	double invc_lid = 2;
	double hv_encl_2 = 3;
	double backplate = 4;
	uint64 _inner_timestamp = 5;
}
message LV_FEEDBACK_GPIO_EXTENDER{
	bool feedback_inverters = 1;
	bool feedback_pcbs = 2;
	bool feedback_pumps = 3;
	bool feedback_radiators = 4;
	bool feedback_shutdown = 5;
	bool feedback_hv_fans = 6;
	bool feedback_autonomous_system_actuation = 7;
	bool feedback_rfe = 8;
	bool feedback_frg = 9;
	bool feedback_discharge = 10;
	uint64 _inner_timestamp = 11;
}
message LV_CAN_FLASH_REQ_TLM{
	uint64 _inner_timestamp = 1;
}
message LV_CAN_FLASH_REQ_STEERING_WHEEL{
	uint64 _inner_timestamp = 1;
}
message LV_CAN_FLASH_ACK{
	uint64 _inner_timestamp = 1;
}
message LV_INVERTER_CONNECTION_STATUS{
	primary_lv_inverter_connection_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message LV_SET_INVERTER_CONNECTION_STATUS{
	primary_lv_set_inverter_connection_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message TLM_STATUS{
	primary_tlm_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message TLM_SET_STATUS{
	primary_tlm_set_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message HANDCART_STATUS{
	primary_handcart_status_connected connected = 1;
	uint64 _inner_timestamp = 2;
}
message HANDCART_SETTINGS{
	double target_voltage = 1;
	primary_handcart_settings_fans_override fans_override = 2;
	double fans_speed = 3;
	double acc_charge_current = 4;
	double grid_max_current = 5;
	primary_handcart_settings_status status = 6;
	uint64 _inner_timestamp = 7;
}
message HANDCART_SET_SETTINGS{
	double target_voltage = 1;
	primary_handcart_set_settings_fans_override fans_override = 2;
	double fans_speed = 3;
	double acc_charge_current = 4;
	double grid_max_current = 5;
	primary_handcart_set_settings_status status = 6;
	uint64 _inner_timestamp = 7;
}
message ECU_STATUS{
	primary_ecu_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message ECU_SET_STATUS{
	primary_ecu_set_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message ECU_INVERTER_STATUS{
	primary_ecu_inverter_status_rl rl = 1;
	primary_ecu_inverter_status_rr rr = 2;
	uint64 _inner_timestamp = 3;
}
message ECU_CONTROL_STATUS{
	bool control_enabled = 1;
	bool control_errors_forced_off = 2;
	bool control_errors_wrong_maps = 3;
	bool control_errors_control_watchdog = 4;
	uint64 _inner_timestamp = 5;
}
message ECU_ERRORS{
	bool error_pedal_adc = 1;
	bool error_pedal_implausibility = 2;
	bool error_imu_tout = 3;
	bool error_irts_tout = 4;
	bool error_ts_tout = 5;
	bool error_invl_tout = 6;
	bool error_invr_tout = 7;
	bool error_steer_tout = 8;
	bool error_fsm = 9;
	uint64 _inner_timestamp = 10;
}
message ECU_FEEDBACKS{
	bool feedbacks_sd_cock_fb = 1;
	bool feedbacks_sd_fb1 = 2;
	bool feedbacks_sd_bots_fb = 3;
	bool feedbacks_sd_interial_fb = 4;
	bool feedbacks_sd_fb4 = 5;
	bool feedbacks_sd_in = 6;
	bool feedbacks_sd_out = 7;
	bool feedbacks_sd_ctrl_pin = 8;
	uint64 _inner_timestamp = 9;
}
message ECU_POWER_MAPS{
	double map_pw = 1;
	double map_sc = 2;
	double map_tv = 3;
	uint64 _inner_timestamp = 4;
}
message ECU_SET_POWER_MAPS{
	double map_pw = 1;
	double map_sc = 2;
	double map_tv = 3;
	uint64 _inner_timestamp = 4;
}
message ECU_PTT_STATUS{
	primary_ecu_ptt_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message ECU_SET_PTT_STATUS{
	primary_ecu_set_ptt_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message INV_L_REQUEST{
	uint32 data_0 = 1;
	uint32 data_1 = 2;
	uint32 data_2 = 3;
	uint32 data_3 = 4;
	uint32 data_4 = 5;
	uint32 data_5 = 6;
	uint32 data_6 = 7;
	uint32 data_7 = 8;
	uint64 _inner_timestamp = 9;
}
message CONTROL_OUTPUT{
	double estimated_velocity = 1;
	double torque_max_l = 2;
	double torque_max_r = 3;
	double torque_l = 4;
	double torque_r = 5;
	uint64 _inner_timestamp = 6;
}
message CONTROL_STATUS{
	double map_pw = 1;
	double map_sc = 2;
	double map_tv = 3;
	uint64 _inner_timestamp = 4;
}
message INV_R_REQUEST{
	uint32 data_0 = 1;
	uint32 data_1 = 2;
	uint32 data_2 = 3;
	uint32 data_3 = 4;
	uint32 data_4 = 5;
	uint32 data_5 = 6;
	uint32 data_6 = 7;
	uint32 data_7 = 8;
	uint64 _inner_timestamp = 9;
}
message INV_L_RESPONSE{
	uint32 reg_id = 1;
	uint32 data_0 = 2;
	uint32 data_1 = 3;
	uint32 data_2 = 4;
	uint32 data_3 = 5;
	uint32 data_4 = 6;
	uint32 data_5 = 7;
	uint32 data_6 = 8;
	uint64 _inner_timestamp = 9;
}
message INV_R_RESPONSE{
	uint32 reg_id = 1;
	uint32 data_0 = 2;
	uint32 data_1 = 3;
	uint32 data_2 = 4;
	uint32 data_3 = 5;
	uint32 data_4 = 6;
	uint32 data_5 = 7;
	uint32 data_6 = 8;
	uint64 _inner_timestamp = 9;
}
message LV_CURRENT_BATTERY{
	double lv_current = 1;
	uint64 _inner_timestamp = 2;
}
message LV_CURRENT_CHARGER{
	double charger_current = 1;
	uint64 _inner_timestamp = 2;
}
message LV_TOTAL_VOLTAGE{
	float total = 1;
	uint64 _inner_timestamp = 2;
}
message LV_CELLS_VOLTAGE{
	uint32 start_index = 1;
	double voltage_0 = 2;
	double voltage_1 = 3;
	double voltage_2 = 4;
	uint64 _inner_timestamp = 5;
}
message LV_CELLS_VOLTAGE_STATS{
	double max = 1;
	double min = 2;
	double delta = 3;
	double avg = 4;
	uint64 _inner_timestamp = 5;
}
message LV_CELLS_TEMP{
	uint32 start_index = 1;
	double temp_0 = 2;
	double temp_1 = 3;
	double temp_2 = 4;
	uint64 _inner_timestamp = 5;
}
message LV_CELLS_TEMP_STATS{
	double max = 1;
	double min = 2;
	double avg = 3;
	uint64 _inner_timestamp = 4;
}
message HV_CURRENT{
	double current = 1;
	uint64 _inner_timestamp = 2;
}
message HV_POWER{
	double power = 1;
	uint64 _inner_timestamp = 2;
}
message HV_ENERGY{
	double energy = 1;
	uint64 _inner_timestamp = 2;
}
message HV_SOC{
	double soc = 1;
	uint64 _inner_timestamp = 2;
}
message HV_TOTAL_VOLTAGE{
	double pack = 1;
	double sum_cell = 2;
	double bus = 3;
	uint64 _inner_timestamp = 4;
}
message HV_CELLS_VOLTAGE{
	uint32 start_index = 1;
	double voltage_0 = 2;
	double voltage_1 = 3;
	double voltage_2 = 4;
	uint64 _inner_timestamp = 5;
}
message HV_CELLS_VOLTAGE_STATS{
	double max = 1;
	double min = 2;
	double delta = 3;
	double avg = 4;
	uint64 _inner_timestamp = 5;
}
message HV_CELLS_TEMP{
	uint32 start_index = 1;
	double temp_0 = 2;
	double temp_1 = 3;
	double temp_2 = 4;
	double temp_3 = 5;
	uint64 _inner_timestamp = 6;
}
message HV_CELLS_TEMP_STATS{
	double max = 1;
	double min = 2;
	double avg = 3;
	uint64 _inner_timestamp = 4;
}
message ECU_STEER_ACTUATOR_STATUS{
	primary_ecu_steer_actuator_status_status status = 1;
	uint64 _inner_timestamp = 2;
}
message ECU_SET_STEER_ACTUATOR_STATUS_STEERING_WHEEL{
	primary_ecu_set_steer_actuator_status_steering_wheel_status status = 1;
	double target = 2;
	uint64 _inner_timestamp = 3;
}
message ECU_SET_STEER_ACTUATOR_STATUS_TLM{
	primary_ecu_set_steer_actuator_status_tlm_status status = 1;
	double target = 2;
	uint64 _inner_timestamp = 3;
}
message ECU_STEER_ACTUATOR_CURRENT{
	double current = 1;
	uint64 _inner_timestamp = 2;
}
message DEBUG_SIGNAL_CRASH_DEBUG{
	uint32 seq_number = 1;
	uint32 byte_1 = 2;
	uint32 byte_2 = 3;
	uint32 byte_3 = 4;
	uint32 byte_4 = 5;
	uint32 byte_5 = 6;
	uint32 byte_6 = 7;
	uint32 byte_7 = 8;
	uint64 _inner_timestamp = 9;
}
message DEBUG_SIGNAL_CRASH_DEBUG_ACK{
	uint32 seq_number = 1;
	uint64 _inner_timestamp = 2;
}
message DEBUG_SIGNAL_1{
	double field_1 = 1;
	double field_2 = 2;
	double field_3 = 3;
	double field_4 = 4;
	uint64 _inner_timestamp = 5;
}
message DEBUG_SIGNAL_2{
	double field_1 = 1;
	double field_2 = 2;
	double field_3 = 3;
	double field_4 = 4;
	uint64 _inner_timestamp = 5;
}


message Pack{
	repeated NLG5_DIAG_TX NLG5_DIAG_TX = 1;
	repeated NLG5_DIAG_RX NLG5_DIAG_RX = 2;
	repeated NLG5_ERR NLG5_ERR = 3;
	repeated NLG5_TEMP NLG5_TEMP = 4;
	repeated NLG5_ACT_II NLG5_ACT_II = 5;
	repeated NLG5_ACT_I NLG5_ACT_I = 6;
	repeated NLG5_ST NLG5_ST = 7;
	repeated NLG5_CTL NLG5_CTL = 8;
	repeated HV_JMP_TO_BLT HV_JMP_TO_BLT = 9;
	repeated HV_FLASH_MAINBOARD_TX HV_FLASH_MAINBOARD_TX = 10;
	repeated HV_FLASH_MAINBOARD_RX HV_FLASH_MAINBOARD_RX = 11;
	repeated HV_FLASH_CELLBOARD_0_TX HV_FLASH_CELLBOARD_0_TX = 12;
	repeated HV_FLASH_CELLBOARD_0_RX HV_FLASH_CELLBOARD_0_RX = 13;
	repeated HV_FLASH_CELLBOARD_1_TX HV_FLASH_CELLBOARD_1_TX = 14;
	repeated HV_FLASH_CELLBOARD_1_RX HV_FLASH_CELLBOARD_1_RX = 15;
	repeated HV_FLASH_CELLBOARD_2_TX HV_FLASH_CELLBOARD_2_TX = 16;
	repeated HV_FLASH_CELLBOARD_2_RX HV_FLASH_CELLBOARD_2_RX = 17;
	repeated HV_FLASH_CELLBOARD_3_TX HV_FLASH_CELLBOARD_3_TX = 18;
	repeated HV_FLASH_CELLBOARD_3_RX HV_FLASH_CELLBOARD_3_RX = 19;
	repeated HV_FLASH_CELLBOARD_4_TX HV_FLASH_CELLBOARD_4_TX = 20;
	repeated HV_FLASH_CELLBOARD_4_RX HV_FLASH_CELLBOARD_4_RX = 21;
	repeated HV_FLASH_CELLBOARD_5_TX HV_FLASH_CELLBOARD_5_TX = 22;
	repeated HV_FLASH_CELLBOARD_5_RX HV_FLASH_CELLBOARD_5_RX = 23;
	repeated LV_JMP_TO_BLT LV_JMP_TO_BLT = 24;
	repeated LV_FLASH_TX LV_FLASH_TX = 25;
	repeated LV_FLASH_RX LV_FLASH_RX = 26;
	repeated ECU_JMP_TO_BLT ECU_JMP_TO_BLT = 27;
	repeated ECU_FLASH_TX ECU_FLASH_TX = 28;
	repeated ECU_FLASH_RX ECU_FLASH_RX = 29;
	repeated STEERING_WHEEL_JMP_TO_BLT STEERING_WHEEL_JMP_TO_BLT = 30;
	repeated STEERING_WHEEL_FLASH_TX STEERING_WHEEL_FLASH_TX = 31;
	repeated STEERING_WHEEL_FLASH_RX STEERING_WHEEL_FLASH_RX = 32;
	repeated STEERING_WHEEL_VERSION STEERING_WHEEL_VERSION = 33;
	repeated ECU_VERSION ECU_VERSION = 34;
	repeated LV_VERSION LV_VERSION = 35;
	repeated TLM_VERSION TLM_VERSION = 36;
	repeated HV_MAINBOARD_VERSION HV_MAINBOARD_VERSION = 37;
	repeated HV_CELLBOARD_VERSION HV_CELLBOARD_VERSION = 38;
	repeated HV_ERRORS HV_ERRORS = 39;
	repeated HV_DEBUG_SIGNALS HV_DEBUG_SIGNALS = 40;
	repeated HV_FANS_STATUS HV_FANS_STATUS = 41;
	repeated HV_SET_FANS_STATUS HV_SET_FANS_STATUS = 42;
	repeated HV_FEEDBACK_STATUS HV_FEEDBACK_STATUS = 43;
	repeated HV_FEEDBACK_TS_VOLTAGE HV_FEEDBACK_TS_VOLTAGE = 44;
	repeated HV_FEEDBACK_MISC_VOLTAGE HV_FEEDBACK_MISC_VOLTAGE = 45;
	repeated HV_FEEDBACK_SD_VOLTAGE HV_FEEDBACK_SD_VOLTAGE = 46;
	repeated HV_IMD_STATUS HV_IMD_STATUS = 47;
	repeated HV_STATUS HV_STATUS = 48;
	repeated HV_SET_STATUS_ECU HV_SET_STATUS_ECU = 49;
	repeated HV_SET_STATUS_HANDCART HV_SET_STATUS_HANDCART = 50;
	repeated HV_BALANCING_STATUS HV_BALANCING_STATUS = 51;
	repeated HV_SET_BALANCING_STATUS_HANDCART HV_SET_BALANCING_STATUS_HANDCART = 52;
	repeated HV_SET_BALANCING_STATUS_STEERING_WHEEL HV_SET_BALANCING_STATUS_STEERING_WHEEL = 53;
	repeated LV_STATUS LV_STATUS = 54;
	repeated LV_RADIATOR_SPEED LV_RADIATOR_SPEED = 55;
	repeated LV_PUMPS_SPEED LV_PUMPS_SPEED = 56;
	repeated LV_SET_RADIATOR_SPEED LV_SET_RADIATOR_SPEED = 57;
	repeated LV_SET_PUMPS_SPEED LV_SET_PUMPS_SPEED = 58;
	repeated LV_ERRORS LV_ERRORS = 59;
	repeated LV_FEEDBACK_TS_VOLTAGE LV_FEEDBACK_TS_VOLTAGE = 60;
	repeated LV_FEEDBACK_SD_VOLTAGE LV_FEEDBACK_SD_VOLTAGE = 61;
	repeated LV_FEEDBACK_ENCLOSURE_VOLTAGE LV_FEEDBACK_ENCLOSURE_VOLTAGE = 62;
	repeated LV_FEEDBACK_GPIO_EXTENDER LV_FEEDBACK_GPIO_EXTENDER = 63;
	repeated LV_CAN_FLASH_REQ_TLM LV_CAN_FLASH_REQ_TLM = 64;
	repeated LV_CAN_FLASH_REQ_STEERING_WHEEL LV_CAN_FLASH_REQ_STEERING_WHEEL = 65;
	repeated LV_CAN_FLASH_ACK LV_CAN_FLASH_ACK = 66;
	repeated LV_INVERTER_CONNECTION_STATUS LV_INVERTER_CONNECTION_STATUS = 67;
	repeated LV_SET_INVERTER_CONNECTION_STATUS LV_SET_INVERTER_CONNECTION_STATUS = 68;
	repeated TLM_STATUS TLM_STATUS = 69;
	repeated TLM_SET_STATUS TLM_SET_STATUS = 70;
	repeated HANDCART_STATUS HANDCART_STATUS = 71;
	repeated HANDCART_SETTINGS HANDCART_SETTINGS = 72;
	repeated HANDCART_SET_SETTINGS HANDCART_SET_SETTINGS = 73;
	repeated ECU_STATUS ECU_STATUS = 74;
	repeated ECU_SET_STATUS ECU_SET_STATUS = 75;
	repeated ECU_INVERTER_STATUS ECU_INVERTER_STATUS = 76;
	repeated ECU_CONTROL_STATUS ECU_CONTROL_STATUS = 77;
	repeated ECU_ERRORS ECU_ERRORS = 78;
	repeated ECU_FEEDBACKS ECU_FEEDBACKS = 79;
	repeated ECU_POWER_MAPS ECU_POWER_MAPS = 80;
	repeated ECU_SET_POWER_MAPS ECU_SET_POWER_MAPS = 81;
	repeated ECU_PTT_STATUS ECU_PTT_STATUS = 82;
	repeated ECU_SET_PTT_STATUS ECU_SET_PTT_STATUS = 83;
	repeated INV_L_REQUEST INV_L_REQUEST = 84;
	repeated CONTROL_OUTPUT CONTROL_OUTPUT = 85;
	repeated CONTROL_STATUS CONTROL_STATUS = 86;
	repeated INV_R_REQUEST INV_R_REQUEST = 87;
	repeated INV_L_RESPONSE INV_L_RESPONSE = 88;
	repeated INV_R_RESPONSE INV_R_RESPONSE = 89;
	repeated LV_CURRENT_BATTERY LV_CURRENT_BATTERY = 90;
	repeated LV_CURRENT_CHARGER LV_CURRENT_CHARGER = 91;
	repeated LV_TOTAL_VOLTAGE LV_TOTAL_VOLTAGE = 92;
	repeated LV_CELLS_VOLTAGE LV_CELLS_VOLTAGE = 93;
	repeated LV_CELLS_VOLTAGE_STATS LV_CELLS_VOLTAGE_STATS = 94;
	repeated LV_CELLS_TEMP LV_CELLS_TEMP = 95;
	repeated LV_CELLS_TEMP_STATS LV_CELLS_TEMP_STATS = 96;
	repeated HV_CURRENT HV_CURRENT = 97;
	repeated HV_POWER HV_POWER = 98;
	repeated HV_ENERGY HV_ENERGY = 99;
	repeated HV_SOC HV_SOC = 100;
	repeated HV_TOTAL_VOLTAGE HV_TOTAL_VOLTAGE = 101;
	repeated HV_CELLS_VOLTAGE HV_CELLS_VOLTAGE = 102;
	repeated HV_CELLS_VOLTAGE_STATS HV_CELLS_VOLTAGE_STATS = 103;
	repeated HV_CELLS_TEMP HV_CELLS_TEMP = 104;
	repeated HV_CELLS_TEMP_STATS HV_CELLS_TEMP_STATS = 105;
	repeated ECU_STEER_ACTUATOR_STATUS ECU_STEER_ACTUATOR_STATUS = 106;
	repeated ECU_SET_STEER_ACTUATOR_STATUS_STEERING_WHEEL ECU_SET_STEER_ACTUATOR_STATUS_STEERING_WHEEL = 107;
	repeated ECU_SET_STEER_ACTUATOR_STATUS_TLM ECU_SET_STEER_ACTUATOR_STATUS_TLM = 108;
	repeated ECU_STEER_ACTUATOR_CURRENT ECU_STEER_ACTUATOR_CURRENT = 109;
	repeated DEBUG_SIGNAL_CRASH_DEBUG DEBUG_SIGNAL_CRASH_DEBUG = 110;
	repeated DEBUG_SIGNAL_CRASH_DEBUG_ACK DEBUG_SIGNAL_CRASH_DEBUG_ACK = 111;
	repeated DEBUG_SIGNAL_1 DEBUG_SIGNAL_1 = 112;
	repeated DEBUG_SIGNAL_2 DEBUG_SIGNAL_2 = 113;
}

