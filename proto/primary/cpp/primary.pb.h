// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primary.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_primary_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_primary_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_primary_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_primary_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[81]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_primary_2eproto;
namespace primary {
class AMBIENT_TEMPERATURE;
class AMBIENT_TEMPERATUREDefaultTypeInternal;
extern AMBIENT_TEMPERATUREDefaultTypeInternal _AMBIENT_TEMPERATURE_default_instance_;
class BMS_HV_JMP_TO_BLT;
class BMS_HV_JMP_TO_BLTDefaultTypeInternal;
extern BMS_HV_JMP_TO_BLTDefaultTypeInternal _BMS_HV_JMP_TO_BLT_default_instance_;
class BMS_LV_JMP_TO_BLT;
class BMS_LV_JMP_TO_BLTDefaultTypeInternal;
extern BMS_LV_JMP_TO_BLTDefaultTypeInternal _BMS_LV_JMP_TO_BLT_default_instance_;
class BRUSA_ACT_I;
class BRUSA_ACT_IDefaultTypeInternal;
extern BRUSA_ACT_IDefaultTypeInternal _BRUSA_ACT_I_default_instance_;
class BRUSA_ACT_II;
class BRUSA_ACT_IIDefaultTypeInternal;
extern BRUSA_ACT_IIDefaultTypeInternal _BRUSA_ACT_II_default_instance_;
class BRUSA_ERR;
class BRUSA_ERRDefaultTypeInternal;
extern BRUSA_ERRDefaultTypeInternal _BRUSA_ERR_default_instance_;
class BRUSA_NLG5_CTL;
class BRUSA_NLG5_CTLDefaultTypeInternal;
extern BRUSA_NLG5_CTLDefaultTypeInternal _BRUSA_NLG5_CTL_default_instance_;
class BRUSA_ST;
class BRUSA_STDefaultTypeInternal;
extern BRUSA_STDefaultTypeInternal _BRUSA_ST_default_instance_;
class BRUSA_TEMP;
class BRUSA_TEMPDefaultTypeInternal;
extern BRUSA_TEMPDefaultTypeInternal _BRUSA_TEMP_default_instance_;
class CAR_STATUS;
class CAR_STATUSDefaultTypeInternal;
extern CAR_STATUSDefaultTypeInternal _CAR_STATUS_default_instance_;
class CONTROL_OUTPUT;
class CONTROL_OUTPUTDefaultTypeInternal;
extern CONTROL_OUTPUTDefaultTypeInternal _CONTROL_OUTPUT_default_instance_;
class COOLING_STATUS;
class COOLING_STATUSDefaultTypeInternal;
extern COOLING_STATUSDefaultTypeInternal _COOLING_STATUS_default_instance_;
class DAS_ERRORS;
class DAS_ERRORSDefaultTypeInternal;
extern DAS_ERRORSDefaultTypeInternal _DAS_ERRORS_default_instance_;
class DAS_VERSION;
class DAS_VERSIONDefaultTypeInternal;
extern DAS_VERSIONDefaultTypeInternal _DAS_VERSION_default_instance_;
class DATA_LOGGER;
class DATA_LOGGERDefaultTypeInternal;
extern DATA_LOGGERDefaultTypeInternal _DATA_LOGGER_default_instance_;
class FLASH_BMS_HV_RX;
class FLASH_BMS_HV_RXDefaultTypeInternal;
extern FLASH_BMS_HV_RXDefaultTypeInternal _FLASH_BMS_HV_RX_default_instance_;
class FLASH_BMS_HV_TX;
class FLASH_BMS_HV_TXDefaultTypeInternal;
extern FLASH_BMS_HV_TXDefaultTypeInternal _FLASH_BMS_HV_TX_default_instance_;
class FLASH_BMS_LV_RX;
class FLASH_BMS_LV_RXDefaultTypeInternal;
extern FLASH_BMS_LV_RXDefaultTypeInternal _FLASH_BMS_LV_RX_default_instance_;
class FLASH_BMS_LV_TX;
class FLASH_BMS_LV_TXDefaultTypeInternal;
extern FLASH_BMS_LV_TXDefaultTypeInternal _FLASH_BMS_LV_TX_default_instance_;
class FLASH_CELLBOARD_0_RX;
class FLASH_CELLBOARD_0_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_0_RXDefaultTypeInternal _FLASH_CELLBOARD_0_RX_default_instance_;
class FLASH_CELLBOARD_0_TX;
class FLASH_CELLBOARD_0_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_0_TXDefaultTypeInternal _FLASH_CELLBOARD_0_TX_default_instance_;
class FLASH_CELLBOARD_1_RX;
class FLASH_CELLBOARD_1_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_1_RXDefaultTypeInternal _FLASH_CELLBOARD_1_RX_default_instance_;
class FLASH_CELLBOARD_1_TX;
class FLASH_CELLBOARD_1_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_1_TXDefaultTypeInternal _FLASH_CELLBOARD_1_TX_default_instance_;
class FLASH_CELLBOARD_2_RX;
class FLASH_CELLBOARD_2_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_2_RXDefaultTypeInternal _FLASH_CELLBOARD_2_RX_default_instance_;
class FLASH_CELLBOARD_2_TX;
class FLASH_CELLBOARD_2_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_2_TXDefaultTypeInternal _FLASH_CELLBOARD_2_TX_default_instance_;
class FLASH_CELLBOARD_3_RX;
class FLASH_CELLBOARD_3_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_3_RXDefaultTypeInternal _FLASH_CELLBOARD_3_RX_default_instance_;
class FLASH_CELLBOARD_3_TX;
class FLASH_CELLBOARD_3_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_3_TXDefaultTypeInternal _FLASH_CELLBOARD_3_TX_default_instance_;
class FLASH_CELLBOARD_4_RX;
class FLASH_CELLBOARD_4_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_4_RXDefaultTypeInternal _FLASH_CELLBOARD_4_RX_default_instance_;
class FLASH_CELLBOARD_4_TX;
class FLASH_CELLBOARD_4_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_4_TXDefaultTypeInternal _FLASH_CELLBOARD_4_TX_default_instance_;
class FLASH_CELLBOARD_5_RX;
class FLASH_CELLBOARD_5_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_5_RXDefaultTypeInternal _FLASH_CELLBOARD_5_RX_default_instance_;
class FLASH_CELLBOARD_5_TX;
class FLASH_CELLBOARD_5_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_5_TXDefaultTypeInternal _FLASH_CELLBOARD_5_TX_default_instance_;
class HANDCART_STATUS;
class HANDCART_STATUSDefaultTypeInternal;
extern HANDCART_STATUSDefaultTypeInternal _HANDCART_STATUS_default_instance_;
class HV_CAN_FORWARD;
class HV_CAN_FORWARDDefaultTypeInternal;
extern HV_CAN_FORWARDDefaultTypeInternal _HV_CAN_FORWARD_default_instance_;
class HV_CAN_FORWARD_STATUS;
class HV_CAN_FORWARD_STATUSDefaultTypeInternal;
extern HV_CAN_FORWARD_STATUSDefaultTypeInternal _HV_CAN_FORWARD_STATUS_default_instance_;
class HV_CELLS_TEMP;
class HV_CELLS_TEMPDefaultTypeInternal;
extern HV_CELLS_TEMPDefaultTypeInternal _HV_CELLS_TEMP_default_instance_;
class HV_CELLS_VOLTAGE;
class HV_CELLS_VOLTAGEDefaultTypeInternal;
extern HV_CELLS_VOLTAGEDefaultTypeInternal _HV_CELLS_VOLTAGE_default_instance_;
class HV_CELL_BALANCING_STATUS;
class HV_CELL_BALANCING_STATUSDefaultTypeInternal;
extern HV_CELL_BALANCING_STATUSDefaultTypeInternal _HV_CELL_BALANCING_STATUS_default_instance_;
class HV_CURRENT;
class HV_CURRENTDefaultTypeInternal;
extern HV_CURRENTDefaultTypeInternal _HV_CURRENT_default_instance_;
class HV_ERRORS;
class HV_ERRORSDefaultTypeInternal;
extern HV_ERRORSDefaultTypeInternal _HV_ERRORS_default_instance_;
class HV_FANS_OVERRIDE;
class HV_FANS_OVERRIDEDefaultTypeInternal;
extern HV_FANS_OVERRIDEDefaultTypeInternal _HV_FANS_OVERRIDE_default_instance_;
class HV_FANS_OVERRIDE_STATUS;
class HV_FANS_OVERRIDE_STATUSDefaultTypeInternal;
extern HV_FANS_OVERRIDE_STATUSDefaultTypeInternal _HV_FANS_OVERRIDE_STATUS_default_instance_;
class HV_FEEDBACKS_STATUS;
class HV_FEEDBACKS_STATUSDefaultTypeInternal;
extern HV_FEEDBACKS_STATUSDefaultTypeInternal _HV_FEEDBACKS_STATUS_default_instance_;
class HV_IMD_STATUS;
class HV_IMD_STATUSDefaultTypeInternal;
extern HV_IMD_STATUSDefaultTypeInternal _HV_IMD_STATUS_default_instance_;
class HV_TEMP;
class HV_TEMPDefaultTypeInternal;
extern HV_TEMPDefaultTypeInternal _HV_TEMP_default_instance_;
class HV_VERSION;
class HV_VERSIONDefaultTypeInternal;
extern HV_VERSIONDefaultTypeInternal _HV_VERSION_default_instance_;
class HV_VOLTAGE;
class HV_VOLTAGEDefaultTypeInternal;
extern HV_VOLTAGEDefaultTypeInternal _HV_VOLTAGE_default_instance_;
class INVERTER_CONNECTION_STATUS;
class INVERTER_CONNECTION_STATUSDefaultTypeInternal;
extern INVERTER_CONNECTION_STATUSDefaultTypeInternal _INVERTER_CONNECTION_STATUS_default_instance_;
class INV_L_REQUEST;
class INV_L_REQUESTDefaultTypeInternal;
extern INV_L_REQUESTDefaultTypeInternal _INV_L_REQUEST_default_instance_;
class INV_L_RESPONSE;
class INV_L_RESPONSEDefaultTypeInternal;
extern INV_L_RESPONSEDefaultTypeInternal _INV_L_RESPONSE_default_instance_;
class INV_R_REQUEST;
class INV_R_REQUESTDefaultTypeInternal;
extern INV_R_REQUESTDefaultTypeInternal _INV_R_REQUEST_default_instance_;
class INV_R_RESPONSE;
class INV_R_RESPONSEDefaultTypeInternal;
extern INV_R_RESPONSEDefaultTypeInternal _INV_R_RESPONSE_default_instance_;
class LC_RESET;
class LC_RESETDefaultTypeInternal;
extern LC_RESETDefaultTypeInternal _LC_RESET_default_instance_;
class LV_CURRENT;
class LV_CURRENTDefaultTypeInternal;
extern LV_CURRENTDefaultTypeInternal _LV_CURRENT_default_instance_;
class LV_ERRORS;
class LV_ERRORSDefaultTypeInternal;
extern LV_ERRORSDefaultTypeInternal _LV_ERRORS_default_instance_;
class LV_TEMPERATURE;
class LV_TEMPERATUREDefaultTypeInternal;
extern LV_TEMPERATUREDefaultTypeInternal _LV_TEMPERATURE_default_instance_;
class LV_TOTAL_VOLTAGE;
class LV_TOTAL_VOLTAGEDefaultTypeInternal;
extern LV_TOTAL_VOLTAGEDefaultTypeInternal _LV_TOTAL_VOLTAGE_default_instance_;
class LV_VERSION;
class LV_VERSIONDefaultTypeInternal;
extern LV_VERSIONDefaultTypeInternal _LV_VERSION_default_instance_;
class LV_VOLTAGE;
class LV_VOLTAGEDefaultTypeInternal;
extern LV_VOLTAGEDefaultTypeInternal _LV_VOLTAGE_default_instance_;
class MARKER;
class MARKERDefaultTypeInternal;
extern MARKERDefaultTypeInternal _MARKER_default_instance_;
class Pack;
class PackDefaultTypeInternal;
extern PackDefaultTypeInternal _Pack_default_instance_;
class SET_CAR_STATUS;
class SET_CAR_STATUSDefaultTypeInternal;
extern SET_CAR_STATUSDefaultTypeInternal _SET_CAR_STATUS_default_instance_;
class SET_CELL_BALANCING_STATUS;
class SET_CELL_BALANCING_STATUSDefaultTypeInternal;
extern SET_CELL_BALANCING_STATUSDefaultTypeInternal _SET_CELL_BALANCING_STATUS_default_instance_;
class SET_INVERTER_CONNECTION_STATUS;
class SET_INVERTER_CONNECTION_STATUSDefaultTypeInternal;
extern SET_INVERTER_CONNECTION_STATUSDefaultTypeInternal _SET_INVERTER_CONNECTION_STATUS_default_instance_;
class SET_PEDALS_RANGE;
class SET_PEDALS_RANGEDefaultTypeInternal;
extern SET_PEDALS_RANGEDefaultTypeInternal _SET_PEDALS_RANGE_default_instance_;
class SET_PUMPS_SPEED;
class SET_PUMPS_SPEEDDefaultTypeInternal;
extern SET_PUMPS_SPEEDDefaultTypeInternal _SET_PUMPS_SPEED_default_instance_;
class SET_RADIATOR_SPEED;
class SET_RADIATOR_SPEEDDefaultTypeInternal;
extern SET_RADIATOR_SPEEDDefaultTypeInternal _SET_RADIATOR_SPEED_default_instance_;
class SET_STEERING_ANGLE_RANGE;
class SET_STEERING_ANGLE_RANGEDefaultTypeInternal;
extern SET_STEERING_ANGLE_RANGEDefaultTypeInternal _SET_STEERING_ANGLE_RANGE_default_instance_;
class SET_TLM_STATUS;
class SET_TLM_STATUSDefaultTypeInternal;
extern SET_TLM_STATUSDefaultTypeInternal _SET_TLM_STATUS_default_instance_;
class SET_TS_STATUS_DAS;
class SET_TS_STATUS_DASDefaultTypeInternal;
extern SET_TS_STATUS_DASDefaultTypeInternal _SET_TS_STATUS_DAS_default_instance_;
class SET_TS_STATUS_HANDCART;
class SET_TS_STATUS_HANDCARTDefaultTypeInternal;
extern SET_TS_STATUS_HANDCARTDefaultTypeInternal _SET_TS_STATUS_HANDCART_default_instance_;
class SHUTDOWN_STATUS;
class SHUTDOWN_STATUSDefaultTypeInternal;
extern SHUTDOWN_STATUSDefaultTypeInternal _SHUTDOWN_STATUS_default_instance_;
class SPEED;
class SPEEDDefaultTypeInternal;
extern SPEEDDefaultTypeInternal _SPEED_default_instance_;
class STEER_STATUS;
class STEER_STATUSDefaultTypeInternal;
extern STEER_STATUSDefaultTypeInternal _STEER_STATUS_default_instance_;
class STEER_SYSTEM_STATUS;
class STEER_SYSTEM_STATUSDefaultTypeInternal;
extern STEER_SYSTEM_STATUSDefaultTypeInternal _STEER_SYSTEM_STATUS_default_instance_;
class STEER_VERSION;
class STEER_VERSIONDefaultTypeInternal;
extern STEER_VERSIONDefaultTypeInternal _STEER_VERSION_default_instance_;
class TIMESTAMP;
class TIMESTAMPDefaultTypeInternal;
extern TIMESTAMPDefaultTypeInternal _TIMESTAMP_default_instance_;
class TLM_STATUS;
class TLM_STATUSDefaultTypeInternal;
extern TLM_STATUSDefaultTypeInternal _TLM_STATUS_default_instance_;
class TLM_VERSION;
class TLM_VERSIONDefaultTypeInternal;
extern TLM_VERSIONDefaultTypeInternal _TLM_VERSION_default_instance_;
class TS_STATUS_DAS;
class TS_STATUS_DASDefaultTypeInternal;
extern TS_STATUS_DASDefaultTypeInternal _TS_STATUS_DAS_default_instance_;
class TS_STATUS_HANDCART;
class TS_STATUS_HANDCARTDefaultTypeInternal;
extern TS_STATUS_HANDCARTDefaultTypeInternal _TS_STATUS_HANDCART_default_instance_;
class TS_STATUS_STEER;
class TS_STATUS_STEERDefaultTypeInternal;
extern TS_STATUS_STEERDefaultTypeInternal _TS_STATUS_STEER_default_instance_;
}  // namespace primary
PROTOBUF_NAMESPACE_OPEN
template<> ::primary::AMBIENT_TEMPERATURE* Arena::CreateMaybeMessage<::primary::AMBIENT_TEMPERATURE>(Arena*);
template<> ::primary::BMS_HV_JMP_TO_BLT* Arena::CreateMaybeMessage<::primary::BMS_HV_JMP_TO_BLT>(Arena*);
template<> ::primary::BMS_LV_JMP_TO_BLT* Arena::CreateMaybeMessage<::primary::BMS_LV_JMP_TO_BLT>(Arena*);
template<> ::primary::BRUSA_ACT_I* Arena::CreateMaybeMessage<::primary::BRUSA_ACT_I>(Arena*);
template<> ::primary::BRUSA_ACT_II* Arena::CreateMaybeMessage<::primary::BRUSA_ACT_II>(Arena*);
template<> ::primary::BRUSA_ERR* Arena::CreateMaybeMessage<::primary::BRUSA_ERR>(Arena*);
template<> ::primary::BRUSA_NLG5_CTL* Arena::CreateMaybeMessage<::primary::BRUSA_NLG5_CTL>(Arena*);
template<> ::primary::BRUSA_ST* Arena::CreateMaybeMessage<::primary::BRUSA_ST>(Arena*);
template<> ::primary::BRUSA_TEMP* Arena::CreateMaybeMessage<::primary::BRUSA_TEMP>(Arena*);
template<> ::primary::CAR_STATUS* Arena::CreateMaybeMessage<::primary::CAR_STATUS>(Arena*);
template<> ::primary::CONTROL_OUTPUT* Arena::CreateMaybeMessage<::primary::CONTROL_OUTPUT>(Arena*);
template<> ::primary::COOLING_STATUS* Arena::CreateMaybeMessage<::primary::COOLING_STATUS>(Arena*);
template<> ::primary::DAS_ERRORS* Arena::CreateMaybeMessage<::primary::DAS_ERRORS>(Arena*);
template<> ::primary::DAS_VERSION* Arena::CreateMaybeMessage<::primary::DAS_VERSION>(Arena*);
template<> ::primary::DATA_LOGGER* Arena::CreateMaybeMessage<::primary::DATA_LOGGER>(Arena*);
template<> ::primary::FLASH_BMS_HV_RX* Arena::CreateMaybeMessage<::primary::FLASH_BMS_HV_RX>(Arena*);
template<> ::primary::FLASH_BMS_HV_TX* Arena::CreateMaybeMessage<::primary::FLASH_BMS_HV_TX>(Arena*);
template<> ::primary::FLASH_BMS_LV_RX* Arena::CreateMaybeMessage<::primary::FLASH_BMS_LV_RX>(Arena*);
template<> ::primary::FLASH_BMS_LV_TX* Arena::CreateMaybeMessage<::primary::FLASH_BMS_LV_TX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_0_RX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_0_RX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_0_TX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_0_TX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_1_RX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_1_RX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_1_TX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_1_TX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_2_RX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_2_RX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_2_TX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_2_TX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_3_RX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_3_RX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_3_TX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_3_TX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_4_RX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_4_RX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_4_TX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_4_TX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_5_RX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_5_RX>(Arena*);
template<> ::primary::FLASH_CELLBOARD_5_TX* Arena::CreateMaybeMessage<::primary::FLASH_CELLBOARD_5_TX>(Arena*);
template<> ::primary::HANDCART_STATUS* Arena::CreateMaybeMessage<::primary::HANDCART_STATUS>(Arena*);
template<> ::primary::HV_CAN_FORWARD* Arena::CreateMaybeMessage<::primary::HV_CAN_FORWARD>(Arena*);
template<> ::primary::HV_CAN_FORWARD_STATUS* Arena::CreateMaybeMessage<::primary::HV_CAN_FORWARD_STATUS>(Arena*);
template<> ::primary::HV_CELLS_TEMP* Arena::CreateMaybeMessage<::primary::HV_CELLS_TEMP>(Arena*);
template<> ::primary::HV_CELLS_VOLTAGE* Arena::CreateMaybeMessage<::primary::HV_CELLS_VOLTAGE>(Arena*);
template<> ::primary::HV_CELL_BALANCING_STATUS* Arena::CreateMaybeMessage<::primary::HV_CELL_BALANCING_STATUS>(Arena*);
template<> ::primary::HV_CURRENT* Arena::CreateMaybeMessage<::primary::HV_CURRENT>(Arena*);
template<> ::primary::HV_ERRORS* Arena::CreateMaybeMessage<::primary::HV_ERRORS>(Arena*);
template<> ::primary::HV_FANS_OVERRIDE* Arena::CreateMaybeMessage<::primary::HV_FANS_OVERRIDE>(Arena*);
template<> ::primary::HV_FANS_OVERRIDE_STATUS* Arena::CreateMaybeMessage<::primary::HV_FANS_OVERRIDE_STATUS>(Arena*);
template<> ::primary::HV_FEEDBACKS_STATUS* Arena::CreateMaybeMessage<::primary::HV_FEEDBACKS_STATUS>(Arena*);
template<> ::primary::HV_IMD_STATUS* Arena::CreateMaybeMessage<::primary::HV_IMD_STATUS>(Arena*);
template<> ::primary::HV_TEMP* Arena::CreateMaybeMessage<::primary::HV_TEMP>(Arena*);
template<> ::primary::HV_VERSION* Arena::CreateMaybeMessage<::primary::HV_VERSION>(Arena*);
template<> ::primary::HV_VOLTAGE* Arena::CreateMaybeMessage<::primary::HV_VOLTAGE>(Arena*);
template<> ::primary::INVERTER_CONNECTION_STATUS* Arena::CreateMaybeMessage<::primary::INVERTER_CONNECTION_STATUS>(Arena*);
template<> ::primary::INV_L_REQUEST* Arena::CreateMaybeMessage<::primary::INV_L_REQUEST>(Arena*);
template<> ::primary::INV_L_RESPONSE* Arena::CreateMaybeMessage<::primary::INV_L_RESPONSE>(Arena*);
template<> ::primary::INV_R_REQUEST* Arena::CreateMaybeMessage<::primary::INV_R_REQUEST>(Arena*);
template<> ::primary::INV_R_RESPONSE* Arena::CreateMaybeMessage<::primary::INV_R_RESPONSE>(Arena*);
template<> ::primary::LC_RESET* Arena::CreateMaybeMessage<::primary::LC_RESET>(Arena*);
template<> ::primary::LV_CURRENT* Arena::CreateMaybeMessage<::primary::LV_CURRENT>(Arena*);
template<> ::primary::LV_ERRORS* Arena::CreateMaybeMessage<::primary::LV_ERRORS>(Arena*);
template<> ::primary::LV_TEMPERATURE* Arena::CreateMaybeMessage<::primary::LV_TEMPERATURE>(Arena*);
template<> ::primary::LV_TOTAL_VOLTAGE* Arena::CreateMaybeMessage<::primary::LV_TOTAL_VOLTAGE>(Arena*);
template<> ::primary::LV_VERSION* Arena::CreateMaybeMessage<::primary::LV_VERSION>(Arena*);
template<> ::primary::LV_VOLTAGE* Arena::CreateMaybeMessage<::primary::LV_VOLTAGE>(Arena*);
template<> ::primary::MARKER* Arena::CreateMaybeMessage<::primary::MARKER>(Arena*);
template<> ::primary::Pack* Arena::CreateMaybeMessage<::primary::Pack>(Arena*);
template<> ::primary::SET_CAR_STATUS* Arena::CreateMaybeMessage<::primary::SET_CAR_STATUS>(Arena*);
template<> ::primary::SET_CELL_BALANCING_STATUS* Arena::CreateMaybeMessage<::primary::SET_CELL_BALANCING_STATUS>(Arena*);
template<> ::primary::SET_INVERTER_CONNECTION_STATUS* Arena::CreateMaybeMessage<::primary::SET_INVERTER_CONNECTION_STATUS>(Arena*);
template<> ::primary::SET_PEDALS_RANGE* Arena::CreateMaybeMessage<::primary::SET_PEDALS_RANGE>(Arena*);
template<> ::primary::SET_PUMPS_SPEED* Arena::CreateMaybeMessage<::primary::SET_PUMPS_SPEED>(Arena*);
template<> ::primary::SET_RADIATOR_SPEED* Arena::CreateMaybeMessage<::primary::SET_RADIATOR_SPEED>(Arena*);
template<> ::primary::SET_STEERING_ANGLE_RANGE* Arena::CreateMaybeMessage<::primary::SET_STEERING_ANGLE_RANGE>(Arena*);
template<> ::primary::SET_TLM_STATUS* Arena::CreateMaybeMessage<::primary::SET_TLM_STATUS>(Arena*);
template<> ::primary::SET_TS_STATUS_DAS* Arena::CreateMaybeMessage<::primary::SET_TS_STATUS_DAS>(Arena*);
template<> ::primary::SET_TS_STATUS_HANDCART* Arena::CreateMaybeMessage<::primary::SET_TS_STATUS_HANDCART>(Arena*);
template<> ::primary::SHUTDOWN_STATUS* Arena::CreateMaybeMessage<::primary::SHUTDOWN_STATUS>(Arena*);
template<> ::primary::SPEED* Arena::CreateMaybeMessage<::primary::SPEED>(Arena*);
template<> ::primary::STEER_STATUS* Arena::CreateMaybeMessage<::primary::STEER_STATUS>(Arena*);
template<> ::primary::STEER_SYSTEM_STATUS* Arena::CreateMaybeMessage<::primary::STEER_SYSTEM_STATUS>(Arena*);
template<> ::primary::STEER_VERSION* Arena::CreateMaybeMessage<::primary::STEER_VERSION>(Arena*);
template<> ::primary::TIMESTAMP* Arena::CreateMaybeMessage<::primary::TIMESTAMP>(Arena*);
template<> ::primary::TLM_STATUS* Arena::CreateMaybeMessage<::primary::TLM_STATUS>(Arena*);
template<> ::primary::TLM_VERSION* Arena::CreateMaybeMessage<::primary::TLM_VERSION>(Arena*);
template<> ::primary::TS_STATUS_DAS* Arena::CreateMaybeMessage<::primary::TS_STATUS_DAS>(Arena*);
template<> ::primary::TS_STATUS_HANDCART* Arena::CreateMaybeMessage<::primary::TS_STATUS_HANDCART>(Arena*);
template<> ::primary::TS_STATUS_STEER* Arena::CreateMaybeMessage<::primary::TS_STATUS_STEER>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace primary {

enum RaceType : int {
  RaceType_ACCELERATION = 0,
  RaceType_SKIDPAD = 1,
  RaceType_AUTOCROSS = 2,
  RaceType_ENDURANCE = 3,
  RaceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  RaceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool RaceType_IsValid(int value);
constexpr RaceType RaceType_MIN = RaceType_ACCELERATION;
constexpr RaceType RaceType_MAX = RaceType_ENDURANCE;
constexpr int RaceType_ARRAYSIZE = RaceType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RaceType_descriptor();
template<typename T>
inline const std::string& RaceType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RaceType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RaceType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RaceType_descriptor(), enum_t_value);
}
inline bool RaceType_Parse(
    const std::string& name, RaceType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RaceType>(
    RaceType_descriptor(), name, value);
}
enum InverterStatus : int {
  InverterStatus_OFF = 0,
  InverterStatus_IDLE = 1,
  InverterStatus_ON = 2,
  InverterStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  InverterStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool InverterStatus_IsValid(int value);
constexpr InverterStatus InverterStatus_MIN = InverterStatus_OFF;
constexpr InverterStatus InverterStatus_MAX = InverterStatus_ON;
constexpr int InverterStatus_ARRAYSIZE = InverterStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InverterStatus_descriptor();
template<typename T>
inline const std::string& InverterStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, InverterStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function InverterStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    InverterStatus_descriptor(), enum_t_value);
}
inline bool InverterStatus_Parse(
    const std::string& name, InverterStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<InverterStatus>(
    InverterStatus_descriptor(), name, value);
}
enum CarStatus : int {
  CarStatus_IDLE = 0,
  CarStatus_PRE_SETUP = 1,
  CarStatus_TS_ON = 2,
  CarStatus_POST_SETUP = 3,
  CarStatus_DRIVE = 4,
  CarStatus_TEARDOWN = 5,
  CarStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CarStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CarStatus_IsValid(int value);
constexpr CarStatus CarStatus_MIN = CarStatus_IDLE;
constexpr CarStatus CarStatus_MAX = CarStatus_TEARDOWN;
constexpr int CarStatus_ARRAYSIZE = CarStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CarStatus_descriptor();
template<typename T>
inline const std::string& CarStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CarStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CarStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CarStatus_descriptor(), enum_t_value);
}
inline bool CarStatus_Parse(
    const std::string& name, CarStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CarStatus>(
    CarStatus_descriptor(), name, value);
}
enum Toggle : int {
  Toggle_OFF = 0,
  Toggle_ON = 1,
  Toggle_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Toggle_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Toggle_IsValid(int value);
constexpr Toggle Toggle_MIN = Toggle_OFF;
constexpr Toggle Toggle_MAX = Toggle_ON;
constexpr int Toggle_ARRAYSIZE = Toggle_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Toggle_descriptor();
template<typename T>
inline const std::string& Toggle_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Toggle>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Toggle_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Toggle_descriptor(), enum_t_value);
}
inline bool Toggle_Parse(
    const std::string& name, Toggle* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Toggle>(
    Toggle_descriptor(), name, value);
}
enum TsStatus : int {
  TsStatus_OFF = 0,
  TsStatus_PRECHARGE = 1,
  TsStatus_ON = 2,
  TsStatus_FATAL = 3,
  TsStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  TsStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool TsStatus_IsValid(int value);
constexpr TsStatus TsStatus_MIN = TsStatus_OFF;
constexpr TsStatus TsStatus_MAX = TsStatus_FATAL;
constexpr int TsStatus_ARRAYSIZE = TsStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TsStatus_descriptor();
template<typename T>
inline const std::string& TsStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TsStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TsStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TsStatus_descriptor(), enum_t_value);
}
inline bool TsStatus_Parse(
    const std::string& name, TsStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TsStatus>(
    TsStatus_descriptor(), name, value);
}
enum SetCarStatus : int {
  SetCarStatus_IDLE = 0,
  SetCarStatus_READY = 1,
  SetCarStatus_DRIVE = 2,
  SetCarStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SetCarStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SetCarStatus_IsValid(int value);
constexpr SetCarStatus SetCarStatus_MIN = SetCarStatus_IDLE;
constexpr SetCarStatus SetCarStatus_MAX = SetCarStatus_DRIVE;
constexpr int SetCarStatus_ARRAYSIZE = SetCarStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetCarStatus_descriptor();
template<typename T>
inline const std::string& SetCarStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SetCarStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SetCarStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SetCarStatus_descriptor(), enum_t_value);
}
inline bool SetCarStatus_Parse(
    const std::string& name, SetCarStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SetCarStatus>(
    SetCarStatus_descriptor(), name, value);
}
enum Bound : int {
  Bound_SET_MAX = 0,
  Bound_SET_MIN = 1,
  Bound_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Bound_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Bound_IsValid(int value);
constexpr Bound Bound_MIN = Bound_SET_MAX;
constexpr Bound Bound_MAX = Bound_SET_MIN;
constexpr int Bound_ARRAYSIZE = Bound_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bound_descriptor();
template<typename T>
inline const std::string& Bound_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Bound>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Bound_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Bound_descriptor(), enum_t_value);
}
inline bool Bound_Parse(
    const std::string& name, Bound* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Bound>(
    Bound_descriptor(), name, value);
}
enum Pedal : int {
  Pedal_ACCELERATOR = 0,
  Pedal_BRAKE = 1,
  Pedal_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Pedal_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Pedal_IsValid(int value);
constexpr Pedal Pedal_MIN = Pedal_ACCELERATOR;
constexpr Pedal Pedal_MAX = Pedal_BRAKE;
constexpr int Pedal_ARRAYSIZE = Pedal_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Pedal_descriptor();
template<typename T>
inline const std::string& Pedal_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Pedal>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Pedal_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Pedal_descriptor(), enum_t_value);
}
inline bool Pedal_Parse(
    const std::string& name, Pedal* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Pedal>(
    Pedal_descriptor(), name, value);
}
enum ImdStatus : int {
  ImdStatus_IMD_SC = 0,
  ImdStatus_IMD_NORMAL = 1,
  ImdStatus_IMD_UNDER_VOLTAGE = 2,
  ImdStatus_IMD_START_MEASURE = 3,
  ImdStatus_IMD_DEVICE_ERROR = 4,
  ImdStatus_IMD_EARTH_FAULT = 5,
  ImdStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ImdStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ImdStatus_IsValid(int value);
constexpr ImdStatus ImdStatus_MIN = ImdStatus_IMD_SC;
constexpr ImdStatus ImdStatus_MAX = ImdStatus_IMD_EARTH_FAULT;
constexpr int ImdStatus_ARRAYSIZE = ImdStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImdStatus_descriptor();
template<typename T>
inline const std::string& ImdStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ImdStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ImdStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ImdStatus_descriptor(), enum_t_value);
}
inline bool ImdStatus_Parse(
    const std::string& name, ImdStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ImdStatus>(
    ImdStatus_descriptor(), name, value);
}
// ===================================================================

class BMS_HV_JMP_TO_BLT PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BMS_HV_JMP_TO_BLT) */ {
 public:
  inline BMS_HV_JMP_TO_BLT() : BMS_HV_JMP_TO_BLT(nullptr) {};
  virtual ~BMS_HV_JMP_TO_BLT();

  BMS_HV_JMP_TO_BLT(const BMS_HV_JMP_TO_BLT& from);
  BMS_HV_JMP_TO_BLT(BMS_HV_JMP_TO_BLT&& from) noexcept
    : BMS_HV_JMP_TO_BLT() {
    *this = ::std::move(from);
  }

  inline BMS_HV_JMP_TO_BLT& operator=(const BMS_HV_JMP_TO_BLT& from) {
    CopyFrom(from);
    return *this;
  }
  inline BMS_HV_JMP_TO_BLT& operator=(BMS_HV_JMP_TO_BLT&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BMS_HV_JMP_TO_BLT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BMS_HV_JMP_TO_BLT* internal_default_instance() {
    return reinterpret_cast<const BMS_HV_JMP_TO_BLT*>(
               &_BMS_HV_JMP_TO_BLT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BMS_HV_JMP_TO_BLT& a, BMS_HV_JMP_TO_BLT& b) {
    a.Swap(&b);
  }
  inline void Swap(BMS_HV_JMP_TO_BLT* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BMS_HV_JMP_TO_BLT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BMS_HV_JMP_TO_BLT* New() const final {
    return CreateMaybeMessage<BMS_HV_JMP_TO_BLT>(nullptr);
  }

  BMS_HV_JMP_TO_BLT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BMS_HV_JMP_TO_BLT>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BMS_HV_JMP_TO_BLT& from);
  void MergeFrom(const BMS_HV_JMP_TO_BLT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BMS_HV_JMP_TO_BLT* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BMS_HV_JMP_TO_BLT";
  }
  protected:
  explicit BMS_HV_JMP_TO_BLT(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BMS_HV_JMP_TO_BLT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class BMS_LV_JMP_TO_BLT PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BMS_LV_JMP_TO_BLT) */ {
 public:
  inline BMS_LV_JMP_TO_BLT() : BMS_LV_JMP_TO_BLT(nullptr) {};
  virtual ~BMS_LV_JMP_TO_BLT();

  BMS_LV_JMP_TO_BLT(const BMS_LV_JMP_TO_BLT& from);
  BMS_LV_JMP_TO_BLT(BMS_LV_JMP_TO_BLT&& from) noexcept
    : BMS_LV_JMP_TO_BLT() {
    *this = ::std::move(from);
  }

  inline BMS_LV_JMP_TO_BLT& operator=(const BMS_LV_JMP_TO_BLT& from) {
    CopyFrom(from);
    return *this;
  }
  inline BMS_LV_JMP_TO_BLT& operator=(BMS_LV_JMP_TO_BLT&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BMS_LV_JMP_TO_BLT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BMS_LV_JMP_TO_BLT* internal_default_instance() {
    return reinterpret_cast<const BMS_LV_JMP_TO_BLT*>(
               &_BMS_LV_JMP_TO_BLT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BMS_LV_JMP_TO_BLT& a, BMS_LV_JMP_TO_BLT& b) {
    a.Swap(&b);
  }
  inline void Swap(BMS_LV_JMP_TO_BLT* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BMS_LV_JMP_TO_BLT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BMS_LV_JMP_TO_BLT* New() const final {
    return CreateMaybeMessage<BMS_LV_JMP_TO_BLT>(nullptr);
  }

  BMS_LV_JMP_TO_BLT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BMS_LV_JMP_TO_BLT>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BMS_LV_JMP_TO_BLT& from);
  void MergeFrom(const BMS_LV_JMP_TO_BLT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BMS_LV_JMP_TO_BLT* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BMS_LV_JMP_TO_BLT";
  }
  protected:
  explicit BMS_LV_JMP_TO_BLT(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BMS_LV_JMP_TO_BLT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class STEER_VERSION PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.STEER_VERSION) */ {
 public:
  inline STEER_VERSION() : STEER_VERSION(nullptr) {};
  virtual ~STEER_VERSION();

  STEER_VERSION(const STEER_VERSION& from);
  STEER_VERSION(STEER_VERSION&& from) noexcept
    : STEER_VERSION() {
    *this = ::std::move(from);
  }

  inline STEER_VERSION& operator=(const STEER_VERSION& from) {
    CopyFrom(from);
    return *this;
  }
  inline STEER_VERSION& operator=(STEER_VERSION&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const STEER_VERSION& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const STEER_VERSION* internal_default_instance() {
    return reinterpret_cast<const STEER_VERSION*>(
               &_STEER_VERSION_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(STEER_VERSION& a, STEER_VERSION& b) {
    a.Swap(&b);
  }
  inline void Swap(STEER_VERSION* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STEER_VERSION* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline STEER_VERSION* New() const final {
    return CreateMaybeMessage<STEER_VERSION>(nullptr);
  }

  STEER_VERSION* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<STEER_VERSION>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const STEER_VERSION& from);
  void MergeFrom(const STEER_VERSION& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(STEER_VERSION* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.STEER_VERSION";
  }
  protected:
  explicit STEER_VERSION(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentVersionFieldNumber = 1,
    kCanlibBuildTimeFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 component_version = 1;
  void clear_component_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version() const;
  void set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_component_version() const;
  void _internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 canlib_build_time = 2;
  void clear_canlib_build_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time() const;
  void set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_canlib_build_time() const;
  void _internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.STEER_VERSION)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class DAS_VERSION PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.DAS_VERSION) */ {
 public:
  inline DAS_VERSION() : DAS_VERSION(nullptr) {};
  virtual ~DAS_VERSION();

  DAS_VERSION(const DAS_VERSION& from);
  DAS_VERSION(DAS_VERSION&& from) noexcept
    : DAS_VERSION() {
    *this = ::std::move(from);
  }

  inline DAS_VERSION& operator=(const DAS_VERSION& from) {
    CopyFrom(from);
    return *this;
  }
  inline DAS_VERSION& operator=(DAS_VERSION&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DAS_VERSION& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DAS_VERSION* internal_default_instance() {
    return reinterpret_cast<const DAS_VERSION*>(
               &_DAS_VERSION_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DAS_VERSION& a, DAS_VERSION& b) {
    a.Swap(&b);
  }
  inline void Swap(DAS_VERSION* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DAS_VERSION* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DAS_VERSION* New() const final {
    return CreateMaybeMessage<DAS_VERSION>(nullptr);
  }

  DAS_VERSION* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DAS_VERSION>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DAS_VERSION& from);
  void MergeFrom(const DAS_VERSION& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DAS_VERSION* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.DAS_VERSION";
  }
  protected:
  explicit DAS_VERSION(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentVersionFieldNumber = 1,
    kCanlibBuildTimeFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 component_version = 1;
  void clear_component_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version() const;
  void set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_component_version() const;
  void _internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 canlib_build_time = 2;
  void clear_canlib_build_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time() const;
  void set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_canlib_build_time() const;
  void _internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.DAS_VERSION)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_VERSION PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_VERSION) */ {
 public:
  inline HV_VERSION() : HV_VERSION(nullptr) {};
  virtual ~HV_VERSION();

  HV_VERSION(const HV_VERSION& from);
  HV_VERSION(HV_VERSION&& from) noexcept
    : HV_VERSION() {
    *this = ::std::move(from);
  }

  inline HV_VERSION& operator=(const HV_VERSION& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_VERSION& operator=(HV_VERSION&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_VERSION& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_VERSION* internal_default_instance() {
    return reinterpret_cast<const HV_VERSION*>(
               &_HV_VERSION_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(HV_VERSION& a, HV_VERSION& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_VERSION* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_VERSION* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_VERSION* New() const final {
    return CreateMaybeMessage<HV_VERSION>(nullptr);
  }

  HV_VERSION* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_VERSION>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_VERSION& from);
  void MergeFrom(const HV_VERSION& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_VERSION* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_VERSION";
  }
  protected:
  explicit HV_VERSION(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentVersionFieldNumber = 1,
    kCanlibBuildTimeFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 component_version = 1;
  void clear_component_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version() const;
  void set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_component_version() const;
  void _internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 canlib_build_time = 2;
  void clear_canlib_build_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time() const;
  void set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_canlib_build_time() const;
  void _internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_VERSION)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class LV_VERSION PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.LV_VERSION) */ {
 public:
  inline LV_VERSION() : LV_VERSION(nullptr) {};
  virtual ~LV_VERSION();

  LV_VERSION(const LV_VERSION& from);
  LV_VERSION(LV_VERSION&& from) noexcept
    : LV_VERSION() {
    *this = ::std::move(from);
  }

  inline LV_VERSION& operator=(const LV_VERSION& from) {
    CopyFrom(from);
    return *this;
  }
  inline LV_VERSION& operator=(LV_VERSION&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LV_VERSION& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LV_VERSION* internal_default_instance() {
    return reinterpret_cast<const LV_VERSION*>(
               &_LV_VERSION_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(LV_VERSION& a, LV_VERSION& b) {
    a.Swap(&b);
  }
  inline void Swap(LV_VERSION* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LV_VERSION* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LV_VERSION* New() const final {
    return CreateMaybeMessage<LV_VERSION>(nullptr);
  }

  LV_VERSION* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LV_VERSION>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LV_VERSION& from);
  void MergeFrom(const LV_VERSION& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LV_VERSION* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.LV_VERSION";
  }
  protected:
  explicit LV_VERSION(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentVersionFieldNumber = 1,
    kCanlibBuildTimeFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 component_version = 1;
  void clear_component_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version() const;
  void set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_component_version() const;
  void _internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 canlib_build_time = 2;
  void clear_canlib_build_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time() const;
  void set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_canlib_build_time() const;
  void _internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.LV_VERSION)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class TLM_VERSION PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.TLM_VERSION) */ {
 public:
  inline TLM_VERSION() : TLM_VERSION(nullptr) {};
  virtual ~TLM_VERSION();

  TLM_VERSION(const TLM_VERSION& from);
  TLM_VERSION(TLM_VERSION&& from) noexcept
    : TLM_VERSION() {
    *this = ::std::move(from);
  }

  inline TLM_VERSION& operator=(const TLM_VERSION& from) {
    CopyFrom(from);
    return *this;
  }
  inline TLM_VERSION& operator=(TLM_VERSION&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TLM_VERSION& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TLM_VERSION* internal_default_instance() {
    return reinterpret_cast<const TLM_VERSION*>(
               &_TLM_VERSION_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(TLM_VERSION& a, TLM_VERSION& b) {
    a.Swap(&b);
  }
  inline void Swap(TLM_VERSION* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TLM_VERSION* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TLM_VERSION* New() const final {
    return CreateMaybeMessage<TLM_VERSION>(nullptr);
  }

  TLM_VERSION* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TLM_VERSION>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TLM_VERSION& from);
  void MergeFrom(const TLM_VERSION& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TLM_VERSION* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.TLM_VERSION";
  }
  protected:
  explicit TLM_VERSION(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentVersionFieldNumber = 1,
    kCanlibBuildTimeFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 component_version = 1;
  void clear_component_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version() const;
  void set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_component_version() const;
  void _internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 canlib_build_time = 2;
  void clear_canlib_build_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time() const;
  void set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_canlib_build_time() const;
  void _internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.TLM_VERSION)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 component_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 canlib_build_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class TIMESTAMP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.TIMESTAMP) */ {
 public:
  inline TIMESTAMP() : TIMESTAMP(nullptr) {};
  virtual ~TIMESTAMP();

  TIMESTAMP(const TIMESTAMP& from);
  TIMESTAMP(TIMESTAMP&& from) noexcept
    : TIMESTAMP() {
    *this = ::std::move(from);
  }

  inline TIMESTAMP& operator=(const TIMESTAMP& from) {
    CopyFrom(from);
    return *this;
  }
  inline TIMESTAMP& operator=(TIMESTAMP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TIMESTAMP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TIMESTAMP* internal_default_instance() {
    return reinterpret_cast<const TIMESTAMP*>(
               &_TIMESTAMP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(TIMESTAMP& a, TIMESTAMP& b) {
    a.Swap(&b);
  }
  inline void Swap(TIMESTAMP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TIMESTAMP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TIMESTAMP* New() const final {
    return CreateMaybeMessage<TIMESTAMP>(nullptr);
  }

  TIMESTAMP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TIMESTAMP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TIMESTAMP& from);
  void MergeFrom(const TIMESTAMP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TIMESTAMP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.TIMESTAMP";
  }
  protected:
  explicit TIMESTAMP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 timestamp = 1;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.TIMESTAMP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class AMBIENT_TEMPERATURE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.AMBIENT_TEMPERATURE) */ {
 public:
  inline AMBIENT_TEMPERATURE() : AMBIENT_TEMPERATURE(nullptr) {};
  virtual ~AMBIENT_TEMPERATURE();

  AMBIENT_TEMPERATURE(const AMBIENT_TEMPERATURE& from);
  AMBIENT_TEMPERATURE(AMBIENT_TEMPERATURE&& from) noexcept
    : AMBIENT_TEMPERATURE() {
    *this = ::std::move(from);
  }

  inline AMBIENT_TEMPERATURE& operator=(const AMBIENT_TEMPERATURE& from) {
    CopyFrom(from);
    return *this;
  }
  inline AMBIENT_TEMPERATURE& operator=(AMBIENT_TEMPERATURE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AMBIENT_TEMPERATURE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AMBIENT_TEMPERATURE* internal_default_instance() {
    return reinterpret_cast<const AMBIENT_TEMPERATURE*>(
               &_AMBIENT_TEMPERATURE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AMBIENT_TEMPERATURE& a, AMBIENT_TEMPERATURE& b) {
    a.Swap(&b);
  }
  inline void Swap(AMBIENT_TEMPERATURE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AMBIENT_TEMPERATURE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AMBIENT_TEMPERATURE* New() const final {
    return CreateMaybeMessage<AMBIENT_TEMPERATURE>(nullptr);
  }

  AMBIENT_TEMPERATURE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AMBIENT_TEMPERATURE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AMBIENT_TEMPERATURE& from);
  void MergeFrom(const AMBIENT_TEMPERATURE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AMBIENT_TEMPERATURE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.AMBIENT_TEMPERATURE";
  }
  protected:
  explicit AMBIENT_TEMPERATURE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTempFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // sint32 temp = 1;
  void clear_temp();
  ::PROTOBUF_NAMESPACE_ID::int32 temp() const;
  void set_temp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_temp() const;
  void _internal_set_temp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.AMBIENT_TEMPERATURE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 temp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class DATA_LOGGER PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.DATA_LOGGER) */ {
 public:
  inline DATA_LOGGER() : DATA_LOGGER(nullptr) {};
  virtual ~DATA_LOGGER();

  DATA_LOGGER(const DATA_LOGGER& from);
  DATA_LOGGER(DATA_LOGGER&& from) noexcept
    : DATA_LOGGER() {
    *this = ::std::move(from);
  }

  inline DATA_LOGGER& operator=(const DATA_LOGGER& from) {
    CopyFrom(from);
    return *this;
  }
  inline DATA_LOGGER& operator=(DATA_LOGGER&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DATA_LOGGER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DATA_LOGGER* internal_default_instance() {
    return reinterpret_cast<const DATA_LOGGER*>(
               &_DATA_LOGGER_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DATA_LOGGER& a, DATA_LOGGER& b) {
    a.Swap(&b);
  }
  inline void Swap(DATA_LOGGER* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DATA_LOGGER* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DATA_LOGGER* New() const final {
    return CreateMaybeMessage<DATA_LOGGER>(nullptr);
  }

  DATA_LOGGER* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DATA_LOGGER>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DATA_LOGGER& from);
  void MergeFrom(const DATA_LOGGER& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DATA_LOGGER* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.DATA_LOGGER";
  }
  protected:
  explicit DATA_LOGGER(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlaceholder1FieldNumber = 1,
    kPlaceholder2FieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 placeholder1 = 1;
  void clear_placeholder1();
  ::PROTOBUF_NAMESPACE_ID::uint32 placeholder1() const;
  void set_placeholder1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_placeholder1() const;
  void _internal_set_placeholder1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 placeholder2 = 2;
  void clear_placeholder2();
  ::PROTOBUF_NAMESPACE_ID::uint32 placeholder2() const;
  void set_placeholder2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_placeholder2() const;
  void _internal_set_placeholder2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.DATA_LOGGER)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 placeholder1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 placeholder2_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_TLM_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_TLM_STATUS) */ {
 public:
  inline SET_TLM_STATUS() : SET_TLM_STATUS(nullptr) {};
  virtual ~SET_TLM_STATUS();

  SET_TLM_STATUS(const SET_TLM_STATUS& from);
  SET_TLM_STATUS(SET_TLM_STATUS&& from) noexcept
    : SET_TLM_STATUS() {
    *this = ::std::move(from);
  }

  inline SET_TLM_STATUS& operator=(const SET_TLM_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_TLM_STATUS& operator=(SET_TLM_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_TLM_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_TLM_STATUS* internal_default_instance() {
    return reinterpret_cast<const SET_TLM_STATUS*>(
               &_SET_TLM_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SET_TLM_STATUS& a, SET_TLM_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_TLM_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_TLM_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_TLM_STATUS* New() const final {
    return CreateMaybeMessage<SET_TLM_STATUS>(nullptr);
  }

  SET_TLM_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_TLM_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_TLM_STATUS& from);
  void MergeFrom(const SET_TLM_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_TLM_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_TLM_STATUS";
  }
  protected:
  explicit SET_TLM_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTlmStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle tlm_status = 1;
  void clear_tlm_status();
  ::primary::Toggle tlm_status() const;
  void set_tlm_status(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_tlm_status() const;
  void _internal_set_tlm_status(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_TLM_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int tlm_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class TLM_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.TLM_STATUS) */ {
 public:
  inline TLM_STATUS() : TLM_STATUS(nullptr) {};
  virtual ~TLM_STATUS();

  TLM_STATUS(const TLM_STATUS& from);
  TLM_STATUS(TLM_STATUS&& from) noexcept
    : TLM_STATUS() {
    *this = ::std::move(from);
  }

  inline TLM_STATUS& operator=(const TLM_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline TLM_STATUS& operator=(TLM_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TLM_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TLM_STATUS* internal_default_instance() {
    return reinterpret_cast<const TLM_STATUS*>(
               &_TLM_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(TLM_STATUS& a, TLM_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(TLM_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TLM_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TLM_STATUS* New() const final {
    return CreateMaybeMessage<TLM_STATUS>(nullptr);
  }

  TLM_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TLM_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TLM_STATUS& from);
  void MergeFrom(const TLM_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TLM_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.TLM_STATUS";
  }
  protected:
  explicit TLM_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTlmStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle tlm_status = 1;
  void clear_tlm_status();
  ::primary::Toggle tlm_status() const;
  void set_tlm_status(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_tlm_status() const;
  void _internal_set_tlm_status(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.TLM_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int tlm_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class STEER_SYSTEM_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.STEER_SYSTEM_STATUS) */ {
 public:
  inline STEER_SYSTEM_STATUS() : STEER_SYSTEM_STATUS(nullptr) {};
  virtual ~STEER_SYSTEM_STATUS();

  STEER_SYSTEM_STATUS(const STEER_SYSTEM_STATUS& from);
  STEER_SYSTEM_STATUS(STEER_SYSTEM_STATUS&& from) noexcept
    : STEER_SYSTEM_STATUS() {
    *this = ::std::move(from);
  }

  inline STEER_SYSTEM_STATUS& operator=(const STEER_SYSTEM_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline STEER_SYSTEM_STATUS& operator=(STEER_SYSTEM_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const STEER_SYSTEM_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const STEER_SYSTEM_STATUS* internal_default_instance() {
    return reinterpret_cast<const STEER_SYSTEM_STATUS*>(
               &_STEER_SYSTEM_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(STEER_SYSTEM_STATUS& a, STEER_SYSTEM_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(STEER_SYSTEM_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STEER_SYSTEM_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline STEER_SYSTEM_STATUS* New() const final {
    return CreateMaybeMessage<STEER_SYSTEM_STATUS>(nullptr);
  }

  STEER_SYSTEM_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<STEER_SYSTEM_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const STEER_SYSTEM_STATUS& from);
  void MergeFrom(const STEER_SYSTEM_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(STEER_SYSTEM_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.STEER_SYSTEM_STATUS";
  }
  protected:
  explicit STEER_SYSTEM_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kSocTempFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 soc_temp = 1;
  void clear_soc_temp();
  ::PROTOBUF_NAMESPACE_ID::uint32 soc_temp() const;
  void set_soc_temp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_soc_temp() const;
  void _internal_set_soc_temp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.STEER_SYSTEM_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 soc_temp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_VOLTAGE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_VOLTAGE) */ {
 public:
  inline HV_VOLTAGE() : HV_VOLTAGE(nullptr) {};
  virtual ~HV_VOLTAGE();

  HV_VOLTAGE(const HV_VOLTAGE& from);
  HV_VOLTAGE(HV_VOLTAGE&& from) noexcept
    : HV_VOLTAGE() {
    *this = ::std::move(from);
  }

  inline HV_VOLTAGE& operator=(const HV_VOLTAGE& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_VOLTAGE& operator=(HV_VOLTAGE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_VOLTAGE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_VOLTAGE* internal_default_instance() {
    return reinterpret_cast<const HV_VOLTAGE*>(
               &_HV_VOLTAGE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(HV_VOLTAGE& a, HV_VOLTAGE& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_VOLTAGE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_VOLTAGE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_VOLTAGE* New() const final {
    return CreateMaybeMessage<HV_VOLTAGE>(nullptr);
  }

  HV_VOLTAGE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_VOLTAGE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_VOLTAGE& from);
  void MergeFrom(const HV_VOLTAGE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_VOLTAGE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_VOLTAGE";
  }
  protected:
  explicit HV_VOLTAGE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackVoltageFieldNumber = 1,
    kBusVoltageFieldNumber = 2,
    kMaxCellVoltageFieldNumber = 3,
    kMinCellVoltageFieldNumber = 4,
    kInnerTimestampFieldNumber = 5,
  };
  // float pack_voltage = 1;
  void clear_pack_voltage();
  float pack_voltage() const;
  void set_pack_voltage(float value);
  private:
  float _internal_pack_voltage() const;
  void _internal_set_pack_voltage(float value);
  public:

  // float bus_voltage = 2;
  void clear_bus_voltage();
  float bus_voltage() const;
  void set_bus_voltage(float value);
  private:
  float _internal_bus_voltage() const;
  void _internal_set_bus_voltage(float value);
  public:

  // float max_cell_voltage = 3;
  void clear_max_cell_voltage();
  float max_cell_voltage() const;
  void set_max_cell_voltage(float value);
  private:
  float _internal_max_cell_voltage() const;
  void _internal_set_max_cell_voltage(float value);
  public:

  // float min_cell_voltage = 4;
  void clear_min_cell_voltage();
  float min_cell_voltage() const;
  void set_min_cell_voltage(float value);
  private:
  float _internal_min_cell_voltage() const;
  void _internal_set_min_cell_voltage(float value);
  public:

  // uint64 _inner_timestamp = 5;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_VOLTAGE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float pack_voltage_;
  float bus_voltage_;
  float max_cell_voltage_;
  float min_cell_voltage_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_CURRENT PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_CURRENT) */ {
 public:
  inline HV_CURRENT() : HV_CURRENT(nullptr) {};
  virtual ~HV_CURRENT();

  HV_CURRENT(const HV_CURRENT& from);
  HV_CURRENT(HV_CURRENT&& from) noexcept
    : HV_CURRENT() {
    *this = ::std::move(from);
  }

  inline HV_CURRENT& operator=(const HV_CURRENT& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_CURRENT& operator=(HV_CURRENT&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_CURRENT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_CURRENT* internal_default_instance() {
    return reinterpret_cast<const HV_CURRENT*>(
               &_HV_CURRENT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(HV_CURRENT& a, HV_CURRENT& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_CURRENT* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_CURRENT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_CURRENT* New() const final {
    return CreateMaybeMessage<HV_CURRENT>(nullptr);
  }

  HV_CURRENT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_CURRENT>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_CURRENT& from);
  void MergeFrom(const HV_CURRENT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_CURRENT* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_CURRENT";
  }
  protected:
  explicit HV_CURRENT(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentFieldNumber = 1,
    kPowerFieldNumber = 2,
    kEnergyFieldNumber = 3,
    kSocFieldNumber = 4,
    kInnerTimestampFieldNumber = 5,
  };
  // float current = 1;
  void clear_current();
  float current() const;
  void set_current(float value);
  private:
  float _internal_current() const;
  void _internal_set_current(float value);
  public:

  // float power = 2;
  void clear_power();
  float power() const;
  void set_power(float value);
  private:
  float _internal_power() const;
  void _internal_set_power(float value);
  public:

  // float energy = 3;
  void clear_energy();
  float energy() const;
  void set_energy(float value);
  private:
  float _internal_energy() const;
  void _internal_set_energy(float value);
  public:

  // float soc = 4;
  void clear_soc();
  float soc() const;
  void set_soc(float value);
  private:
  float _internal_soc() const;
  void _internal_set_soc(float value);
  public:

  // uint64 _inner_timestamp = 5;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_CURRENT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float current_;
  float power_;
  float energy_;
  float soc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_TEMP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_TEMP) */ {
 public:
  inline HV_TEMP() : HV_TEMP(nullptr) {};
  virtual ~HV_TEMP();

  HV_TEMP(const HV_TEMP& from);
  HV_TEMP(HV_TEMP&& from) noexcept
    : HV_TEMP() {
    *this = ::std::move(from);
  }

  inline HV_TEMP& operator=(const HV_TEMP& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_TEMP& operator=(HV_TEMP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_TEMP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_TEMP* internal_default_instance() {
    return reinterpret_cast<const HV_TEMP*>(
               &_HV_TEMP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(HV_TEMP& a, HV_TEMP& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_TEMP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_TEMP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_TEMP* New() const final {
    return CreateMaybeMessage<HV_TEMP>(nullptr);
  }

  HV_TEMP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_TEMP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_TEMP& from);
  void MergeFrom(const HV_TEMP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_TEMP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_TEMP";
  }
  protected:
  explicit HV_TEMP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAverageTempFieldNumber = 1,
    kMaxTempFieldNumber = 2,
    kInnerTimestampFieldNumber = 4,
    kMinTempFieldNumber = 3,
  };
  // float average_temp = 1;
  void clear_average_temp();
  float average_temp() const;
  void set_average_temp(float value);
  private:
  float _internal_average_temp() const;
  void _internal_set_average_temp(float value);
  public:

  // float max_temp = 2;
  void clear_max_temp();
  float max_temp() const;
  void set_max_temp(float value);
  private:
  float _internal_max_temp() const;
  void _internal_set_max_temp(float value);
  public:

  // uint64 _inner_timestamp = 4;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float min_temp = 3;
  void clear_min_temp();
  float min_temp() const;
  void set_min_temp(float value);
  private:
  float _internal_min_temp() const;
  void _internal_set_min_temp(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_TEMP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float average_temp_;
  float max_temp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float min_temp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_ERRORS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_ERRORS) */ {
 public:
  inline HV_ERRORS() : HV_ERRORS(nullptr) {};
  virtual ~HV_ERRORS();

  HV_ERRORS(const HV_ERRORS& from);
  HV_ERRORS(HV_ERRORS&& from) noexcept
    : HV_ERRORS() {
    *this = ::std::move(from);
  }

  inline HV_ERRORS& operator=(const HV_ERRORS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_ERRORS& operator=(HV_ERRORS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_ERRORS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_ERRORS* internal_default_instance() {
    return reinterpret_cast<const HV_ERRORS*>(
               &_HV_ERRORS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(HV_ERRORS& a, HV_ERRORS& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_ERRORS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_ERRORS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_ERRORS* New() const final {
    return CreateMaybeMessage<HV_ERRORS>(nullptr);
  }

  HV_ERRORS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_ERRORS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_ERRORS& from);
  void MergeFrom(const HV_ERRORS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_ERRORS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_ERRORS";
  }
  protected:
  explicit HV_ERRORS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWarningsFieldNumber = 1,
    kErrorsFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 warnings = 1;
  void clear_warnings();
  ::PROTOBUF_NAMESPACE_ID::uint32 warnings() const;
  void set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_warnings() const;
  void _internal_set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 errors = 2;
  void clear_errors();
  ::PROTOBUF_NAMESPACE_ID::uint32 errors() const;
  void set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errors() const;
  void _internal_set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_ERRORS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 warnings_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errors_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_CAN_FORWARD PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_CAN_FORWARD) */ {
 public:
  inline HV_CAN_FORWARD() : HV_CAN_FORWARD(nullptr) {};
  virtual ~HV_CAN_FORWARD();

  HV_CAN_FORWARD(const HV_CAN_FORWARD& from);
  HV_CAN_FORWARD(HV_CAN_FORWARD&& from) noexcept
    : HV_CAN_FORWARD() {
    *this = ::std::move(from);
  }

  inline HV_CAN_FORWARD& operator=(const HV_CAN_FORWARD& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_CAN_FORWARD& operator=(HV_CAN_FORWARD&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_CAN_FORWARD& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_CAN_FORWARD* internal_default_instance() {
    return reinterpret_cast<const HV_CAN_FORWARD*>(
               &_HV_CAN_FORWARD_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(HV_CAN_FORWARD& a, HV_CAN_FORWARD& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_CAN_FORWARD* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_CAN_FORWARD* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_CAN_FORWARD* New() const final {
    return CreateMaybeMessage<HV_CAN_FORWARD>(nullptr);
  }

  HV_CAN_FORWARD* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_CAN_FORWARD>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_CAN_FORWARD& from);
  void MergeFrom(const HV_CAN_FORWARD& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_CAN_FORWARD* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_CAN_FORWARD";
  }
  protected:
  explicit HV_CAN_FORWARD(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kCanForwardSetFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle can_forward_set = 1;
  void clear_can_forward_set();
  ::primary::Toggle can_forward_set() const;
  void set_can_forward_set(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_can_forward_set() const;
  void _internal_set_can_forward_set(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_CAN_FORWARD)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int can_forward_set_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_FANS_OVERRIDE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_FANS_OVERRIDE) */ {
 public:
  inline HV_FANS_OVERRIDE() : HV_FANS_OVERRIDE(nullptr) {};
  virtual ~HV_FANS_OVERRIDE();

  HV_FANS_OVERRIDE(const HV_FANS_OVERRIDE& from);
  HV_FANS_OVERRIDE(HV_FANS_OVERRIDE&& from) noexcept
    : HV_FANS_OVERRIDE() {
    *this = ::std::move(from);
  }

  inline HV_FANS_OVERRIDE& operator=(const HV_FANS_OVERRIDE& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_FANS_OVERRIDE& operator=(HV_FANS_OVERRIDE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_FANS_OVERRIDE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_FANS_OVERRIDE* internal_default_instance() {
    return reinterpret_cast<const HV_FANS_OVERRIDE*>(
               &_HV_FANS_OVERRIDE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(HV_FANS_OVERRIDE& a, HV_FANS_OVERRIDE& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_FANS_OVERRIDE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_FANS_OVERRIDE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_FANS_OVERRIDE* New() const final {
    return CreateMaybeMessage<HV_FANS_OVERRIDE>(nullptr);
  }

  HV_FANS_OVERRIDE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_FANS_OVERRIDE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_FANS_OVERRIDE& from);
  void MergeFrom(const HV_FANS_OVERRIDE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_FANS_OVERRIDE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_FANS_OVERRIDE";
  }
  protected:
  explicit HV_FANS_OVERRIDE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFansOverrideFieldNumber = 1,
    kFansSpeedFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // .primary.Toggle fans_override = 1;
  void clear_fans_override();
  ::primary::Toggle fans_override() const;
  void set_fans_override(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_fans_override() const;
  void _internal_set_fans_override(::primary::Toggle value);
  public:

  // float fans_speed = 2;
  void clear_fans_speed();
  float fans_speed() const;
  void set_fans_speed(float value);
  private:
  float _internal_fans_speed() const;
  void _internal_set_fans_speed(float value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_FANS_OVERRIDE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int fans_override_;
  float fans_speed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_CAN_FORWARD_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_CAN_FORWARD_STATUS) */ {
 public:
  inline HV_CAN_FORWARD_STATUS() : HV_CAN_FORWARD_STATUS(nullptr) {};
  virtual ~HV_CAN_FORWARD_STATUS();

  HV_CAN_FORWARD_STATUS(const HV_CAN_FORWARD_STATUS& from);
  HV_CAN_FORWARD_STATUS(HV_CAN_FORWARD_STATUS&& from) noexcept
    : HV_CAN_FORWARD_STATUS() {
    *this = ::std::move(from);
  }

  inline HV_CAN_FORWARD_STATUS& operator=(const HV_CAN_FORWARD_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_CAN_FORWARD_STATUS& operator=(HV_CAN_FORWARD_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_CAN_FORWARD_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_CAN_FORWARD_STATUS* internal_default_instance() {
    return reinterpret_cast<const HV_CAN_FORWARD_STATUS*>(
               &_HV_CAN_FORWARD_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(HV_CAN_FORWARD_STATUS& a, HV_CAN_FORWARD_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_CAN_FORWARD_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_CAN_FORWARD_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_CAN_FORWARD_STATUS* New() const final {
    return CreateMaybeMessage<HV_CAN_FORWARD_STATUS>(nullptr);
  }

  HV_CAN_FORWARD_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_CAN_FORWARD_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_CAN_FORWARD_STATUS& from);
  void MergeFrom(const HV_CAN_FORWARD_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_CAN_FORWARD_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_CAN_FORWARD_STATUS";
  }
  protected:
  explicit HV_CAN_FORWARD_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kCanForwardStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle can_forward_status = 1;
  void clear_can_forward_status();
  ::primary::Toggle can_forward_status() const;
  void set_can_forward_status(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_can_forward_status() const;
  void _internal_set_can_forward_status(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_CAN_FORWARD_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int can_forward_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_FANS_OVERRIDE_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_FANS_OVERRIDE_STATUS) */ {
 public:
  inline HV_FANS_OVERRIDE_STATUS() : HV_FANS_OVERRIDE_STATUS(nullptr) {};
  virtual ~HV_FANS_OVERRIDE_STATUS();

  HV_FANS_OVERRIDE_STATUS(const HV_FANS_OVERRIDE_STATUS& from);
  HV_FANS_OVERRIDE_STATUS(HV_FANS_OVERRIDE_STATUS&& from) noexcept
    : HV_FANS_OVERRIDE_STATUS() {
    *this = ::std::move(from);
  }

  inline HV_FANS_OVERRIDE_STATUS& operator=(const HV_FANS_OVERRIDE_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_FANS_OVERRIDE_STATUS& operator=(HV_FANS_OVERRIDE_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_FANS_OVERRIDE_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_FANS_OVERRIDE_STATUS* internal_default_instance() {
    return reinterpret_cast<const HV_FANS_OVERRIDE_STATUS*>(
               &_HV_FANS_OVERRIDE_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(HV_FANS_OVERRIDE_STATUS& a, HV_FANS_OVERRIDE_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_FANS_OVERRIDE_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_FANS_OVERRIDE_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_FANS_OVERRIDE_STATUS* New() const final {
    return CreateMaybeMessage<HV_FANS_OVERRIDE_STATUS>(nullptr);
  }

  HV_FANS_OVERRIDE_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_FANS_OVERRIDE_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_FANS_OVERRIDE_STATUS& from);
  void MergeFrom(const HV_FANS_OVERRIDE_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_FANS_OVERRIDE_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_FANS_OVERRIDE_STATUS";
  }
  protected:
  explicit HV_FANS_OVERRIDE_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFansOverrideFieldNumber = 1,
    kFansSpeedFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // .primary.Toggle fans_override = 1;
  void clear_fans_override();
  ::primary::Toggle fans_override() const;
  void set_fans_override(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_fans_override() const;
  void _internal_set_fans_override(::primary::Toggle value);
  public:

  // float fans_speed = 2;
  void clear_fans_speed();
  float fans_speed() const;
  void set_fans_speed(float value);
  private:
  float _internal_fans_speed() const;
  void _internal_set_fans_speed(float value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_FANS_OVERRIDE_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int fans_override_;
  float fans_speed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_FEEDBACKS_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_FEEDBACKS_STATUS) */ {
 public:
  inline HV_FEEDBACKS_STATUS() : HV_FEEDBACKS_STATUS(nullptr) {};
  virtual ~HV_FEEDBACKS_STATUS();

  HV_FEEDBACKS_STATUS(const HV_FEEDBACKS_STATUS& from);
  HV_FEEDBACKS_STATUS(HV_FEEDBACKS_STATUS&& from) noexcept
    : HV_FEEDBACKS_STATUS() {
    *this = ::std::move(from);
  }

  inline HV_FEEDBACKS_STATUS& operator=(const HV_FEEDBACKS_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_FEEDBACKS_STATUS& operator=(HV_FEEDBACKS_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_FEEDBACKS_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_FEEDBACKS_STATUS* internal_default_instance() {
    return reinterpret_cast<const HV_FEEDBACKS_STATUS*>(
               &_HV_FEEDBACKS_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(HV_FEEDBACKS_STATUS& a, HV_FEEDBACKS_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_FEEDBACKS_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_FEEDBACKS_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_FEEDBACKS_STATUS* New() const final {
    return CreateMaybeMessage<HV_FEEDBACKS_STATUS>(nullptr);
  }

  HV_FEEDBACKS_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_FEEDBACKS_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_FEEDBACKS_STATUS& from);
  void MergeFrom(const HV_FEEDBACKS_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_FEEDBACKS_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_FEEDBACKS_STATUS";
  }
  protected:
  explicit HV_FEEDBACKS_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeedbacksStatusFieldNumber = 1,
    kIsCircuitryErrorFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 feedbacks_status = 1;
  void clear_feedbacks_status();
  ::PROTOBUF_NAMESPACE_ID::uint32 feedbacks_status() const;
  void set_feedbacks_status(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_feedbacks_status() const;
  void _internal_set_feedbacks_status(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 is_circuitry_error = 2;
  void clear_is_circuitry_error();
  ::PROTOBUF_NAMESPACE_ID::uint32 is_circuitry_error() const;
  void set_is_circuitry_error(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_is_circuitry_error() const;
  void _internal_set_is_circuitry_error(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_FEEDBACKS_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 feedbacks_status_;
  ::PROTOBUF_NAMESPACE_ID::uint32 is_circuitry_error_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_IMD_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_IMD_STATUS) */ {
 public:
  inline HV_IMD_STATUS() : HV_IMD_STATUS(nullptr) {};
  virtual ~HV_IMD_STATUS();

  HV_IMD_STATUS(const HV_IMD_STATUS& from);
  HV_IMD_STATUS(HV_IMD_STATUS&& from) noexcept
    : HV_IMD_STATUS() {
    *this = ::std::move(from);
  }

  inline HV_IMD_STATUS& operator=(const HV_IMD_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_IMD_STATUS& operator=(HV_IMD_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_IMD_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_IMD_STATUS* internal_default_instance() {
    return reinterpret_cast<const HV_IMD_STATUS*>(
               &_HV_IMD_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(HV_IMD_STATUS& a, HV_IMD_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_IMD_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_IMD_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_IMD_STATUS* New() const final {
    return CreateMaybeMessage<HV_IMD_STATUS>(nullptr);
  }

  HV_IMD_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_IMD_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_IMD_STATUS& from);
  void MergeFrom(const HV_IMD_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_IMD_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_IMD_STATUS";
  }
  protected:
  explicit HV_IMD_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImdFaultFieldNumber = 1,
    kImdStatusFieldNumber = 2,
    kInnerTimestampFieldNumber = 4,
    kImdInfoFieldNumber = 3,
  };
  // bool imd_fault = 1;
  void clear_imd_fault();
  bool imd_fault() const;
  void set_imd_fault(bool value);
  private:
  bool _internal_imd_fault() const;
  void _internal_set_imd_fault(bool value);
  public:

  // .primary.ImdStatus imd_status = 2;
  void clear_imd_status();
  ::primary::ImdStatus imd_status() const;
  void set_imd_status(::primary::ImdStatus value);
  private:
  ::primary::ImdStatus _internal_imd_status() const;
  void _internal_set_imd_status(::primary::ImdStatus value);
  public:

  // uint64 _inner_timestamp = 4;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // sint32 imd_info = 3;
  void clear_imd_info();
  ::PROTOBUF_NAMESPACE_ID::int32 imd_info() const;
  void set_imd_info(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_imd_info() const;
  void _internal_set_imd_info(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_IMD_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool imd_fault_;
  int imd_status_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 imd_info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class TS_STATUS_DAS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.TS_STATUS_DAS) */ {
 public:
  inline TS_STATUS_DAS() : TS_STATUS_DAS(nullptr) {};
  virtual ~TS_STATUS_DAS();

  TS_STATUS_DAS(const TS_STATUS_DAS& from);
  TS_STATUS_DAS(TS_STATUS_DAS&& from) noexcept
    : TS_STATUS_DAS() {
    *this = ::std::move(from);
  }

  inline TS_STATUS_DAS& operator=(const TS_STATUS_DAS& from) {
    CopyFrom(from);
    return *this;
  }
  inline TS_STATUS_DAS& operator=(TS_STATUS_DAS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TS_STATUS_DAS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TS_STATUS_DAS* internal_default_instance() {
    return reinterpret_cast<const TS_STATUS_DAS*>(
               &_TS_STATUS_DAS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(TS_STATUS_DAS& a, TS_STATUS_DAS& b) {
    a.Swap(&b);
  }
  inline void Swap(TS_STATUS_DAS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TS_STATUS_DAS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TS_STATUS_DAS* New() const final {
    return CreateMaybeMessage<TS_STATUS_DAS>(nullptr);
  }

  TS_STATUS_DAS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TS_STATUS_DAS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TS_STATUS_DAS& from);
  void MergeFrom(const TS_STATUS_DAS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TS_STATUS_DAS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.TS_STATUS_DAS";
  }
  protected:
  explicit TS_STATUS_DAS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTsStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.TsStatus ts_status = 1;
  void clear_ts_status();
  ::primary::TsStatus ts_status() const;
  void set_ts_status(::primary::TsStatus value);
  private:
  ::primary::TsStatus _internal_ts_status() const;
  void _internal_set_ts_status(::primary::TsStatus value);
  public:

  // @@protoc_insertion_point(class_scope:primary.TS_STATUS_DAS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int ts_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class TS_STATUS_STEER PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.TS_STATUS_STEER) */ {
 public:
  inline TS_STATUS_STEER() : TS_STATUS_STEER(nullptr) {};
  virtual ~TS_STATUS_STEER();

  TS_STATUS_STEER(const TS_STATUS_STEER& from);
  TS_STATUS_STEER(TS_STATUS_STEER&& from) noexcept
    : TS_STATUS_STEER() {
    *this = ::std::move(from);
  }

  inline TS_STATUS_STEER& operator=(const TS_STATUS_STEER& from) {
    CopyFrom(from);
    return *this;
  }
  inline TS_STATUS_STEER& operator=(TS_STATUS_STEER&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TS_STATUS_STEER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TS_STATUS_STEER* internal_default_instance() {
    return reinterpret_cast<const TS_STATUS_STEER*>(
               &_TS_STATUS_STEER_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(TS_STATUS_STEER& a, TS_STATUS_STEER& b) {
    a.Swap(&b);
  }
  inline void Swap(TS_STATUS_STEER* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TS_STATUS_STEER* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TS_STATUS_STEER* New() const final {
    return CreateMaybeMessage<TS_STATUS_STEER>(nullptr);
  }

  TS_STATUS_STEER* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TS_STATUS_STEER>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TS_STATUS_STEER& from);
  void MergeFrom(const TS_STATUS_STEER& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TS_STATUS_STEER* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.TS_STATUS_STEER";
  }
  protected:
  explicit TS_STATUS_STEER(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTsStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.TsStatus ts_status = 1;
  void clear_ts_status();
  ::primary::TsStatus ts_status() const;
  void set_ts_status(::primary::TsStatus value);
  private:
  ::primary::TsStatus _internal_ts_status() const;
  void _internal_set_ts_status(::primary::TsStatus value);
  public:

  // @@protoc_insertion_point(class_scope:primary.TS_STATUS_STEER)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int ts_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class TS_STATUS_HANDCART PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.TS_STATUS_HANDCART) */ {
 public:
  inline TS_STATUS_HANDCART() : TS_STATUS_HANDCART(nullptr) {};
  virtual ~TS_STATUS_HANDCART();

  TS_STATUS_HANDCART(const TS_STATUS_HANDCART& from);
  TS_STATUS_HANDCART(TS_STATUS_HANDCART&& from) noexcept
    : TS_STATUS_HANDCART() {
    *this = ::std::move(from);
  }

  inline TS_STATUS_HANDCART& operator=(const TS_STATUS_HANDCART& from) {
    CopyFrom(from);
    return *this;
  }
  inline TS_STATUS_HANDCART& operator=(TS_STATUS_HANDCART&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TS_STATUS_HANDCART& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TS_STATUS_HANDCART* internal_default_instance() {
    return reinterpret_cast<const TS_STATUS_HANDCART*>(
               &_TS_STATUS_HANDCART_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(TS_STATUS_HANDCART& a, TS_STATUS_HANDCART& b) {
    a.Swap(&b);
  }
  inline void Swap(TS_STATUS_HANDCART* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TS_STATUS_HANDCART* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TS_STATUS_HANDCART* New() const final {
    return CreateMaybeMessage<TS_STATUS_HANDCART>(nullptr);
  }

  TS_STATUS_HANDCART* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TS_STATUS_HANDCART>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TS_STATUS_HANDCART& from);
  void MergeFrom(const TS_STATUS_HANDCART& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TS_STATUS_HANDCART* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.TS_STATUS_HANDCART";
  }
  protected:
  explicit TS_STATUS_HANDCART(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTsStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.TsStatus ts_status = 1;
  void clear_ts_status();
  ::primary::TsStatus ts_status() const;
  void set_ts_status(::primary::TsStatus value);
  private:
  ::primary::TsStatus _internal_ts_status() const;
  void _internal_set_ts_status(::primary::TsStatus value);
  public:

  // @@protoc_insertion_point(class_scope:primary.TS_STATUS_HANDCART)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int ts_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_TS_STATUS_DAS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_TS_STATUS_DAS) */ {
 public:
  inline SET_TS_STATUS_DAS() : SET_TS_STATUS_DAS(nullptr) {};
  virtual ~SET_TS_STATUS_DAS();

  SET_TS_STATUS_DAS(const SET_TS_STATUS_DAS& from);
  SET_TS_STATUS_DAS(SET_TS_STATUS_DAS&& from) noexcept
    : SET_TS_STATUS_DAS() {
    *this = ::std::move(from);
  }

  inline SET_TS_STATUS_DAS& operator=(const SET_TS_STATUS_DAS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_TS_STATUS_DAS& operator=(SET_TS_STATUS_DAS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_TS_STATUS_DAS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_TS_STATUS_DAS* internal_default_instance() {
    return reinterpret_cast<const SET_TS_STATUS_DAS*>(
               &_SET_TS_STATUS_DAS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(SET_TS_STATUS_DAS& a, SET_TS_STATUS_DAS& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_TS_STATUS_DAS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_TS_STATUS_DAS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_TS_STATUS_DAS* New() const final {
    return CreateMaybeMessage<SET_TS_STATUS_DAS>(nullptr);
  }

  SET_TS_STATUS_DAS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_TS_STATUS_DAS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_TS_STATUS_DAS& from);
  void MergeFrom(const SET_TS_STATUS_DAS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_TS_STATUS_DAS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_TS_STATUS_DAS";
  }
  protected:
  explicit SET_TS_STATUS_DAS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTsStatusSetFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle ts_status_set = 1;
  void clear_ts_status_set();
  ::primary::Toggle ts_status_set() const;
  void set_ts_status_set(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_ts_status_set() const;
  void _internal_set_ts_status_set(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_TS_STATUS_DAS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int ts_status_set_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_TS_STATUS_HANDCART PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_TS_STATUS_HANDCART) */ {
 public:
  inline SET_TS_STATUS_HANDCART() : SET_TS_STATUS_HANDCART(nullptr) {};
  virtual ~SET_TS_STATUS_HANDCART();

  SET_TS_STATUS_HANDCART(const SET_TS_STATUS_HANDCART& from);
  SET_TS_STATUS_HANDCART(SET_TS_STATUS_HANDCART&& from) noexcept
    : SET_TS_STATUS_HANDCART() {
    *this = ::std::move(from);
  }

  inline SET_TS_STATUS_HANDCART& operator=(const SET_TS_STATUS_HANDCART& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_TS_STATUS_HANDCART& operator=(SET_TS_STATUS_HANDCART&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_TS_STATUS_HANDCART& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_TS_STATUS_HANDCART* internal_default_instance() {
    return reinterpret_cast<const SET_TS_STATUS_HANDCART*>(
               &_SET_TS_STATUS_HANDCART_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(SET_TS_STATUS_HANDCART& a, SET_TS_STATUS_HANDCART& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_TS_STATUS_HANDCART* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_TS_STATUS_HANDCART* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_TS_STATUS_HANDCART* New() const final {
    return CreateMaybeMessage<SET_TS_STATUS_HANDCART>(nullptr);
  }

  SET_TS_STATUS_HANDCART* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_TS_STATUS_HANDCART>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_TS_STATUS_HANDCART& from);
  void MergeFrom(const SET_TS_STATUS_HANDCART& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_TS_STATUS_HANDCART* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_TS_STATUS_HANDCART";
  }
  protected:
  explicit SET_TS_STATUS_HANDCART(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTsStatusSetFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle ts_status_set = 1;
  void clear_ts_status_set();
  ::primary::Toggle ts_status_set() const;
  void set_ts_status_set(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_ts_status_set() const;
  void _internal_set_ts_status_set(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_TS_STATUS_HANDCART)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int ts_status_set_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class STEER_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.STEER_STATUS) */ {
 public:
  inline STEER_STATUS() : STEER_STATUS(nullptr) {};
  virtual ~STEER_STATUS();

  STEER_STATUS(const STEER_STATUS& from);
  STEER_STATUS(STEER_STATUS&& from) noexcept
    : STEER_STATUS() {
    *this = ::std::move(from);
  }

  inline STEER_STATUS& operator=(const STEER_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline STEER_STATUS& operator=(STEER_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const STEER_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const STEER_STATUS* internal_default_instance() {
    return reinterpret_cast<const STEER_STATUS*>(
               &_STEER_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(STEER_STATUS& a, STEER_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(STEER_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(STEER_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline STEER_STATUS* New() const final {
    return CreateMaybeMessage<STEER_STATUS>(nullptr);
  }

  STEER_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<STEER_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const STEER_STATUS& from);
  void MergeFrom(const STEER_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(STEER_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.STEER_STATUS";
  }
  protected:
  explicit STEER_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMapPwFieldNumber = 1,
    kMapScFieldNumber = 2,
    kInnerTimestampFieldNumber = 4,
    kMapTvFieldNumber = 3,
  };
  // float map_pw = 1;
  void clear_map_pw();
  float map_pw() const;
  void set_map_pw(float value);
  private:
  float _internal_map_pw() const;
  void _internal_set_map_pw(float value);
  public:

  // float map_sc = 2;
  void clear_map_sc();
  float map_sc() const;
  void set_map_sc(float value);
  private:
  float _internal_map_sc() const;
  void _internal_set_map_sc(float value);
  public:

  // uint64 _inner_timestamp = 4;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float map_tv = 3;
  void clear_map_tv();
  float map_tv() const;
  void set_map_tv(float value);
  private:
  float _internal_map_tv() const;
  void _internal_set_map_tv(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.STEER_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float map_pw_;
  float map_sc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float map_tv_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_CAR_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_CAR_STATUS) */ {
 public:
  inline SET_CAR_STATUS() : SET_CAR_STATUS(nullptr) {};
  virtual ~SET_CAR_STATUS();

  SET_CAR_STATUS(const SET_CAR_STATUS& from);
  SET_CAR_STATUS(SET_CAR_STATUS&& from) noexcept
    : SET_CAR_STATUS() {
    *this = ::std::move(from);
  }

  inline SET_CAR_STATUS& operator=(const SET_CAR_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_CAR_STATUS& operator=(SET_CAR_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_CAR_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_CAR_STATUS* internal_default_instance() {
    return reinterpret_cast<const SET_CAR_STATUS*>(
               &_SET_CAR_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(SET_CAR_STATUS& a, SET_CAR_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_CAR_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_CAR_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_CAR_STATUS* New() const final {
    return CreateMaybeMessage<SET_CAR_STATUS>(nullptr);
  }

  SET_CAR_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_CAR_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_CAR_STATUS& from);
  void MergeFrom(const SET_CAR_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_CAR_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_CAR_STATUS";
  }
  protected:
  explicit SET_CAR_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kCarStatusSetFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.SetCarStatus car_status_set = 1;
  void clear_car_status_set();
  ::primary::SetCarStatus car_status_set() const;
  void set_car_status_set(::primary::SetCarStatus value);
  private:
  ::primary::SetCarStatus _internal_car_status_set() const;
  void _internal_set_car_status_set(::primary::SetCarStatus value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_CAR_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int car_status_set_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_PEDALS_RANGE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_PEDALS_RANGE) */ {
 public:
  inline SET_PEDALS_RANGE() : SET_PEDALS_RANGE(nullptr) {};
  virtual ~SET_PEDALS_RANGE();

  SET_PEDALS_RANGE(const SET_PEDALS_RANGE& from);
  SET_PEDALS_RANGE(SET_PEDALS_RANGE&& from) noexcept
    : SET_PEDALS_RANGE() {
    *this = ::std::move(from);
  }

  inline SET_PEDALS_RANGE& operator=(const SET_PEDALS_RANGE& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_PEDALS_RANGE& operator=(SET_PEDALS_RANGE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_PEDALS_RANGE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_PEDALS_RANGE* internal_default_instance() {
    return reinterpret_cast<const SET_PEDALS_RANGE*>(
               &_SET_PEDALS_RANGE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(SET_PEDALS_RANGE& a, SET_PEDALS_RANGE& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_PEDALS_RANGE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_PEDALS_RANGE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_PEDALS_RANGE* New() const final {
    return CreateMaybeMessage<SET_PEDALS_RANGE>(nullptr);
  }

  SET_PEDALS_RANGE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_PEDALS_RANGE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_PEDALS_RANGE& from);
  void MergeFrom(const SET_PEDALS_RANGE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_PEDALS_RANGE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_PEDALS_RANGE";
  }
  protected:
  explicit SET_PEDALS_RANGE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoundFieldNumber = 1,
    kPedalFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // .primary.Bound bound = 1;
  void clear_bound();
  ::primary::Bound bound() const;
  void set_bound(::primary::Bound value);
  private:
  ::primary::Bound _internal_bound() const;
  void _internal_set_bound(::primary::Bound value);
  public:

  // .primary.Pedal pedal = 2;
  void clear_pedal();
  ::primary::Pedal pedal() const;
  void set_pedal(::primary::Pedal value);
  private:
  ::primary::Pedal _internal_pedal() const;
  void _internal_set_pedal(::primary::Pedal value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_PEDALS_RANGE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int bound_;
  int pedal_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_STEERING_ANGLE_RANGE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_STEERING_ANGLE_RANGE) */ {
 public:
  inline SET_STEERING_ANGLE_RANGE() : SET_STEERING_ANGLE_RANGE(nullptr) {};
  virtual ~SET_STEERING_ANGLE_RANGE();

  SET_STEERING_ANGLE_RANGE(const SET_STEERING_ANGLE_RANGE& from);
  SET_STEERING_ANGLE_RANGE(SET_STEERING_ANGLE_RANGE&& from) noexcept
    : SET_STEERING_ANGLE_RANGE() {
    *this = ::std::move(from);
  }

  inline SET_STEERING_ANGLE_RANGE& operator=(const SET_STEERING_ANGLE_RANGE& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_STEERING_ANGLE_RANGE& operator=(SET_STEERING_ANGLE_RANGE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_STEERING_ANGLE_RANGE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_STEERING_ANGLE_RANGE* internal_default_instance() {
    return reinterpret_cast<const SET_STEERING_ANGLE_RANGE*>(
               &_SET_STEERING_ANGLE_RANGE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(SET_STEERING_ANGLE_RANGE& a, SET_STEERING_ANGLE_RANGE& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_STEERING_ANGLE_RANGE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_STEERING_ANGLE_RANGE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_STEERING_ANGLE_RANGE* New() const final {
    return CreateMaybeMessage<SET_STEERING_ANGLE_RANGE>(nullptr);
  }

  SET_STEERING_ANGLE_RANGE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_STEERING_ANGLE_RANGE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_STEERING_ANGLE_RANGE& from);
  void MergeFrom(const SET_STEERING_ANGLE_RANGE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_STEERING_ANGLE_RANGE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_STEERING_ANGLE_RANGE";
  }
  protected:
  explicit SET_STEERING_ANGLE_RANGE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kBoundFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Bound bound = 1;
  void clear_bound();
  ::primary::Bound bound() const;
  void set_bound(::primary::Bound value);
  private:
  ::primary::Bound _internal_bound() const;
  void _internal_set_bound(::primary::Bound value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_STEERING_ANGLE_RANGE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int bound_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class CAR_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.CAR_STATUS) */ {
 public:
  inline CAR_STATUS() : CAR_STATUS(nullptr) {};
  virtual ~CAR_STATUS();

  CAR_STATUS(const CAR_STATUS& from);
  CAR_STATUS(CAR_STATUS&& from) noexcept
    : CAR_STATUS() {
    *this = ::std::move(from);
  }

  inline CAR_STATUS& operator=(const CAR_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline CAR_STATUS& operator=(CAR_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CAR_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CAR_STATUS* internal_default_instance() {
    return reinterpret_cast<const CAR_STATUS*>(
               &_CAR_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CAR_STATUS& a, CAR_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(CAR_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CAR_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CAR_STATUS* New() const final {
    return CreateMaybeMessage<CAR_STATUS>(nullptr);
  }

  CAR_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CAR_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CAR_STATUS& from);
  void MergeFrom(const CAR_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CAR_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.CAR_STATUS";
  }
  protected:
  explicit CAR_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInverterLFieldNumber = 1,
    kInverterRFieldNumber = 2,
    kInnerTimestampFieldNumber = 4,
    kCarStatusFieldNumber = 3,
  };
  // .primary.InverterStatus inverter_l = 1;
  void clear_inverter_l();
  ::primary::InverterStatus inverter_l() const;
  void set_inverter_l(::primary::InverterStatus value);
  private:
  ::primary::InverterStatus _internal_inverter_l() const;
  void _internal_set_inverter_l(::primary::InverterStatus value);
  public:

  // .primary.InverterStatus inverter_r = 2;
  void clear_inverter_r();
  ::primary::InverterStatus inverter_r() const;
  void set_inverter_r(::primary::InverterStatus value);
  private:
  ::primary::InverterStatus _internal_inverter_r() const;
  void _internal_set_inverter_r(::primary::InverterStatus value);
  public:

  // uint64 _inner_timestamp = 4;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.CarStatus car_status = 3;
  void clear_car_status();
  ::primary::CarStatus car_status() const;
  void set_car_status(::primary::CarStatus value);
  private:
  ::primary::CarStatus _internal_car_status() const;
  void _internal_set_car_status(::primary::CarStatus value);
  public:

  // @@protoc_insertion_point(class_scope:primary.CAR_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int inverter_l_;
  int inverter_r_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int car_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class DAS_ERRORS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.DAS_ERRORS) */ {
 public:
  inline DAS_ERRORS() : DAS_ERRORS(nullptr) {};
  virtual ~DAS_ERRORS();

  DAS_ERRORS(const DAS_ERRORS& from);
  DAS_ERRORS(DAS_ERRORS&& from) noexcept
    : DAS_ERRORS() {
    *this = ::std::move(from);
  }

  inline DAS_ERRORS& operator=(const DAS_ERRORS& from) {
    CopyFrom(from);
    return *this;
  }
  inline DAS_ERRORS& operator=(DAS_ERRORS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DAS_ERRORS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DAS_ERRORS* internal_default_instance() {
    return reinterpret_cast<const DAS_ERRORS*>(
               &_DAS_ERRORS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(DAS_ERRORS& a, DAS_ERRORS& b) {
    a.Swap(&b);
  }
  inline void Swap(DAS_ERRORS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DAS_ERRORS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DAS_ERRORS* New() const final {
    return CreateMaybeMessage<DAS_ERRORS>(nullptr);
  }

  DAS_ERRORS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DAS_ERRORS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DAS_ERRORS& from);
  void MergeFrom(const DAS_ERRORS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DAS_ERRORS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.DAS_ERRORS";
  }
  protected:
  explicit DAS_ERRORS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kDasErrorFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 das_error = 1;
  void clear_das_error();
  ::PROTOBUF_NAMESPACE_ID::uint32 das_error() const;
  void set_das_error(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_das_error() const;
  void _internal_set_das_error(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.DAS_ERRORS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 das_error_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class LV_CURRENT PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.LV_CURRENT) */ {
 public:
  inline LV_CURRENT() : LV_CURRENT(nullptr) {};
  virtual ~LV_CURRENT();

  LV_CURRENT(const LV_CURRENT& from);
  LV_CURRENT(LV_CURRENT&& from) noexcept
    : LV_CURRENT() {
    *this = ::std::move(from);
  }

  inline LV_CURRENT& operator=(const LV_CURRENT& from) {
    CopyFrom(from);
    return *this;
  }
  inline LV_CURRENT& operator=(LV_CURRENT&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LV_CURRENT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LV_CURRENT* internal_default_instance() {
    return reinterpret_cast<const LV_CURRENT*>(
               &_LV_CURRENT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(LV_CURRENT& a, LV_CURRENT& b) {
    a.Swap(&b);
  }
  inline void Swap(LV_CURRENT* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LV_CURRENT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LV_CURRENT* New() const final {
    return CreateMaybeMessage<LV_CURRENT>(nullptr);
  }

  LV_CURRENT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LV_CURRENT>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LV_CURRENT& from);
  void MergeFrom(const LV_CURRENT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LV_CURRENT* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.LV_CURRENT";
  }
  protected:
  explicit LV_CURRENT(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kCurrentFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float current = 1;
  void clear_current();
  float current() const;
  void set_current(float value);
  private:
  float _internal_current() const;
  void _internal_set_current(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.LV_CURRENT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float current_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class LV_VOLTAGE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.LV_VOLTAGE) */ {
 public:
  inline LV_VOLTAGE() : LV_VOLTAGE(nullptr) {};
  virtual ~LV_VOLTAGE();

  LV_VOLTAGE(const LV_VOLTAGE& from);
  LV_VOLTAGE(LV_VOLTAGE&& from) noexcept
    : LV_VOLTAGE() {
    *this = ::std::move(from);
  }

  inline LV_VOLTAGE& operator=(const LV_VOLTAGE& from) {
    CopyFrom(from);
    return *this;
  }
  inline LV_VOLTAGE& operator=(LV_VOLTAGE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LV_VOLTAGE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LV_VOLTAGE* internal_default_instance() {
    return reinterpret_cast<const LV_VOLTAGE*>(
               &_LV_VOLTAGE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(LV_VOLTAGE& a, LV_VOLTAGE& b) {
    a.Swap(&b);
  }
  inline void Swap(LV_VOLTAGE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LV_VOLTAGE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LV_VOLTAGE* New() const final {
    return CreateMaybeMessage<LV_VOLTAGE>(nullptr);
  }

  LV_VOLTAGE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LV_VOLTAGE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LV_VOLTAGE& from);
  void MergeFrom(const LV_VOLTAGE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LV_VOLTAGE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.LV_VOLTAGE";
  }
  protected:
  explicit LV_VOLTAGE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVoltage1FieldNumber = 1,
    kVoltage2FieldNumber = 2,
    kVoltage3FieldNumber = 3,
    kVoltage4FieldNumber = 4,
    kInnerTimestampFieldNumber = 5,
  };
  // float voltage_1 = 1;
  void clear_voltage_1();
  float voltage_1() const;
  void set_voltage_1(float value);
  private:
  float _internal_voltage_1() const;
  void _internal_set_voltage_1(float value);
  public:

  // float voltage_2 = 2;
  void clear_voltage_2();
  float voltage_2() const;
  void set_voltage_2(float value);
  private:
  float _internal_voltage_2() const;
  void _internal_set_voltage_2(float value);
  public:

  // float voltage_3 = 3;
  void clear_voltage_3();
  float voltage_3() const;
  void set_voltage_3(float value);
  private:
  float _internal_voltage_3() const;
  void _internal_set_voltage_3(float value);
  public:

  // float voltage_4 = 4;
  void clear_voltage_4();
  float voltage_4() const;
  void set_voltage_4(float value);
  private:
  float _internal_voltage_4() const;
  void _internal_set_voltage_4(float value);
  public:

  // uint64 _inner_timestamp = 5;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.LV_VOLTAGE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float voltage_1_;
  float voltage_2_;
  float voltage_3_;
  float voltage_4_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class LV_TOTAL_VOLTAGE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.LV_TOTAL_VOLTAGE) */ {
 public:
  inline LV_TOTAL_VOLTAGE() : LV_TOTAL_VOLTAGE(nullptr) {};
  virtual ~LV_TOTAL_VOLTAGE();

  LV_TOTAL_VOLTAGE(const LV_TOTAL_VOLTAGE& from);
  LV_TOTAL_VOLTAGE(LV_TOTAL_VOLTAGE&& from) noexcept
    : LV_TOTAL_VOLTAGE() {
    *this = ::std::move(from);
  }

  inline LV_TOTAL_VOLTAGE& operator=(const LV_TOTAL_VOLTAGE& from) {
    CopyFrom(from);
    return *this;
  }
  inline LV_TOTAL_VOLTAGE& operator=(LV_TOTAL_VOLTAGE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LV_TOTAL_VOLTAGE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LV_TOTAL_VOLTAGE* internal_default_instance() {
    return reinterpret_cast<const LV_TOTAL_VOLTAGE*>(
               &_LV_TOTAL_VOLTAGE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(LV_TOTAL_VOLTAGE& a, LV_TOTAL_VOLTAGE& b) {
    a.Swap(&b);
  }
  inline void Swap(LV_TOTAL_VOLTAGE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LV_TOTAL_VOLTAGE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LV_TOTAL_VOLTAGE* New() const final {
    return CreateMaybeMessage<LV_TOTAL_VOLTAGE>(nullptr);
  }

  LV_TOTAL_VOLTAGE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LV_TOTAL_VOLTAGE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LV_TOTAL_VOLTAGE& from);
  void MergeFrom(const LV_TOTAL_VOLTAGE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LV_TOTAL_VOLTAGE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.LV_TOTAL_VOLTAGE";
  }
  protected:
  explicit LV_TOTAL_VOLTAGE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kTotalVoltageFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float total_voltage = 1;
  void clear_total_voltage();
  float total_voltage() const;
  void set_total_voltage(float value);
  private:
  float _internal_total_voltage() const;
  void _internal_set_total_voltage(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.LV_TOTAL_VOLTAGE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float total_voltage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class LV_TEMPERATURE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.LV_TEMPERATURE) */ {
 public:
  inline LV_TEMPERATURE() : LV_TEMPERATURE(nullptr) {};
  virtual ~LV_TEMPERATURE();

  LV_TEMPERATURE(const LV_TEMPERATURE& from);
  LV_TEMPERATURE(LV_TEMPERATURE&& from) noexcept
    : LV_TEMPERATURE() {
    *this = ::std::move(from);
  }

  inline LV_TEMPERATURE& operator=(const LV_TEMPERATURE& from) {
    CopyFrom(from);
    return *this;
  }
  inline LV_TEMPERATURE& operator=(LV_TEMPERATURE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LV_TEMPERATURE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LV_TEMPERATURE* internal_default_instance() {
    return reinterpret_cast<const LV_TEMPERATURE*>(
               &_LV_TEMPERATURE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(LV_TEMPERATURE& a, LV_TEMPERATURE& b) {
    a.Swap(&b);
  }
  inline void Swap(LV_TEMPERATURE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LV_TEMPERATURE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LV_TEMPERATURE* New() const final {
    return CreateMaybeMessage<LV_TEMPERATURE>(nullptr);
  }

  LV_TEMPERATURE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LV_TEMPERATURE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LV_TEMPERATURE& from);
  void MergeFrom(const LV_TEMPERATURE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LV_TEMPERATURE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.LV_TEMPERATURE";
  }
  protected:
  explicit LV_TEMPERATURE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBpTemperature1FieldNumber = 1,
    kBpTemperature2FieldNumber = 2,
    kDcdc12TemperatureFieldNumber = 3,
    kDcdc24TemperatureFieldNumber = 4,
    kInnerTimestampFieldNumber = 5,
  };
  // float bp_temperature_1 = 1;
  void clear_bp_temperature_1();
  float bp_temperature_1() const;
  void set_bp_temperature_1(float value);
  private:
  float _internal_bp_temperature_1() const;
  void _internal_set_bp_temperature_1(float value);
  public:

  // float bp_temperature_2 = 2;
  void clear_bp_temperature_2();
  float bp_temperature_2() const;
  void set_bp_temperature_2(float value);
  private:
  float _internal_bp_temperature_2() const;
  void _internal_set_bp_temperature_2(float value);
  public:

  // float dcdc12_temperature = 3;
  void clear_dcdc12_temperature();
  float dcdc12_temperature() const;
  void set_dcdc12_temperature(float value);
  private:
  float _internal_dcdc12_temperature() const;
  void _internal_set_dcdc12_temperature(float value);
  public:

  // float dcdc24_temperature = 4;
  void clear_dcdc24_temperature();
  float dcdc24_temperature() const;
  void set_dcdc24_temperature(float value);
  private:
  float _internal_dcdc24_temperature() const;
  void _internal_set_dcdc24_temperature(float value);
  public:

  // uint64 _inner_timestamp = 5;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.LV_TEMPERATURE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float bp_temperature_1_;
  float bp_temperature_2_;
  float dcdc12_temperature_;
  float dcdc24_temperature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class COOLING_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.COOLING_STATUS) */ {
 public:
  inline COOLING_STATUS() : COOLING_STATUS(nullptr) {};
  virtual ~COOLING_STATUS();

  COOLING_STATUS(const COOLING_STATUS& from);
  COOLING_STATUS(COOLING_STATUS&& from) noexcept
    : COOLING_STATUS() {
    *this = ::std::move(from);
  }

  inline COOLING_STATUS& operator=(const COOLING_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline COOLING_STATUS& operator=(COOLING_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const COOLING_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const COOLING_STATUS* internal_default_instance() {
    return reinterpret_cast<const COOLING_STATUS*>(
               &_COOLING_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(COOLING_STATUS& a, COOLING_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(COOLING_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(COOLING_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline COOLING_STATUS* New() const final {
    return CreateMaybeMessage<COOLING_STATUS>(nullptr);
  }

  COOLING_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<COOLING_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const COOLING_STATUS& from);
  void MergeFrom(const COOLING_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(COOLING_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.COOLING_STATUS";
  }
  protected:
  explicit COOLING_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRadiatorsSpeedFieldNumber = 1,
    kPumpsSpeedFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // float radiators_speed = 1;
  void clear_radiators_speed();
  float radiators_speed() const;
  void set_radiators_speed(float value);
  private:
  float _internal_radiators_speed() const;
  void _internal_set_radiators_speed(float value);
  public:

  // float pumps_speed = 2;
  void clear_pumps_speed();
  float pumps_speed() const;
  void set_pumps_speed(float value);
  private:
  float _internal_pumps_speed() const;
  void _internal_set_pumps_speed(float value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.COOLING_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float radiators_speed_;
  float pumps_speed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_RADIATOR_SPEED PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_RADIATOR_SPEED) */ {
 public:
  inline SET_RADIATOR_SPEED() : SET_RADIATOR_SPEED(nullptr) {};
  virtual ~SET_RADIATOR_SPEED();

  SET_RADIATOR_SPEED(const SET_RADIATOR_SPEED& from);
  SET_RADIATOR_SPEED(SET_RADIATOR_SPEED&& from) noexcept
    : SET_RADIATOR_SPEED() {
    *this = ::std::move(from);
  }

  inline SET_RADIATOR_SPEED& operator=(const SET_RADIATOR_SPEED& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_RADIATOR_SPEED& operator=(SET_RADIATOR_SPEED&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_RADIATOR_SPEED& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_RADIATOR_SPEED* internal_default_instance() {
    return reinterpret_cast<const SET_RADIATOR_SPEED*>(
               &_SET_RADIATOR_SPEED_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(SET_RADIATOR_SPEED& a, SET_RADIATOR_SPEED& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_RADIATOR_SPEED* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_RADIATOR_SPEED* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_RADIATOR_SPEED* New() const final {
    return CreateMaybeMessage<SET_RADIATOR_SPEED>(nullptr);
  }

  SET_RADIATOR_SPEED* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_RADIATOR_SPEED>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_RADIATOR_SPEED& from);
  void MergeFrom(const SET_RADIATOR_SPEED& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_RADIATOR_SPEED* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_RADIATOR_SPEED";
  }
  protected:
  explicit SET_RADIATOR_SPEED(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kRadiatorsSpeedFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float radiators_speed = 1;
  void clear_radiators_speed();
  float radiators_speed() const;
  void set_radiators_speed(float value);
  private:
  float _internal_radiators_speed() const;
  void _internal_set_radiators_speed(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_RADIATOR_SPEED)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float radiators_speed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_PUMPS_SPEED PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_PUMPS_SPEED) */ {
 public:
  inline SET_PUMPS_SPEED() : SET_PUMPS_SPEED(nullptr) {};
  virtual ~SET_PUMPS_SPEED();

  SET_PUMPS_SPEED(const SET_PUMPS_SPEED& from);
  SET_PUMPS_SPEED(SET_PUMPS_SPEED&& from) noexcept
    : SET_PUMPS_SPEED() {
    *this = ::std::move(from);
  }

  inline SET_PUMPS_SPEED& operator=(const SET_PUMPS_SPEED& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_PUMPS_SPEED& operator=(SET_PUMPS_SPEED&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_PUMPS_SPEED& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_PUMPS_SPEED* internal_default_instance() {
    return reinterpret_cast<const SET_PUMPS_SPEED*>(
               &_SET_PUMPS_SPEED_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(SET_PUMPS_SPEED& a, SET_PUMPS_SPEED& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_PUMPS_SPEED* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_PUMPS_SPEED* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_PUMPS_SPEED* New() const final {
    return CreateMaybeMessage<SET_PUMPS_SPEED>(nullptr);
  }

  SET_PUMPS_SPEED* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_PUMPS_SPEED>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_PUMPS_SPEED& from);
  void MergeFrom(const SET_PUMPS_SPEED& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_PUMPS_SPEED* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_PUMPS_SPEED";
  }
  protected:
  explicit SET_PUMPS_SPEED(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kPumpsSpeedFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float pumps_speed = 1;
  void clear_pumps_speed();
  float pumps_speed() const;
  void set_pumps_speed(float value);
  private:
  float _internal_pumps_speed() const;
  void _internal_set_pumps_speed(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_PUMPS_SPEED)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float pumps_speed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_INVERTER_CONNECTION_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_INVERTER_CONNECTION_STATUS) */ {
 public:
  inline SET_INVERTER_CONNECTION_STATUS() : SET_INVERTER_CONNECTION_STATUS(nullptr) {};
  virtual ~SET_INVERTER_CONNECTION_STATUS();

  SET_INVERTER_CONNECTION_STATUS(const SET_INVERTER_CONNECTION_STATUS& from);
  SET_INVERTER_CONNECTION_STATUS(SET_INVERTER_CONNECTION_STATUS&& from) noexcept
    : SET_INVERTER_CONNECTION_STATUS() {
    *this = ::std::move(from);
  }

  inline SET_INVERTER_CONNECTION_STATUS& operator=(const SET_INVERTER_CONNECTION_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_INVERTER_CONNECTION_STATUS& operator=(SET_INVERTER_CONNECTION_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_INVERTER_CONNECTION_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_INVERTER_CONNECTION_STATUS* internal_default_instance() {
    return reinterpret_cast<const SET_INVERTER_CONNECTION_STATUS*>(
               &_SET_INVERTER_CONNECTION_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(SET_INVERTER_CONNECTION_STATUS& a, SET_INVERTER_CONNECTION_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_INVERTER_CONNECTION_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_INVERTER_CONNECTION_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_INVERTER_CONNECTION_STATUS* New() const final {
    return CreateMaybeMessage<SET_INVERTER_CONNECTION_STATUS>(nullptr);
  }

  SET_INVERTER_CONNECTION_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_INVERTER_CONNECTION_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_INVERTER_CONNECTION_STATUS& from);
  void MergeFrom(const SET_INVERTER_CONNECTION_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_INVERTER_CONNECTION_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_INVERTER_CONNECTION_STATUS";
  }
  protected:
  explicit SET_INVERTER_CONNECTION_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle status = 1;
  void clear_status();
  ::primary::Toggle status() const;
  void set_status(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_status() const;
  void _internal_set_status(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_INVERTER_CONNECTION_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class INVERTER_CONNECTION_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.INVERTER_CONNECTION_STATUS) */ {
 public:
  inline INVERTER_CONNECTION_STATUS() : INVERTER_CONNECTION_STATUS(nullptr) {};
  virtual ~INVERTER_CONNECTION_STATUS();

  INVERTER_CONNECTION_STATUS(const INVERTER_CONNECTION_STATUS& from);
  INVERTER_CONNECTION_STATUS(INVERTER_CONNECTION_STATUS&& from) noexcept
    : INVERTER_CONNECTION_STATUS() {
    *this = ::std::move(from);
  }

  inline INVERTER_CONNECTION_STATUS& operator=(const INVERTER_CONNECTION_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline INVERTER_CONNECTION_STATUS& operator=(INVERTER_CONNECTION_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INVERTER_CONNECTION_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const INVERTER_CONNECTION_STATUS* internal_default_instance() {
    return reinterpret_cast<const INVERTER_CONNECTION_STATUS*>(
               &_INVERTER_CONNECTION_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(INVERTER_CONNECTION_STATUS& a, INVERTER_CONNECTION_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(INVERTER_CONNECTION_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INVERTER_CONNECTION_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INVERTER_CONNECTION_STATUS* New() const final {
    return CreateMaybeMessage<INVERTER_CONNECTION_STATUS>(nullptr);
  }

  INVERTER_CONNECTION_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INVERTER_CONNECTION_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INVERTER_CONNECTION_STATUS& from);
  void MergeFrom(const INVERTER_CONNECTION_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INVERTER_CONNECTION_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.INVERTER_CONNECTION_STATUS";
  }
  protected:
  explicit INVERTER_CONNECTION_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle status = 1;
  void clear_status();
  ::primary::Toggle status() const;
  void set_status(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_status() const;
  void _internal_set_status(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.INVERTER_CONNECTION_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class LV_ERRORS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.LV_ERRORS) */ {
 public:
  inline LV_ERRORS() : LV_ERRORS(nullptr) {};
  virtual ~LV_ERRORS();

  LV_ERRORS(const LV_ERRORS& from);
  LV_ERRORS(LV_ERRORS&& from) noexcept
    : LV_ERRORS() {
    *this = ::std::move(from);
  }

  inline LV_ERRORS& operator=(const LV_ERRORS& from) {
    CopyFrom(from);
    return *this;
  }
  inline LV_ERRORS& operator=(LV_ERRORS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LV_ERRORS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LV_ERRORS* internal_default_instance() {
    return reinterpret_cast<const LV_ERRORS*>(
               &_LV_ERRORS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(LV_ERRORS& a, LV_ERRORS& b) {
    a.Swap(&b);
  }
  inline void Swap(LV_ERRORS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LV_ERRORS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LV_ERRORS* New() const final {
    return CreateMaybeMessage<LV_ERRORS>(nullptr);
  }

  LV_ERRORS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LV_ERRORS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LV_ERRORS& from);
  void MergeFrom(const LV_ERRORS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LV_ERRORS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.LV_ERRORS";
  }
  protected:
  explicit LV_ERRORS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWarningsFieldNumber = 1,
    kErrorsFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // uint32 warnings = 1;
  void clear_warnings();
  ::PROTOBUF_NAMESPACE_ID::uint32 warnings() const;
  void set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_warnings() const;
  void _internal_set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 errors = 2;
  void clear_errors();
  ::PROTOBUF_NAMESPACE_ID::uint32 errors() const;
  void set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errors() const;
  void _internal_set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.LV_ERRORS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 warnings_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errors_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SHUTDOWN_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SHUTDOWN_STATUS) */ {
 public:
  inline SHUTDOWN_STATUS() : SHUTDOWN_STATUS(nullptr) {};
  virtual ~SHUTDOWN_STATUS();

  SHUTDOWN_STATUS(const SHUTDOWN_STATUS& from);
  SHUTDOWN_STATUS(SHUTDOWN_STATUS&& from) noexcept
    : SHUTDOWN_STATUS() {
    *this = ::std::move(from);
  }

  inline SHUTDOWN_STATUS& operator=(const SHUTDOWN_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SHUTDOWN_STATUS& operator=(SHUTDOWN_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SHUTDOWN_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SHUTDOWN_STATUS* internal_default_instance() {
    return reinterpret_cast<const SHUTDOWN_STATUS*>(
               &_SHUTDOWN_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(SHUTDOWN_STATUS& a, SHUTDOWN_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(SHUTDOWN_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SHUTDOWN_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SHUTDOWN_STATUS* New() const final {
    return CreateMaybeMessage<SHUTDOWN_STATUS>(nullptr);
  }

  SHUTDOWN_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SHUTDOWN_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SHUTDOWN_STATUS& from);
  void MergeFrom(const SHUTDOWN_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SHUTDOWN_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SHUTDOWN_STATUS";
  }
  protected:
  explicit SHUTDOWN_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 3,
    kInputFieldNumber = 1,
    kOutputFieldNumber = 2,
  };
  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool input = 1;
  void clear_input();
  bool input() const;
  void set_input(bool value);
  private:
  bool _internal_input() const;
  void _internal_set_input(bool value);
  public:

  // bool output = 2;
  void clear_output();
  bool output() const;
  void set_output(bool value);
  private:
  bool _internal_output() const;
  void _internal_set_output(bool value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SHUTDOWN_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  bool input_;
  bool output_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class MARKER PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.MARKER) */ {
 public:
  inline MARKER() : MARKER(nullptr) {};
  virtual ~MARKER();

  MARKER(const MARKER& from);
  MARKER(MARKER&& from) noexcept
    : MARKER() {
    *this = ::std::move(from);
  }

  inline MARKER& operator=(const MARKER& from) {
    CopyFrom(from);
    return *this;
  }
  inline MARKER& operator=(MARKER&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MARKER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MARKER* internal_default_instance() {
    return reinterpret_cast<const MARKER*>(
               &_MARKER_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(MARKER& a, MARKER& b) {
    a.Swap(&b);
  }
  inline void Swap(MARKER* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MARKER* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MARKER* New() const final {
    return CreateMaybeMessage<MARKER>(nullptr);
  }

  MARKER* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MARKER>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MARKER& from);
  void MergeFrom(const MARKER& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MARKER* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.MARKER";
  }
  protected:
  explicit MARKER(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.MARKER)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_CELLS_VOLTAGE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_CELLS_VOLTAGE) */ {
 public:
  inline HV_CELLS_VOLTAGE() : HV_CELLS_VOLTAGE(nullptr) {};
  virtual ~HV_CELLS_VOLTAGE();

  HV_CELLS_VOLTAGE(const HV_CELLS_VOLTAGE& from);
  HV_CELLS_VOLTAGE(HV_CELLS_VOLTAGE&& from) noexcept
    : HV_CELLS_VOLTAGE() {
    *this = ::std::move(from);
  }

  inline HV_CELLS_VOLTAGE& operator=(const HV_CELLS_VOLTAGE& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_CELLS_VOLTAGE& operator=(HV_CELLS_VOLTAGE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_CELLS_VOLTAGE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_CELLS_VOLTAGE* internal_default_instance() {
    return reinterpret_cast<const HV_CELLS_VOLTAGE*>(
               &_HV_CELLS_VOLTAGE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(HV_CELLS_VOLTAGE& a, HV_CELLS_VOLTAGE& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_CELLS_VOLTAGE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_CELLS_VOLTAGE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_CELLS_VOLTAGE* New() const final {
    return CreateMaybeMessage<HV_CELLS_VOLTAGE>(nullptr);
  }

  HV_CELLS_VOLTAGE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_CELLS_VOLTAGE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_CELLS_VOLTAGE& from);
  void MergeFrom(const HV_CELLS_VOLTAGE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_CELLS_VOLTAGE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_CELLS_VOLTAGE";
  }
  protected:
  explicit HV_CELLS_VOLTAGE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartIndexFieldNumber = 1,
    kVoltage0FieldNumber = 2,
    kVoltage1FieldNumber = 3,
    kVoltage2FieldNumber = 4,
    kInnerTimestampFieldNumber = 5,
  };
  // uint32 start_index = 1;
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float voltage_0 = 2;
  void clear_voltage_0();
  float voltage_0() const;
  void set_voltage_0(float value);
  private:
  float _internal_voltage_0() const;
  void _internal_set_voltage_0(float value);
  public:

  // float voltage_1 = 3;
  void clear_voltage_1();
  float voltage_1() const;
  void set_voltage_1(float value);
  private:
  float _internal_voltage_1() const;
  void _internal_set_voltage_1(float value);
  public:

  // float voltage_2 = 4;
  void clear_voltage_2();
  float voltage_2() const;
  void set_voltage_2(float value);
  private:
  float _internal_voltage_2() const;
  void _internal_set_voltage_2(float value);
  public:

  // uint64 _inner_timestamp = 5;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_CELLS_VOLTAGE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index_;
  float voltage_0_;
  float voltage_1_;
  float voltage_2_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_CELLS_TEMP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_CELLS_TEMP) */ {
 public:
  inline HV_CELLS_TEMP() : HV_CELLS_TEMP(nullptr) {};
  virtual ~HV_CELLS_TEMP();

  HV_CELLS_TEMP(const HV_CELLS_TEMP& from);
  HV_CELLS_TEMP(HV_CELLS_TEMP&& from) noexcept
    : HV_CELLS_TEMP() {
    *this = ::std::move(from);
  }

  inline HV_CELLS_TEMP& operator=(const HV_CELLS_TEMP& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_CELLS_TEMP& operator=(HV_CELLS_TEMP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_CELLS_TEMP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_CELLS_TEMP* internal_default_instance() {
    return reinterpret_cast<const HV_CELLS_TEMP*>(
               &_HV_CELLS_TEMP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(HV_CELLS_TEMP& a, HV_CELLS_TEMP& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_CELLS_TEMP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_CELLS_TEMP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_CELLS_TEMP* New() const final {
    return CreateMaybeMessage<HV_CELLS_TEMP>(nullptr);
  }

  HV_CELLS_TEMP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_CELLS_TEMP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_CELLS_TEMP& from);
  void MergeFrom(const HV_CELLS_TEMP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_CELLS_TEMP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_CELLS_TEMP";
  }
  protected:
  explicit HV_CELLS_TEMP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartIndexFieldNumber = 1,
    kTemp0FieldNumber = 2,
    kTemp1FieldNumber = 3,
    kTemp2FieldNumber = 4,
    kTemp3FieldNumber = 5,
    kTemp4FieldNumber = 6,
    kInnerTimestampFieldNumber = 8,
    kTemp5FieldNumber = 7,
  };
  // uint32 start_index = 1;
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float temp_0 = 2;
  void clear_temp_0();
  float temp_0() const;
  void set_temp_0(float value);
  private:
  float _internal_temp_0() const;
  void _internal_set_temp_0(float value);
  public:

  // float temp_1 = 3;
  void clear_temp_1();
  float temp_1() const;
  void set_temp_1(float value);
  private:
  float _internal_temp_1() const;
  void _internal_set_temp_1(float value);
  public:

  // float temp_2 = 4;
  void clear_temp_2();
  float temp_2() const;
  void set_temp_2(float value);
  private:
  float _internal_temp_2() const;
  void _internal_set_temp_2(float value);
  public:

  // float temp_3 = 5;
  void clear_temp_3();
  float temp_3() const;
  void set_temp_3(float value);
  private:
  float _internal_temp_3() const;
  void _internal_set_temp_3(float value);
  public:

  // float temp_4 = 6;
  void clear_temp_4();
  float temp_4() const;
  void set_temp_4(float value);
  private:
  float _internal_temp_4() const;
  void _internal_set_temp_4(float value);
  public:

  // uint64 _inner_timestamp = 8;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float temp_5 = 7;
  void clear_temp_5();
  float temp_5() const;
  void set_temp_5(float value);
  private:
  float _internal_temp_5() const;
  void _internal_set_temp_5(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_CELLS_TEMP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index_;
  float temp_0_;
  float temp_1_;
  float temp_2_;
  float temp_3_;
  float temp_4_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float temp_5_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HV_CELL_BALANCING_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HV_CELL_BALANCING_STATUS) */ {
 public:
  inline HV_CELL_BALANCING_STATUS() : HV_CELL_BALANCING_STATUS(nullptr) {};
  virtual ~HV_CELL_BALANCING_STATUS();

  HV_CELL_BALANCING_STATUS(const HV_CELL_BALANCING_STATUS& from);
  HV_CELL_BALANCING_STATUS(HV_CELL_BALANCING_STATUS&& from) noexcept
    : HV_CELL_BALANCING_STATUS() {
    *this = ::std::move(from);
  }

  inline HV_CELL_BALANCING_STATUS& operator=(const HV_CELL_BALANCING_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HV_CELL_BALANCING_STATUS& operator=(HV_CELL_BALANCING_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HV_CELL_BALANCING_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HV_CELL_BALANCING_STATUS* internal_default_instance() {
    return reinterpret_cast<const HV_CELL_BALANCING_STATUS*>(
               &_HV_CELL_BALANCING_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(HV_CELL_BALANCING_STATUS& a, HV_CELL_BALANCING_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(HV_CELL_BALANCING_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HV_CELL_BALANCING_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HV_CELL_BALANCING_STATUS* New() const final {
    return CreateMaybeMessage<HV_CELL_BALANCING_STATUS>(nullptr);
  }

  HV_CELL_BALANCING_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HV_CELL_BALANCING_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HV_CELL_BALANCING_STATUS& from);
  void MergeFrom(const HV_CELL_BALANCING_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HV_CELL_BALANCING_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HV_CELL_BALANCING_STATUS";
  }
  protected:
  explicit HV_CELL_BALANCING_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kBalancingStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle balancing_status = 1;
  void clear_balancing_status();
  ::primary::Toggle balancing_status() const;
  void set_balancing_status(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_balancing_status() const;
  void _internal_set_balancing_status(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HV_CELL_BALANCING_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int balancing_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SET_CELL_BALANCING_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SET_CELL_BALANCING_STATUS) */ {
 public:
  inline SET_CELL_BALANCING_STATUS() : SET_CELL_BALANCING_STATUS(nullptr) {};
  virtual ~SET_CELL_BALANCING_STATUS();

  SET_CELL_BALANCING_STATUS(const SET_CELL_BALANCING_STATUS& from);
  SET_CELL_BALANCING_STATUS(SET_CELL_BALANCING_STATUS&& from) noexcept
    : SET_CELL_BALANCING_STATUS() {
    *this = ::std::move(from);
  }

  inline SET_CELL_BALANCING_STATUS& operator=(const SET_CELL_BALANCING_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SET_CELL_BALANCING_STATUS& operator=(SET_CELL_BALANCING_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SET_CELL_BALANCING_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SET_CELL_BALANCING_STATUS* internal_default_instance() {
    return reinterpret_cast<const SET_CELL_BALANCING_STATUS*>(
               &_SET_CELL_BALANCING_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(SET_CELL_BALANCING_STATUS& a, SET_CELL_BALANCING_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(SET_CELL_BALANCING_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SET_CELL_BALANCING_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SET_CELL_BALANCING_STATUS* New() const final {
    return CreateMaybeMessage<SET_CELL_BALANCING_STATUS>(nullptr);
  }

  SET_CELL_BALANCING_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SET_CELL_BALANCING_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SET_CELL_BALANCING_STATUS& from);
  void MergeFrom(const SET_CELL_BALANCING_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SET_CELL_BALANCING_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SET_CELL_BALANCING_STATUS";
  }
  protected:
  explicit SET_CELL_BALANCING_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kSetBalancingStatusFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .primary.Toggle set_balancing_status = 1;
  void clear_set_balancing_status();
  ::primary::Toggle set_balancing_status() const;
  void set_set_balancing_status(::primary::Toggle value);
  private:
  ::primary::Toggle _internal_set_balancing_status() const;
  void _internal_set_set_balancing_status(::primary::Toggle value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SET_CELL_BALANCING_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int set_balancing_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class HANDCART_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.HANDCART_STATUS) */ {
 public:
  inline HANDCART_STATUS() : HANDCART_STATUS(nullptr) {};
  virtual ~HANDCART_STATUS();

  HANDCART_STATUS(const HANDCART_STATUS& from);
  HANDCART_STATUS(HANDCART_STATUS&& from) noexcept
    : HANDCART_STATUS() {
    *this = ::std::move(from);
  }

  inline HANDCART_STATUS& operator=(const HANDCART_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline HANDCART_STATUS& operator=(HANDCART_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HANDCART_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HANDCART_STATUS* internal_default_instance() {
    return reinterpret_cast<const HANDCART_STATUS*>(
               &_HANDCART_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(HANDCART_STATUS& a, HANDCART_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(HANDCART_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HANDCART_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HANDCART_STATUS* New() const final {
    return CreateMaybeMessage<HANDCART_STATUS>(nullptr);
  }

  HANDCART_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HANDCART_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HANDCART_STATUS& from);
  void MergeFrom(const HANDCART_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HANDCART_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.HANDCART_STATUS";
  }
  protected:
  explicit HANDCART_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 2,
    kConnectedFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 2;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool connected = 1;
  void clear_connected();
  bool connected() const;
  void set_connected(bool value);
  private:
  bool _internal_connected() const;
  void _internal_set_connected(bool value);
  public:

  // @@protoc_insertion_point(class_scope:primary.HANDCART_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  bool connected_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class SPEED PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.SPEED) */ {
 public:
  inline SPEED() : SPEED(nullptr) {};
  virtual ~SPEED();

  SPEED(const SPEED& from);
  SPEED(SPEED&& from) noexcept
    : SPEED() {
    *this = ::std::move(from);
  }

  inline SPEED& operator=(const SPEED& from) {
    CopyFrom(from);
    return *this;
  }
  inline SPEED& operator=(SPEED&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SPEED& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SPEED* internal_default_instance() {
    return reinterpret_cast<const SPEED*>(
               &_SPEED_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(SPEED& a, SPEED& b) {
    a.Swap(&b);
  }
  inline void Swap(SPEED* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SPEED* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SPEED* New() const final {
    return CreateMaybeMessage<SPEED>(nullptr);
  }

  SPEED* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SPEED>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SPEED& from);
  void MergeFrom(const SPEED& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SPEED* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.SPEED";
  }
  protected:
  explicit SPEED(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEncoderRFieldNumber = 1,
    kEncoderLFieldNumber = 2,
    kInverterRFieldNumber = 3,
    kInverterLFieldNumber = 4,
    kInnerTimestampFieldNumber = 5,
  };
  // float encoder_r = 1;
  void clear_encoder_r();
  float encoder_r() const;
  void set_encoder_r(float value);
  private:
  float _internal_encoder_r() const;
  void _internal_set_encoder_r(float value);
  public:

  // float encoder_l = 2;
  void clear_encoder_l();
  float encoder_l() const;
  void set_encoder_l(float value);
  private:
  float _internal_encoder_l() const;
  void _internal_set_encoder_l(float value);
  public:

  // float inverter_r = 3;
  void clear_inverter_r();
  float inverter_r() const;
  void set_inverter_r(float value);
  private:
  float _internal_inverter_r() const;
  void _internal_set_inverter_r(float value);
  public:

  // float inverter_l = 4;
  void clear_inverter_l();
  float inverter_l() const;
  void set_inverter_l(float value);
  private:
  float _internal_inverter_l() const;
  void _internal_set_inverter_l(float value);
  public:

  // uint64 _inner_timestamp = 5;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.SPEED)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float encoder_r_;
  float encoder_l_;
  float inverter_r_;
  float inverter_l_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class INV_L_REQUEST PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.INV_L_REQUEST) */ {
 public:
  inline INV_L_REQUEST() : INV_L_REQUEST(nullptr) {};
  virtual ~INV_L_REQUEST();

  INV_L_REQUEST(const INV_L_REQUEST& from);
  INV_L_REQUEST(INV_L_REQUEST&& from) noexcept
    : INV_L_REQUEST() {
    *this = ::std::move(from);
  }

  inline INV_L_REQUEST& operator=(const INV_L_REQUEST& from) {
    CopyFrom(from);
    return *this;
  }
  inline INV_L_REQUEST& operator=(INV_L_REQUEST&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INV_L_REQUEST& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const INV_L_REQUEST* internal_default_instance() {
    return reinterpret_cast<const INV_L_REQUEST*>(
               &_INV_L_REQUEST_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(INV_L_REQUEST& a, INV_L_REQUEST& b) {
    a.Swap(&b);
  }
  inline void Swap(INV_L_REQUEST* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INV_L_REQUEST* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INV_L_REQUEST* New() const final {
    return CreateMaybeMessage<INV_L_REQUEST>(nullptr);
  }

  INV_L_REQUEST* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INV_L_REQUEST>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INV_L_REQUEST& from);
  void MergeFrom(const INV_L_REQUEST& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INV_L_REQUEST* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.INV_L_REQUEST";
  }
  protected:
  explicit INV_L_REQUEST(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kData0FieldNumber = 1,
    kData1FieldNumber = 2,
    kData2FieldNumber = 3,
    kData3FieldNumber = 4,
    kData4FieldNumber = 5,
    kData5FieldNumber = 6,
    kData6FieldNumber = 7,
    kData7FieldNumber = 8,
    kInnerTimestampFieldNumber = 9,
  };
  // uint32 data_0 = 1;
  void clear_data_0();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0() const;
  void set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_0() const;
  void _internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_1 = 2;
  void clear_data_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1() const;
  void set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_1() const;
  void _internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_2 = 3;
  void clear_data_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2() const;
  void set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_2() const;
  void _internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_3 = 4;
  void clear_data_3();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3() const;
  void set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_3() const;
  void _internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_4 = 5;
  void clear_data_4();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4() const;
  void set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_4() const;
  void _internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_5 = 6;
  void clear_data_5();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5() const;
  void set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_5() const;
  void _internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_6 = 7;
  void clear_data_6();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6() const;
  void set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_6() const;
  void _internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_7 = 8;
  void clear_data_7();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_7() const;
  void set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_7() const;
  void _internal_set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 9;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.INV_L_REQUEST)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_7_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class INV_R_REQUEST PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.INV_R_REQUEST) */ {
 public:
  inline INV_R_REQUEST() : INV_R_REQUEST(nullptr) {};
  virtual ~INV_R_REQUEST();

  INV_R_REQUEST(const INV_R_REQUEST& from);
  INV_R_REQUEST(INV_R_REQUEST&& from) noexcept
    : INV_R_REQUEST() {
    *this = ::std::move(from);
  }

  inline INV_R_REQUEST& operator=(const INV_R_REQUEST& from) {
    CopyFrom(from);
    return *this;
  }
  inline INV_R_REQUEST& operator=(INV_R_REQUEST&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INV_R_REQUEST& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const INV_R_REQUEST* internal_default_instance() {
    return reinterpret_cast<const INV_R_REQUEST*>(
               &_INV_R_REQUEST_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(INV_R_REQUEST& a, INV_R_REQUEST& b) {
    a.Swap(&b);
  }
  inline void Swap(INV_R_REQUEST* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INV_R_REQUEST* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INV_R_REQUEST* New() const final {
    return CreateMaybeMessage<INV_R_REQUEST>(nullptr);
  }

  INV_R_REQUEST* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INV_R_REQUEST>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INV_R_REQUEST& from);
  void MergeFrom(const INV_R_REQUEST& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INV_R_REQUEST* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.INV_R_REQUEST";
  }
  protected:
  explicit INV_R_REQUEST(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kData0FieldNumber = 1,
    kData1FieldNumber = 2,
    kData2FieldNumber = 3,
    kData3FieldNumber = 4,
    kData4FieldNumber = 5,
    kData5FieldNumber = 6,
    kData6FieldNumber = 7,
    kData7FieldNumber = 8,
    kInnerTimestampFieldNumber = 9,
  };
  // uint32 data_0 = 1;
  void clear_data_0();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0() const;
  void set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_0() const;
  void _internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_1 = 2;
  void clear_data_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1() const;
  void set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_1() const;
  void _internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_2 = 3;
  void clear_data_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2() const;
  void set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_2() const;
  void _internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_3 = 4;
  void clear_data_3();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3() const;
  void set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_3() const;
  void _internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_4 = 5;
  void clear_data_4();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4() const;
  void set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_4() const;
  void _internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_5 = 6;
  void clear_data_5();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5() const;
  void set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_5() const;
  void _internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_6 = 7;
  void clear_data_6();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6() const;
  void set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_6() const;
  void _internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_7 = 8;
  void clear_data_7();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_7() const;
  void set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_7() const;
  void _internal_set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 9;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.INV_R_REQUEST)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_7_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class INV_L_RESPONSE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.INV_L_RESPONSE) */ {
 public:
  inline INV_L_RESPONSE() : INV_L_RESPONSE(nullptr) {};
  virtual ~INV_L_RESPONSE();

  INV_L_RESPONSE(const INV_L_RESPONSE& from);
  INV_L_RESPONSE(INV_L_RESPONSE&& from) noexcept
    : INV_L_RESPONSE() {
    *this = ::std::move(from);
  }

  inline INV_L_RESPONSE& operator=(const INV_L_RESPONSE& from) {
    CopyFrom(from);
    return *this;
  }
  inline INV_L_RESPONSE& operator=(INV_L_RESPONSE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INV_L_RESPONSE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const INV_L_RESPONSE* internal_default_instance() {
    return reinterpret_cast<const INV_L_RESPONSE*>(
               &_INV_L_RESPONSE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(INV_L_RESPONSE& a, INV_L_RESPONSE& b) {
    a.Swap(&b);
  }
  inline void Swap(INV_L_RESPONSE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INV_L_RESPONSE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INV_L_RESPONSE* New() const final {
    return CreateMaybeMessage<INV_L_RESPONSE>(nullptr);
  }

  INV_L_RESPONSE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INV_L_RESPONSE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INV_L_RESPONSE& from);
  void MergeFrom(const INV_L_RESPONSE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INV_L_RESPONSE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.INV_L_RESPONSE";
  }
  protected:
  explicit INV_L_RESPONSE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegIdFieldNumber = 1,
    kData0FieldNumber = 2,
    kData1FieldNumber = 3,
    kData2FieldNumber = 4,
    kData3FieldNumber = 5,
    kData4FieldNumber = 6,
    kData5FieldNumber = 7,
    kData6FieldNumber = 8,
    kInnerTimestampFieldNumber = 9,
  };
  // uint32 reg_id = 1;
  void clear_reg_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 reg_id() const;
  void set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reg_id() const;
  void _internal_set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_0 = 2;
  void clear_data_0();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0() const;
  void set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_0() const;
  void _internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_1 = 3;
  void clear_data_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1() const;
  void set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_1() const;
  void _internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_2 = 4;
  void clear_data_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2() const;
  void set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_2() const;
  void _internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_3 = 5;
  void clear_data_3();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3() const;
  void set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_3() const;
  void _internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_4 = 6;
  void clear_data_4();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4() const;
  void set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_4() const;
  void _internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_5 = 7;
  void clear_data_5();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5() const;
  void set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_5() const;
  void _internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_6 = 8;
  void clear_data_6();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6() const;
  void set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_6() const;
  void _internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 9;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.INV_L_RESPONSE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reg_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class INV_R_RESPONSE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.INV_R_RESPONSE) */ {
 public:
  inline INV_R_RESPONSE() : INV_R_RESPONSE(nullptr) {};
  virtual ~INV_R_RESPONSE();

  INV_R_RESPONSE(const INV_R_RESPONSE& from);
  INV_R_RESPONSE(INV_R_RESPONSE&& from) noexcept
    : INV_R_RESPONSE() {
    *this = ::std::move(from);
  }

  inline INV_R_RESPONSE& operator=(const INV_R_RESPONSE& from) {
    CopyFrom(from);
    return *this;
  }
  inline INV_R_RESPONSE& operator=(INV_R_RESPONSE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INV_R_RESPONSE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const INV_R_RESPONSE* internal_default_instance() {
    return reinterpret_cast<const INV_R_RESPONSE*>(
               &_INV_R_RESPONSE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(INV_R_RESPONSE& a, INV_R_RESPONSE& b) {
    a.Swap(&b);
  }
  inline void Swap(INV_R_RESPONSE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INV_R_RESPONSE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INV_R_RESPONSE* New() const final {
    return CreateMaybeMessage<INV_R_RESPONSE>(nullptr);
  }

  INV_R_RESPONSE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INV_R_RESPONSE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INV_R_RESPONSE& from);
  void MergeFrom(const INV_R_RESPONSE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INV_R_RESPONSE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.INV_R_RESPONSE";
  }
  protected:
  explicit INV_R_RESPONSE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRegIdFieldNumber = 1,
    kData0FieldNumber = 2,
    kData1FieldNumber = 3,
    kData2FieldNumber = 4,
    kData3FieldNumber = 5,
    kData4FieldNumber = 6,
    kData5FieldNumber = 7,
    kData6FieldNumber = 8,
    kInnerTimestampFieldNumber = 9,
  };
  // uint32 reg_id = 1;
  void clear_reg_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 reg_id() const;
  void set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reg_id() const;
  void _internal_set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_0 = 2;
  void clear_data_0();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0() const;
  void set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_0() const;
  void _internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_1 = 3;
  void clear_data_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1() const;
  void set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_1() const;
  void _internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_2 = 4;
  void clear_data_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2() const;
  void set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_2() const;
  void _internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_3 = 5;
  void clear_data_3();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3() const;
  void set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_3() const;
  void _internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_4 = 6;
  void clear_data_4();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4() const;
  void set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_4() const;
  void _internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_5 = 7;
  void clear_data_5();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5() const;
  void set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_5() const;
  void _internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 data_6 = 8;
  void clear_data_6();
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6() const;
  void set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data_6() const;
  void _internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 9;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.INV_R_RESPONSE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reg_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_0_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_4_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_5_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_6_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_0_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_0_TX) */ {
 public:
  inline FLASH_CELLBOARD_0_TX() : FLASH_CELLBOARD_0_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_0_TX();

  FLASH_CELLBOARD_0_TX(const FLASH_CELLBOARD_0_TX& from);
  FLASH_CELLBOARD_0_TX(FLASH_CELLBOARD_0_TX&& from) noexcept
    : FLASH_CELLBOARD_0_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_0_TX& operator=(const FLASH_CELLBOARD_0_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_0_TX& operator=(FLASH_CELLBOARD_0_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_0_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_0_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_0_TX*>(
               &_FLASH_CELLBOARD_0_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(FLASH_CELLBOARD_0_TX& a, FLASH_CELLBOARD_0_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_0_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_0_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_0_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_TX>(nullptr);
  }

  FLASH_CELLBOARD_0_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_0_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_0_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_0_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_0_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_0_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_0_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_0_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_0_RX) */ {
 public:
  inline FLASH_CELLBOARD_0_RX() : FLASH_CELLBOARD_0_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_0_RX();

  FLASH_CELLBOARD_0_RX(const FLASH_CELLBOARD_0_RX& from);
  FLASH_CELLBOARD_0_RX(FLASH_CELLBOARD_0_RX&& from) noexcept
    : FLASH_CELLBOARD_0_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_0_RX& operator=(const FLASH_CELLBOARD_0_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_0_RX& operator=(FLASH_CELLBOARD_0_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_0_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_0_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_0_RX*>(
               &_FLASH_CELLBOARD_0_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(FLASH_CELLBOARD_0_RX& a, FLASH_CELLBOARD_0_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_0_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_0_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_0_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_RX>(nullptr);
  }

  FLASH_CELLBOARD_0_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_0_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_0_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_0_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_0_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_0_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_0_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_1_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_1_TX) */ {
 public:
  inline FLASH_CELLBOARD_1_TX() : FLASH_CELLBOARD_1_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_1_TX();

  FLASH_CELLBOARD_1_TX(const FLASH_CELLBOARD_1_TX& from);
  FLASH_CELLBOARD_1_TX(FLASH_CELLBOARD_1_TX&& from) noexcept
    : FLASH_CELLBOARD_1_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_1_TX& operator=(const FLASH_CELLBOARD_1_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_1_TX& operator=(FLASH_CELLBOARD_1_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_1_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_1_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_1_TX*>(
               &_FLASH_CELLBOARD_1_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(FLASH_CELLBOARD_1_TX& a, FLASH_CELLBOARD_1_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_1_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_1_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_1_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_TX>(nullptr);
  }

  FLASH_CELLBOARD_1_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_1_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_1_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_1_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_1_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_1_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_1_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_1_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_1_RX) */ {
 public:
  inline FLASH_CELLBOARD_1_RX() : FLASH_CELLBOARD_1_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_1_RX();

  FLASH_CELLBOARD_1_RX(const FLASH_CELLBOARD_1_RX& from);
  FLASH_CELLBOARD_1_RX(FLASH_CELLBOARD_1_RX&& from) noexcept
    : FLASH_CELLBOARD_1_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_1_RX& operator=(const FLASH_CELLBOARD_1_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_1_RX& operator=(FLASH_CELLBOARD_1_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_1_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_1_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_1_RX*>(
               &_FLASH_CELLBOARD_1_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(FLASH_CELLBOARD_1_RX& a, FLASH_CELLBOARD_1_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_1_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_1_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_1_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_RX>(nullptr);
  }

  FLASH_CELLBOARD_1_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_1_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_1_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_1_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_1_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_1_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_1_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_2_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_2_TX) */ {
 public:
  inline FLASH_CELLBOARD_2_TX() : FLASH_CELLBOARD_2_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_2_TX();

  FLASH_CELLBOARD_2_TX(const FLASH_CELLBOARD_2_TX& from);
  FLASH_CELLBOARD_2_TX(FLASH_CELLBOARD_2_TX&& from) noexcept
    : FLASH_CELLBOARD_2_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_2_TX& operator=(const FLASH_CELLBOARD_2_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_2_TX& operator=(FLASH_CELLBOARD_2_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_2_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_2_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_2_TX*>(
               &_FLASH_CELLBOARD_2_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(FLASH_CELLBOARD_2_TX& a, FLASH_CELLBOARD_2_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_2_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_2_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_2_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_TX>(nullptr);
  }

  FLASH_CELLBOARD_2_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_2_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_2_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_2_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_2_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_2_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_2_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_2_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_2_RX) */ {
 public:
  inline FLASH_CELLBOARD_2_RX() : FLASH_CELLBOARD_2_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_2_RX();

  FLASH_CELLBOARD_2_RX(const FLASH_CELLBOARD_2_RX& from);
  FLASH_CELLBOARD_2_RX(FLASH_CELLBOARD_2_RX&& from) noexcept
    : FLASH_CELLBOARD_2_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_2_RX& operator=(const FLASH_CELLBOARD_2_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_2_RX& operator=(FLASH_CELLBOARD_2_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_2_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_2_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_2_RX*>(
               &_FLASH_CELLBOARD_2_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(FLASH_CELLBOARD_2_RX& a, FLASH_CELLBOARD_2_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_2_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_2_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_2_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_RX>(nullptr);
  }

  FLASH_CELLBOARD_2_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_2_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_2_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_2_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_2_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_2_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_2_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_3_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_3_TX) */ {
 public:
  inline FLASH_CELLBOARD_3_TX() : FLASH_CELLBOARD_3_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_3_TX();

  FLASH_CELLBOARD_3_TX(const FLASH_CELLBOARD_3_TX& from);
  FLASH_CELLBOARD_3_TX(FLASH_CELLBOARD_3_TX&& from) noexcept
    : FLASH_CELLBOARD_3_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_3_TX& operator=(const FLASH_CELLBOARD_3_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_3_TX& operator=(FLASH_CELLBOARD_3_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_3_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_3_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_3_TX*>(
               &_FLASH_CELLBOARD_3_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(FLASH_CELLBOARD_3_TX& a, FLASH_CELLBOARD_3_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_3_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_3_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_3_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_TX>(nullptr);
  }

  FLASH_CELLBOARD_3_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_3_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_3_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_3_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_3_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_3_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_3_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_3_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_3_RX) */ {
 public:
  inline FLASH_CELLBOARD_3_RX() : FLASH_CELLBOARD_3_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_3_RX();

  FLASH_CELLBOARD_3_RX(const FLASH_CELLBOARD_3_RX& from);
  FLASH_CELLBOARD_3_RX(FLASH_CELLBOARD_3_RX&& from) noexcept
    : FLASH_CELLBOARD_3_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_3_RX& operator=(const FLASH_CELLBOARD_3_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_3_RX& operator=(FLASH_CELLBOARD_3_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_3_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_3_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_3_RX*>(
               &_FLASH_CELLBOARD_3_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(FLASH_CELLBOARD_3_RX& a, FLASH_CELLBOARD_3_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_3_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_3_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_3_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_RX>(nullptr);
  }

  FLASH_CELLBOARD_3_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_3_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_3_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_3_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_3_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_3_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_3_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_4_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_4_TX) */ {
 public:
  inline FLASH_CELLBOARD_4_TX() : FLASH_CELLBOARD_4_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_4_TX();

  FLASH_CELLBOARD_4_TX(const FLASH_CELLBOARD_4_TX& from);
  FLASH_CELLBOARD_4_TX(FLASH_CELLBOARD_4_TX&& from) noexcept
    : FLASH_CELLBOARD_4_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_4_TX& operator=(const FLASH_CELLBOARD_4_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_4_TX& operator=(FLASH_CELLBOARD_4_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_4_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_4_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_4_TX*>(
               &_FLASH_CELLBOARD_4_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(FLASH_CELLBOARD_4_TX& a, FLASH_CELLBOARD_4_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_4_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_4_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_4_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_TX>(nullptr);
  }

  FLASH_CELLBOARD_4_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_4_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_4_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_4_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_4_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_4_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_4_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_4_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_4_RX) */ {
 public:
  inline FLASH_CELLBOARD_4_RX() : FLASH_CELLBOARD_4_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_4_RX();

  FLASH_CELLBOARD_4_RX(const FLASH_CELLBOARD_4_RX& from);
  FLASH_CELLBOARD_4_RX(FLASH_CELLBOARD_4_RX&& from) noexcept
    : FLASH_CELLBOARD_4_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_4_RX& operator=(const FLASH_CELLBOARD_4_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_4_RX& operator=(FLASH_CELLBOARD_4_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_4_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_4_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_4_RX*>(
               &_FLASH_CELLBOARD_4_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(FLASH_CELLBOARD_4_RX& a, FLASH_CELLBOARD_4_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_4_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_4_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_4_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_RX>(nullptr);
  }

  FLASH_CELLBOARD_4_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_4_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_4_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_4_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_4_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_4_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_4_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_5_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_5_TX) */ {
 public:
  inline FLASH_CELLBOARD_5_TX() : FLASH_CELLBOARD_5_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_5_TX();

  FLASH_CELLBOARD_5_TX(const FLASH_CELLBOARD_5_TX& from);
  FLASH_CELLBOARD_5_TX(FLASH_CELLBOARD_5_TX&& from) noexcept
    : FLASH_CELLBOARD_5_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_5_TX& operator=(const FLASH_CELLBOARD_5_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_5_TX& operator=(FLASH_CELLBOARD_5_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_5_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_5_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_5_TX*>(
               &_FLASH_CELLBOARD_5_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(FLASH_CELLBOARD_5_TX& a, FLASH_CELLBOARD_5_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_5_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_5_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_5_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_TX>(nullptr);
  }

  FLASH_CELLBOARD_5_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_5_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_5_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_5_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_5_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_5_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_5_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_5_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_CELLBOARD_5_RX) */ {
 public:
  inline FLASH_CELLBOARD_5_RX() : FLASH_CELLBOARD_5_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_5_RX();

  FLASH_CELLBOARD_5_RX(const FLASH_CELLBOARD_5_RX& from);
  FLASH_CELLBOARD_5_RX(FLASH_CELLBOARD_5_RX&& from) noexcept
    : FLASH_CELLBOARD_5_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_5_RX& operator=(const FLASH_CELLBOARD_5_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_5_RX& operator=(FLASH_CELLBOARD_5_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_5_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_5_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_5_RX*>(
               &_FLASH_CELLBOARD_5_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(FLASH_CELLBOARD_5_RX& a, FLASH_CELLBOARD_5_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_5_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_5_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_5_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_RX>(nullptr);
  }

  FLASH_CELLBOARD_5_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_5_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_5_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_5_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_CELLBOARD_5_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_5_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_CELLBOARD_5_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_BMS_HV_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_BMS_HV_TX) */ {
 public:
  inline FLASH_BMS_HV_TX() : FLASH_BMS_HV_TX(nullptr) {};
  virtual ~FLASH_BMS_HV_TX();

  FLASH_BMS_HV_TX(const FLASH_BMS_HV_TX& from);
  FLASH_BMS_HV_TX(FLASH_BMS_HV_TX&& from) noexcept
    : FLASH_BMS_HV_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_BMS_HV_TX& operator=(const FLASH_BMS_HV_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_BMS_HV_TX& operator=(FLASH_BMS_HV_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_BMS_HV_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_BMS_HV_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_BMS_HV_TX*>(
               &_FLASH_BMS_HV_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(FLASH_BMS_HV_TX& a, FLASH_BMS_HV_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_BMS_HV_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_BMS_HV_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_BMS_HV_TX* New() const final {
    return CreateMaybeMessage<FLASH_BMS_HV_TX>(nullptr);
  }

  FLASH_BMS_HV_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_BMS_HV_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_BMS_HV_TX& from);
  void MergeFrom(const FLASH_BMS_HV_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_BMS_HV_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_BMS_HV_TX";
  }
  protected:
  explicit FLASH_BMS_HV_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_BMS_HV_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_BMS_HV_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_BMS_HV_RX) */ {
 public:
  inline FLASH_BMS_HV_RX() : FLASH_BMS_HV_RX(nullptr) {};
  virtual ~FLASH_BMS_HV_RX();

  FLASH_BMS_HV_RX(const FLASH_BMS_HV_RX& from);
  FLASH_BMS_HV_RX(FLASH_BMS_HV_RX&& from) noexcept
    : FLASH_BMS_HV_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_BMS_HV_RX& operator=(const FLASH_BMS_HV_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_BMS_HV_RX& operator=(FLASH_BMS_HV_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_BMS_HV_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_BMS_HV_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_BMS_HV_RX*>(
               &_FLASH_BMS_HV_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(FLASH_BMS_HV_RX& a, FLASH_BMS_HV_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_BMS_HV_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_BMS_HV_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_BMS_HV_RX* New() const final {
    return CreateMaybeMessage<FLASH_BMS_HV_RX>(nullptr);
  }

  FLASH_BMS_HV_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_BMS_HV_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_BMS_HV_RX& from);
  void MergeFrom(const FLASH_BMS_HV_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_BMS_HV_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_BMS_HV_RX";
  }
  protected:
  explicit FLASH_BMS_HV_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_BMS_HV_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_BMS_LV_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_BMS_LV_TX) */ {
 public:
  inline FLASH_BMS_LV_TX() : FLASH_BMS_LV_TX(nullptr) {};
  virtual ~FLASH_BMS_LV_TX();

  FLASH_BMS_LV_TX(const FLASH_BMS_LV_TX& from);
  FLASH_BMS_LV_TX(FLASH_BMS_LV_TX&& from) noexcept
    : FLASH_BMS_LV_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_BMS_LV_TX& operator=(const FLASH_BMS_LV_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_BMS_LV_TX& operator=(FLASH_BMS_LV_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_BMS_LV_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_BMS_LV_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_BMS_LV_TX*>(
               &_FLASH_BMS_LV_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(FLASH_BMS_LV_TX& a, FLASH_BMS_LV_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_BMS_LV_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_BMS_LV_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_BMS_LV_TX* New() const final {
    return CreateMaybeMessage<FLASH_BMS_LV_TX>(nullptr);
  }

  FLASH_BMS_LV_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_BMS_LV_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_BMS_LV_TX& from);
  void MergeFrom(const FLASH_BMS_LV_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_BMS_LV_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_BMS_LV_TX";
  }
  protected:
  explicit FLASH_BMS_LV_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_BMS_LV_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class FLASH_BMS_LV_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.FLASH_BMS_LV_RX) */ {
 public:
  inline FLASH_BMS_LV_RX() : FLASH_BMS_LV_RX(nullptr) {};
  virtual ~FLASH_BMS_LV_RX();

  FLASH_BMS_LV_RX(const FLASH_BMS_LV_RX& from);
  FLASH_BMS_LV_RX(FLASH_BMS_LV_RX&& from) noexcept
    : FLASH_BMS_LV_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_BMS_LV_RX& operator=(const FLASH_BMS_LV_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_BMS_LV_RX& operator=(FLASH_BMS_LV_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_BMS_LV_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_BMS_LV_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_BMS_LV_RX*>(
               &_FLASH_BMS_LV_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(FLASH_BMS_LV_RX& a, FLASH_BMS_LV_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_BMS_LV_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_BMS_LV_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_BMS_LV_RX* New() const final {
    return CreateMaybeMessage<FLASH_BMS_LV_RX>(nullptr);
  }

  FLASH_BMS_LV_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_BMS_LV_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_BMS_LV_RX& from);
  void MergeFrom(const FLASH_BMS_LV_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_BMS_LV_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.FLASH_BMS_LV_RX";
  }
  protected:
  explicit FLASH_BMS_LV_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.FLASH_BMS_LV_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class BRUSA_NLG5_CTL PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BRUSA_NLG5_CTL) */ {
 public:
  inline BRUSA_NLG5_CTL() : BRUSA_NLG5_CTL(nullptr) {};
  virtual ~BRUSA_NLG5_CTL();

  BRUSA_NLG5_CTL(const BRUSA_NLG5_CTL& from);
  BRUSA_NLG5_CTL(BRUSA_NLG5_CTL&& from) noexcept
    : BRUSA_NLG5_CTL() {
    *this = ::std::move(from);
  }

  inline BRUSA_NLG5_CTL& operator=(const BRUSA_NLG5_CTL& from) {
    CopyFrom(from);
    return *this;
  }
  inline BRUSA_NLG5_CTL& operator=(BRUSA_NLG5_CTL&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BRUSA_NLG5_CTL& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BRUSA_NLG5_CTL* internal_default_instance() {
    return reinterpret_cast<const BRUSA_NLG5_CTL*>(
               &_BRUSA_NLG5_CTL_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(BRUSA_NLG5_CTL& a, BRUSA_NLG5_CTL& b) {
    a.Swap(&b);
  }
  inline void Swap(BRUSA_NLG5_CTL* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BRUSA_NLG5_CTL* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BRUSA_NLG5_CTL* New() const final {
    return CreateMaybeMessage<BRUSA_NLG5_CTL>(nullptr);
  }

  BRUSA_NLG5_CTL* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BRUSA_NLG5_CTL>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BRUSA_NLG5_CTL& from);
  void MergeFrom(const BRUSA_NLG5_CTL& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BRUSA_NLG5_CTL* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BRUSA_NLG5_CTL";
  }
  protected:
  explicit BRUSA_NLG5_CTL(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BRUSA_NLG5_CTL)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class BRUSA_ST PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BRUSA_ST) */ {
 public:
  inline BRUSA_ST() : BRUSA_ST(nullptr) {};
  virtual ~BRUSA_ST();

  BRUSA_ST(const BRUSA_ST& from);
  BRUSA_ST(BRUSA_ST&& from) noexcept
    : BRUSA_ST() {
    *this = ::std::move(from);
  }

  inline BRUSA_ST& operator=(const BRUSA_ST& from) {
    CopyFrom(from);
    return *this;
  }
  inline BRUSA_ST& operator=(BRUSA_ST&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BRUSA_ST& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BRUSA_ST* internal_default_instance() {
    return reinterpret_cast<const BRUSA_ST*>(
               &_BRUSA_ST_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(BRUSA_ST& a, BRUSA_ST& b) {
    a.Swap(&b);
  }
  inline void Swap(BRUSA_ST* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BRUSA_ST* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BRUSA_ST* New() const final {
    return CreateMaybeMessage<BRUSA_ST>(nullptr);
  }

  BRUSA_ST* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BRUSA_ST>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BRUSA_ST& from);
  void MergeFrom(const BRUSA_ST& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BRUSA_ST* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BRUSA_ST";
  }
  protected:
  explicit BRUSA_ST(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BRUSA_ST)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class BRUSA_ACT_I PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BRUSA_ACT_I) */ {
 public:
  inline BRUSA_ACT_I() : BRUSA_ACT_I(nullptr) {};
  virtual ~BRUSA_ACT_I();

  BRUSA_ACT_I(const BRUSA_ACT_I& from);
  BRUSA_ACT_I(BRUSA_ACT_I&& from) noexcept
    : BRUSA_ACT_I() {
    *this = ::std::move(from);
  }

  inline BRUSA_ACT_I& operator=(const BRUSA_ACT_I& from) {
    CopyFrom(from);
    return *this;
  }
  inline BRUSA_ACT_I& operator=(BRUSA_ACT_I&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BRUSA_ACT_I& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BRUSA_ACT_I* internal_default_instance() {
    return reinterpret_cast<const BRUSA_ACT_I*>(
               &_BRUSA_ACT_I_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(BRUSA_ACT_I& a, BRUSA_ACT_I& b) {
    a.Swap(&b);
  }
  inline void Swap(BRUSA_ACT_I* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BRUSA_ACT_I* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BRUSA_ACT_I* New() const final {
    return CreateMaybeMessage<BRUSA_ACT_I>(nullptr);
  }

  BRUSA_ACT_I* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BRUSA_ACT_I>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BRUSA_ACT_I& from);
  void MergeFrom(const BRUSA_ACT_I& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BRUSA_ACT_I* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BRUSA_ACT_I";
  }
  protected:
  explicit BRUSA_ACT_I(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BRUSA_ACT_I)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class BRUSA_ACT_II PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BRUSA_ACT_II) */ {
 public:
  inline BRUSA_ACT_II() : BRUSA_ACT_II(nullptr) {};
  virtual ~BRUSA_ACT_II();

  BRUSA_ACT_II(const BRUSA_ACT_II& from);
  BRUSA_ACT_II(BRUSA_ACT_II&& from) noexcept
    : BRUSA_ACT_II() {
    *this = ::std::move(from);
  }

  inline BRUSA_ACT_II& operator=(const BRUSA_ACT_II& from) {
    CopyFrom(from);
    return *this;
  }
  inline BRUSA_ACT_II& operator=(BRUSA_ACT_II&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BRUSA_ACT_II& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BRUSA_ACT_II* internal_default_instance() {
    return reinterpret_cast<const BRUSA_ACT_II*>(
               &_BRUSA_ACT_II_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(BRUSA_ACT_II& a, BRUSA_ACT_II& b) {
    a.Swap(&b);
  }
  inline void Swap(BRUSA_ACT_II* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BRUSA_ACT_II* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BRUSA_ACT_II* New() const final {
    return CreateMaybeMessage<BRUSA_ACT_II>(nullptr);
  }

  BRUSA_ACT_II* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BRUSA_ACT_II>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BRUSA_ACT_II& from);
  void MergeFrom(const BRUSA_ACT_II& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BRUSA_ACT_II* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BRUSA_ACT_II";
  }
  protected:
  explicit BRUSA_ACT_II(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BRUSA_ACT_II)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class BRUSA_TEMP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BRUSA_TEMP) */ {
 public:
  inline BRUSA_TEMP() : BRUSA_TEMP(nullptr) {};
  virtual ~BRUSA_TEMP();

  BRUSA_TEMP(const BRUSA_TEMP& from);
  BRUSA_TEMP(BRUSA_TEMP&& from) noexcept
    : BRUSA_TEMP() {
    *this = ::std::move(from);
  }

  inline BRUSA_TEMP& operator=(const BRUSA_TEMP& from) {
    CopyFrom(from);
    return *this;
  }
  inline BRUSA_TEMP& operator=(BRUSA_TEMP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BRUSA_TEMP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BRUSA_TEMP* internal_default_instance() {
    return reinterpret_cast<const BRUSA_TEMP*>(
               &_BRUSA_TEMP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(BRUSA_TEMP& a, BRUSA_TEMP& b) {
    a.Swap(&b);
  }
  inline void Swap(BRUSA_TEMP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BRUSA_TEMP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BRUSA_TEMP* New() const final {
    return CreateMaybeMessage<BRUSA_TEMP>(nullptr);
  }

  BRUSA_TEMP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BRUSA_TEMP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BRUSA_TEMP& from);
  void MergeFrom(const BRUSA_TEMP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BRUSA_TEMP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BRUSA_TEMP";
  }
  protected:
  explicit BRUSA_TEMP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BRUSA_TEMP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class BRUSA_ERR PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.BRUSA_ERR) */ {
 public:
  inline BRUSA_ERR() : BRUSA_ERR(nullptr) {};
  virtual ~BRUSA_ERR();

  BRUSA_ERR(const BRUSA_ERR& from);
  BRUSA_ERR(BRUSA_ERR&& from) noexcept
    : BRUSA_ERR() {
    *this = ::std::move(from);
  }

  inline BRUSA_ERR& operator=(const BRUSA_ERR& from) {
    CopyFrom(from);
    return *this;
  }
  inline BRUSA_ERR& operator=(BRUSA_ERR&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BRUSA_ERR& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BRUSA_ERR* internal_default_instance() {
    return reinterpret_cast<const BRUSA_ERR*>(
               &_BRUSA_ERR_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(BRUSA_ERR& a, BRUSA_ERR& b) {
    a.Swap(&b);
  }
  inline void Swap(BRUSA_ERR* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BRUSA_ERR* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BRUSA_ERR* New() const final {
    return CreateMaybeMessage<BRUSA_ERR>(nullptr);
  }

  BRUSA_ERR* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BRUSA_ERR>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BRUSA_ERR& from);
  void MergeFrom(const BRUSA_ERR& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BRUSA_ERR* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.BRUSA_ERR";
  }
  protected:
  explicit BRUSA_ERR(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.BRUSA_ERR)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class CONTROL_OUTPUT PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.CONTROL_OUTPUT) */ {
 public:
  inline CONTROL_OUTPUT() : CONTROL_OUTPUT(nullptr) {};
  virtual ~CONTROL_OUTPUT();

  CONTROL_OUTPUT(const CONTROL_OUTPUT& from);
  CONTROL_OUTPUT(CONTROL_OUTPUT&& from) noexcept
    : CONTROL_OUTPUT() {
    *this = ::std::move(from);
  }

  inline CONTROL_OUTPUT& operator=(const CONTROL_OUTPUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline CONTROL_OUTPUT& operator=(CONTROL_OUTPUT&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CONTROL_OUTPUT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CONTROL_OUTPUT* internal_default_instance() {
    return reinterpret_cast<const CONTROL_OUTPUT*>(
               &_CONTROL_OUTPUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CONTROL_OUTPUT& a, CONTROL_OUTPUT& b) {
    a.Swap(&b);
  }
  inline void Swap(CONTROL_OUTPUT* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CONTROL_OUTPUT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CONTROL_OUTPUT* New() const final {
    return CreateMaybeMessage<CONTROL_OUTPUT>(nullptr);
  }

  CONTROL_OUTPUT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CONTROL_OUTPUT>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CONTROL_OUTPUT& from);
  void MergeFrom(const CONTROL_OUTPUT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CONTROL_OUTPUT* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.CONTROL_OUTPUT";
  }
  protected:
  explicit CONTROL_OUTPUT(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEstimatedVelocityFieldNumber = 1,
    kTmaxRFieldNumber = 2,
    kTmaxLFieldNumber = 3,
    kTorqueLFieldNumber = 4,
    kInnerTimestampFieldNumber = 6,
    kTorqueRFieldNumber = 5,
  };
  // float estimated_velocity = 1;
  void clear_estimated_velocity();
  float estimated_velocity() const;
  void set_estimated_velocity(float value);
  private:
  float _internal_estimated_velocity() const;
  void _internal_set_estimated_velocity(float value);
  public:

  // float tmax_r = 2;
  void clear_tmax_r();
  float tmax_r() const;
  void set_tmax_r(float value);
  private:
  float _internal_tmax_r() const;
  void _internal_set_tmax_r(float value);
  public:

  // float tmax_l = 3;
  void clear_tmax_l();
  float tmax_l() const;
  void set_tmax_l(float value);
  private:
  float _internal_tmax_l() const;
  void _internal_set_tmax_l(float value);
  public:

  // float torque_l = 4;
  void clear_torque_l();
  float torque_l() const;
  void set_torque_l(float value);
  private:
  float _internal_torque_l() const;
  void _internal_set_torque_l(float value);
  public:

  // uint64 _inner_timestamp = 6;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float torque_r = 5;
  void clear_torque_r();
  float torque_r() const;
  void set_torque_r(float value);
  private:
  float _internal_torque_r() const;
  void _internal_set_torque_r(float value);
  public:

  // @@protoc_insertion_point(class_scope:primary.CONTROL_OUTPUT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float estimated_velocity_;
  float tmax_r_;
  float tmax_l_;
  float torque_l_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float torque_r_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class LC_RESET PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.LC_RESET) */ {
 public:
  inline LC_RESET() : LC_RESET(nullptr) {};
  virtual ~LC_RESET();

  LC_RESET(const LC_RESET& from);
  LC_RESET(LC_RESET&& from) noexcept
    : LC_RESET() {
    *this = ::std::move(from);
  }

  inline LC_RESET& operator=(const LC_RESET& from) {
    CopyFrom(from);
    return *this;
  }
  inline LC_RESET& operator=(LC_RESET&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LC_RESET& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LC_RESET* internal_default_instance() {
    return reinterpret_cast<const LC_RESET*>(
               &_LC_RESET_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(LC_RESET& a, LC_RESET& b) {
    a.Swap(&b);
  }
  inline void Swap(LC_RESET* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LC_RESET* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LC_RESET* New() const final {
    return CreateMaybeMessage<LC_RESET>(nullptr);
  }

  LC_RESET* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LC_RESET>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LC_RESET& from);
  void MergeFrom(const LC_RESET& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LC_RESET* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.LC_RESET";
  }
  protected:
  explicit LC_RESET(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:primary.LC_RESET)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// -------------------------------------------------------------------

class Pack PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:primary.Pack) */ {
 public:
  inline Pack() : Pack(nullptr) {};
  virtual ~Pack();

  Pack(const Pack& from);
  Pack(Pack&& from) noexcept
    : Pack() {
    *this = ::std::move(from);
  }

  inline Pack& operator=(const Pack& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pack& operator=(Pack&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Pack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pack* internal_default_instance() {
    return reinterpret_cast<const Pack*>(
               &_Pack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(Pack& a, Pack& b) {
    a.Swap(&b);
  }
  inline void Swap(Pack* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pack* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Pack* New() const final {
    return CreateMaybeMessage<Pack>(nullptr);
  }

  Pack* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Pack>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Pack& from);
  void MergeFrom(const Pack& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pack* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "primary.Pack";
  }
  protected:
  explicit Pack(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_primary_2eproto);
    return ::descriptor_table_primary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBMSHVJMPTOBLTFieldNumber = 1,
    kBMSLVJMPTOBLTFieldNumber = 2,
    kSTEERVERSIONFieldNumber = 3,
    kDASVERSIONFieldNumber = 4,
    kHVVERSIONFieldNumber = 5,
    kLVVERSIONFieldNumber = 6,
    kTLMVERSIONFieldNumber = 7,
    kTIMESTAMPFieldNumber = 8,
    kAMBIENTTEMPERATUREFieldNumber = 9,
    kDATALOGGERFieldNumber = 10,
    kSETTLMSTATUSFieldNumber = 11,
    kTLMSTATUSFieldNumber = 12,
    kSTEERSYSTEMSTATUSFieldNumber = 13,
    kHVVOLTAGEFieldNumber = 14,
    kHVCURRENTFieldNumber = 15,
    kHVTEMPFieldNumber = 16,
    kHVERRORSFieldNumber = 17,
    kHVCANFORWARDFieldNumber = 18,
    kHVFANSOVERRIDEFieldNumber = 19,
    kHVCANFORWARDSTATUSFieldNumber = 20,
    kHVFANSOVERRIDESTATUSFieldNumber = 21,
    kHVFEEDBACKSSTATUSFieldNumber = 22,
    kHVIMDSTATUSFieldNumber = 23,
    kTSSTATUSDASFieldNumber = 24,
    kTSSTATUSSTEERFieldNumber = 25,
    kTSSTATUSHANDCARTFieldNumber = 26,
    kSETTSSTATUSDASFieldNumber = 27,
    kSETTSSTATUSHANDCARTFieldNumber = 28,
    kSTEERSTATUSFieldNumber = 29,
    kSETCARSTATUSFieldNumber = 30,
    kSETPEDALSRANGEFieldNumber = 31,
    kSETSTEERINGANGLERANGEFieldNumber = 32,
    kCARSTATUSFieldNumber = 33,
    kDASERRORSFieldNumber = 34,
    kLVCURRENTFieldNumber = 35,
    kLVVOLTAGEFieldNumber = 36,
    kLVTOTALVOLTAGEFieldNumber = 37,
    kLVTEMPERATUREFieldNumber = 38,
    kCOOLINGSTATUSFieldNumber = 39,
    kSETRADIATORSPEEDFieldNumber = 40,
    kSETPUMPSSPEEDFieldNumber = 41,
    kSETINVERTERCONNECTIONSTATUSFieldNumber = 42,
    kINVERTERCONNECTIONSTATUSFieldNumber = 43,
    kLVERRORSFieldNumber = 44,
    kSHUTDOWNSTATUSFieldNumber = 45,
    kMARKERFieldNumber = 46,
    kHVCELLSVOLTAGEFieldNumber = 47,
    kHVCELLSTEMPFieldNumber = 48,
    kHVCELLBALANCINGSTATUSFieldNumber = 49,
    kSETCELLBALANCINGSTATUSFieldNumber = 50,
    kHANDCARTSTATUSFieldNumber = 51,
    kSPEEDFieldNumber = 52,
    kINVLREQUESTFieldNumber = 53,
    kINVRREQUESTFieldNumber = 54,
    kINVLRESPONSEFieldNumber = 55,
    kINVRRESPONSEFieldNumber = 56,
    kFLASHCELLBOARD0TXFieldNumber = 57,
    kFLASHCELLBOARD0RXFieldNumber = 58,
    kFLASHCELLBOARD1TXFieldNumber = 59,
    kFLASHCELLBOARD1RXFieldNumber = 60,
    kFLASHCELLBOARD2TXFieldNumber = 61,
    kFLASHCELLBOARD2RXFieldNumber = 62,
    kFLASHCELLBOARD3TXFieldNumber = 63,
    kFLASHCELLBOARD3RXFieldNumber = 64,
    kFLASHCELLBOARD4TXFieldNumber = 65,
    kFLASHCELLBOARD4RXFieldNumber = 66,
    kFLASHCELLBOARD5TXFieldNumber = 67,
    kFLASHCELLBOARD5RXFieldNumber = 68,
    kFLASHBMSHVTXFieldNumber = 69,
    kFLASHBMSHVRXFieldNumber = 70,
    kFLASHBMSLVTXFieldNumber = 71,
    kFLASHBMSLVRXFieldNumber = 72,
    kBRUSANLG5CTLFieldNumber = 73,
    kBRUSASTFieldNumber = 74,
    kBRUSAACTIFieldNumber = 75,
    kBRUSAACTIIFieldNumber = 76,
    kBRUSATEMPFieldNumber = 77,
    kBRUSAERRFieldNumber = 78,
    kCONTROLOUTPUTFieldNumber = 79,
    kLCRESETFieldNumber = 80,
  };
  // repeated .primary.BMS_HV_JMP_TO_BLT BMS_HV_JMP_TO_BLT = 1;
  int bms_hv_jmp_to_blt_size() const;
  private:
  int _internal_bms_hv_jmp_to_blt_size() const;
  public:
  void clear_bms_hv_jmp_to_blt();
  ::primary::BMS_HV_JMP_TO_BLT* mutable_bms_hv_jmp_to_blt(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_HV_JMP_TO_BLT >*
      mutable_bms_hv_jmp_to_blt();
  private:
  const ::primary::BMS_HV_JMP_TO_BLT& _internal_bms_hv_jmp_to_blt(int index) const;
  ::primary::BMS_HV_JMP_TO_BLT* _internal_add_bms_hv_jmp_to_blt();
  public:
  const ::primary::BMS_HV_JMP_TO_BLT& bms_hv_jmp_to_blt(int index) const;
  ::primary::BMS_HV_JMP_TO_BLT* add_bms_hv_jmp_to_blt();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_HV_JMP_TO_BLT >&
      bms_hv_jmp_to_blt() const;

  // repeated .primary.BMS_LV_JMP_TO_BLT BMS_LV_JMP_TO_BLT = 2;
  int bms_lv_jmp_to_blt_size() const;
  private:
  int _internal_bms_lv_jmp_to_blt_size() const;
  public:
  void clear_bms_lv_jmp_to_blt();
  ::primary::BMS_LV_JMP_TO_BLT* mutable_bms_lv_jmp_to_blt(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_LV_JMP_TO_BLT >*
      mutable_bms_lv_jmp_to_blt();
  private:
  const ::primary::BMS_LV_JMP_TO_BLT& _internal_bms_lv_jmp_to_blt(int index) const;
  ::primary::BMS_LV_JMP_TO_BLT* _internal_add_bms_lv_jmp_to_blt();
  public:
  const ::primary::BMS_LV_JMP_TO_BLT& bms_lv_jmp_to_blt(int index) const;
  ::primary::BMS_LV_JMP_TO_BLT* add_bms_lv_jmp_to_blt();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_LV_JMP_TO_BLT >&
      bms_lv_jmp_to_blt() const;

  // repeated .primary.STEER_VERSION STEER_VERSION = 3;
  int steer_version_size() const;
  private:
  int _internal_steer_version_size() const;
  public:
  void clear_steer_version();
  ::primary::STEER_VERSION* mutable_steer_version(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_VERSION >*
      mutable_steer_version();
  private:
  const ::primary::STEER_VERSION& _internal_steer_version(int index) const;
  ::primary::STEER_VERSION* _internal_add_steer_version();
  public:
  const ::primary::STEER_VERSION& steer_version(int index) const;
  ::primary::STEER_VERSION* add_steer_version();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_VERSION >&
      steer_version() const;

  // repeated .primary.DAS_VERSION DAS_VERSION = 4;
  int das_version_size() const;
  private:
  int _internal_das_version_size() const;
  public:
  void clear_das_version();
  ::primary::DAS_VERSION* mutable_das_version(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_VERSION >*
      mutable_das_version();
  private:
  const ::primary::DAS_VERSION& _internal_das_version(int index) const;
  ::primary::DAS_VERSION* _internal_add_das_version();
  public:
  const ::primary::DAS_VERSION& das_version(int index) const;
  ::primary::DAS_VERSION* add_das_version();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_VERSION >&
      das_version() const;

  // repeated .primary.HV_VERSION HV_VERSION = 5;
  int hv_version_size() const;
  private:
  int _internal_hv_version_size() const;
  public:
  void clear_hv_version();
  ::primary::HV_VERSION* mutable_hv_version(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VERSION >*
      mutable_hv_version();
  private:
  const ::primary::HV_VERSION& _internal_hv_version(int index) const;
  ::primary::HV_VERSION* _internal_add_hv_version();
  public:
  const ::primary::HV_VERSION& hv_version(int index) const;
  ::primary::HV_VERSION* add_hv_version();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VERSION >&
      hv_version() const;

  // repeated .primary.LV_VERSION LV_VERSION = 6;
  int lv_version_size() const;
  private:
  int _internal_lv_version_size() const;
  public:
  void clear_lv_version();
  ::primary::LV_VERSION* mutable_lv_version(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VERSION >*
      mutable_lv_version();
  private:
  const ::primary::LV_VERSION& _internal_lv_version(int index) const;
  ::primary::LV_VERSION* _internal_add_lv_version();
  public:
  const ::primary::LV_VERSION& lv_version(int index) const;
  ::primary::LV_VERSION* add_lv_version();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VERSION >&
      lv_version() const;

  // repeated .primary.TLM_VERSION TLM_VERSION = 7;
  int tlm_version_size() const;
  private:
  int _internal_tlm_version_size() const;
  public:
  void clear_tlm_version();
  ::primary::TLM_VERSION* mutable_tlm_version(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_VERSION >*
      mutable_tlm_version();
  private:
  const ::primary::TLM_VERSION& _internal_tlm_version(int index) const;
  ::primary::TLM_VERSION* _internal_add_tlm_version();
  public:
  const ::primary::TLM_VERSION& tlm_version(int index) const;
  ::primary::TLM_VERSION* add_tlm_version();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_VERSION >&
      tlm_version() const;

  // repeated .primary.TIMESTAMP TIMESTAMP = 8;
  int timestamp_size() const;
  private:
  int _internal_timestamp_size() const;
  public:
  void clear_timestamp();
  ::primary::TIMESTAMP* mutable_timestamp(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TIMESTAMP >*
      mutable_timestamp();
  private:
  const ::primary::TIMESTAMP& _internal_timestamp(int index) const;
  ::primary::TIMESTAMP* _internal_add_timestamp();
  public:
  const ::primary::TIMESTAMP& timestamp(int index) const;
  ::primary::TIMESTAMP* add_timestamp();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TIMESTAMP >&
      timestamp() const;

  // repeated .primary.AMBIENT_TEMPERATURE AMBIENT_TEMPERATURE = 9;
  int ambient_temperature_size() const;
  private:
  int _internal_ambient_temperature_size() const;
  public:
  void clear_ambient_temperature();
  ::primary::AMBIENT_TEMPERATURE* mutable_ambient_temperature(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::AMBIENT_TEMPERATURE >*
      mutable_ambient_temperature();
  private:
  const ::primary::AMBIENT_TEMPERATURE& _internal_ambient_temperature(int index) const;
  ::primary::AMBIENT_TEMPERATURE* _internal_add_ambient_temperature();
  public:
  const ::primary::AMBIENT_TEMPERATURE& ambient_temperature(int index) const;
  ::primary::AMBIENT_TEMPERATURE* add_ambient_temperature();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::AMBIENT_TEMPERATURE >&
      ambient_temperature() const;

  // repeated .primary.DATA_LOGGER DATA_LOGGER = 10;
  int data_logger_size() const;
  private:
  int _internal_data_logger_size() const;
  public:
  void clear_data_logger();
  ::primary::DATA_LOGGER* mutable_data_logger(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DATA_LOGGER >*
      mutable_data_logger();
  private:
  const ::primary::DATA_LOGGER& _internal_data_logger(int index) const;
  ::primary::DATA_LOGGER* _internal_add_data_logger();
  public:
  const ::primary::DATA_LOGGER& data_logger(int index) const;
  ::primary::DATA_LOGGER* add_data_logger();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DATA_LOGGER >&
      data_logger() const;

  // repeated .primary.SET_TLM_STATUS SET_TLM_STATUS = 11;
  int set_tlm_status_size() const;
  private:
  int _internal_set_tlm_status_size() const;
  public:
  void clear_set_tlm_status();
  ::primary::SET_TLM_STATUS* mutable_set_tlm_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TLM_STATUS >*
      mutable_set_tlm_status();
  private:
  const ::primary::SET_TLM_STATUS& _internal_set_tlm_status(int index) const;
  ::primary::SET_TLM_STATUS* _internal_add_set_tlm_status();
  public:
  const ::primary::SET_TLM_STATUS& set_tlm_status(int index) const;
  ::primary::SET_TLM_STATUS* add_set_tlm_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TLM_STATUS >&
      set_tlm_status() const;

  // repeated .primary.TLM_STATUS TLM_STATUS = 12;
  int tlm_status_size() const;
  private:
  int _internal_tlm_status_size() const;
  public:
  void clear_tlm_status();
  ::primary::TLM_STATUS* mutable_tlm_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_STATUS >*
      mutable_tlm_status();
  private:
  const ::primary::TLM_STATUS& _internal_tlm_status(int index) const;
  ::primary::TLM_STATUS* _internal_add_tlm_status();
  public:
  const ::primary::TLM_STATUS& tlm_status(int index) const;
  ::primary::TLM_STATUS* add_tlm_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_STATUS >&
      tlm_status() const;

  // repeated .primary.STEER_SYSTEM_STATUS STEER_SYSTEM_STATUS = 13;
  int steer_system_status_size() const;
  private:
  int _internal_steer_system_status_size() const;
  public:
  void clear_steer_system_status();
  ::primary::STEER_SYSTEM_STATUS* mutable_steer_system_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_SYSTEM_STATUS >*
      mutable_steer_system_status();
  private:
  const ::primary::STEER_SYSTEM_STATUS& _internal_steer_system_status(int index) const;
  ::primary::STEER_SYSTEM_STATUS* _internal_add_steer_system_status();
  public:
  const ::primary::STEER_SYSTEM_STATUS& steer_system_status(int index) const;
  ::primary::STEER_SYSTEM_STATUS* add_steer_system_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_SYSTEM_STATUS >&
      steer_system_status() const;

  // repeated .primary.HV_VOLTAGE HV_VOLTAGE = 14;
  int hv_voltage_size() const;
  private:
  int _internal_hv_voltage_size() const;
  public:
  void clear_hv_voltage();
  ::primary::HV_VOLTAGE* mutable_hv_voltage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VOLTAGE >*
      mutable_hv_voltage();
  private:
  const ::primary::HV_VOLTAGE& _internal_hv_voltage(int index) const;
  ::primary::HV_VOLTAGE* _internal_add_hv_voltage();
  public:
  const ::primary::HV_VOLTAGE& hv_voltage(int index) const;
  ::primary::HV_VOLTAGE* add_hv_voltage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VOLTAGE >&
      hv_voltage() const;

  // repeated .primary.HV_CURRENT HV_CURRENT = 15;
  int hv_current_size() const;
  private:
  int _internal_hv_current_size() const;
  public:
  void clear_hv_current();
  ::primary::HV_CURRENT* mutable_hv_current(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CURRENT >*
      mutable_hv_current();
  private:
  const ::primary::HV_CURRENT& _internal_hv_current(int index) const;
  ::primary::HV_CURRENT* _internal_add_hv_current();
  public:
  const ::primary::HV_CURRENT& hv_current(int index) const;
  ::primary::HV_CURRENT* add_hv_current();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CURRENT >&
      hv_current() const;

  // repeated .primary.HV_TEMP HV_TEMP = 16;
  int hv_temp_size() const;
  private:
  int _internal_hv_temp_size() const;
  public:
  void clear_hv_temp();
  ::primary::HV_TEMP* mutable_hv_temp(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_TEMP >*
      mutable_hv_temp();
  private:
  const ::primary::HV_TEMP& _internal_hv_temp(int index) const;
  ::primary::HV_TEMP* _internal_add_hv_temp();
  public:
  const ::primary::HV_TEMP& hv_temp(int index) const;
  ::primary::HV_TEMP* add_hv_temp();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_TEMP >&
      hv_temp() const;

  // repeated .primary.HV_ERRORS HV_ERRORS = 17;
  int hv_errors_size() const;
  private:
  int _internal_hv_errors_size() const;
  public:
  void clear_hv_errors();
  ::primary::HV_ERRORS* mutable_hv_errors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_ERRORS >*
      mutable_hv_errors();
  private:
  const ::primary::HV_ERRORS& _internal_hv_errors(int index) const;
  ::primary::HV_ERRORS* _internal_add_hv_errors();
  public:
  const ::primary::HV_ERRORS& hv_errors(int index) const;
  ::primary::HV_ERRORS* add_hv_errors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_ERRORS >&
      hv_errors() const;

  // repeated .primary.HV_CAN_FORWARD HV_CAN_FORWARD = 18;
  int hv_can_forward_size() const;
  private:
  int _internal_hv_can_forward_size() const;
  public:
  void clear_hv_can_forward();
  ::primary::HV_CAN_FORWARD* mutable_hv_can_forward(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD >*
      mutable_hv_can_forward();
  private:
  const ::primary::HV_CAN_FORWARD& _internal_hv_can_forward(int index) const;
  ::primary::HV_CAN_FORWARD* _internal_add_hv_can_forward();
  public:
  const ::primary::HV_CAN_FORWARD& hv_can_forward(int index) const;
  ::primary::HV_CAN_FORWARD* add_hv_can_forward();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD >&
      hv_can_forward() const;

  // repeated .primary.HV_FANS_OVERRIDE HV_FANS_OVERRIDE = 19;
  int hv_fans_override_size() const;
  private:
  int _internal_hv_fans_override_size() const;
  public:
  void clear_hv_fans_override();
  ::primary::HV_FANS_OVERRIDE* mutable_hv_fans_override(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE >*
      mutable_hv_fans_override();
  private:
  const ::primary::HV_FANS_OVERRIDE& _internal_hv_fans_override(int index) const;
  ::primary::HV_FANS_OVERRIDE* _internal_add_hv_fans_override();
  public:
  const ::primary::HV_FANS_OVERRIDE& hv_fans_override(int index) const;
  ::primary::HV_FANS_OVERRIDE* add_hv_fans_override();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE >&
      hv_fans_override() const;

  // repeated .primary.HV_CAN_FORWARD_STATUS HV_CAN_FORWARD_STATUS = 20;
  int hv_can_forward_status_size() const;
  private:
  int _internal_hv_can_forward_status_size() const;
  public:
  void clear_hv_can_forward_status();
  ::primary::HV_CAN_FORWARD_STATUS* mutable_hv_can_forward_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD_STATUS >*
      mutable_hv_can_forward_status();
  private:
  const ::primary::HV_CAN_FORWARD_STATUS& _internal_hv_can_forward_status(int index) const;
  ::primary::HV_CAN_FORWARD_STATUS* _internal_add_hv_can_forward_status();
  public:
  const ::primary::HV_CAN_FORWARD_STATUS& hv_can_forward_status(int index) const;
  ::primary::HV_CAN_FORWARD_STATUS* add_hv_can_forward_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD_STATUS >&
      hv_can_forward_status() const;

  // repeated .primary.HV_FANS_OVERRIDE_STATUS HV_FANS_OVERRIDE_STATUS = 21;
  int hv_fans_override_status_size() const;
  private:
  int _internal_hv_fans_override_status_size() const;
  public:
  void clear_hv_fans_override_status();
  ::primary::HV_FANS_OVERRIDE_STATUS* mutable_hv_fans_override_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE_STATUS >*
      mutable_hv_fans_override_status();
  private:
  const ::primary::HV_FANS_OVERRIDE_STATUS& _internal_hv_fans_override_status(int index) const;
  ::primary::HV_FANS_OVERRIDE_STATUS* _internal_add_hv_fans_override_status();
  public:
  const ::primary::HV_FANS_OVERRIDE_STATUS& hv_fans_override_status(int index) const;
  ::primary::HV_FANS_OVERRIDE_STATUS* add_hv_fans_override_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE_STATUS >&
      hv_fans_override_status() const;

  // repeated .primary.HV_FEEDBACKS_STATUS HV_FEEDBACKS_STATUS = 22;
  int hv_feedbacks_status_size() const;
  private:
  int _internal_hv_feedbacks_status_size() const;
  public:
  void clear_hv_feedbacks_status();
  ::primary::HV_FEEDBACKS_STATUS* mutable_hv_feedbacks_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FEEDBACKS_STATUS >*
      mutable_hv_feedbacks_status();
  private:
  const ::primary::HV_FEEDBACKS_STATUS& _internal_hv_feedbacks_status(int index) const;
  ::primary::HV_FEEDBACKS_STATUS* _internal_add_hv_feedbacks_status();
  public:
  const ::primary::HV_FEEDBACKS_STATUS& hv_feedbacks_status(int index) const;
  ::primary::HV_FEEDBACKS_STATUS* add_hv_feedbacks_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FEEDBACKS_STATUS >&
      hv_feedbacks_status() const;

  // repeated .primary.HV_IMD_STATUS HV_IMD_STATUS = 23;
  int hv_imd_status_size() const;
  private:
  int _internal_hv_imd_status_size() const;
  public:
  void clear_hv_imd_status();
  ::primary::HV_IMD_STATUS* mutable_hv_imd_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_IMD_STATUS >*
      mutable_hv_imd_status();
  private:
  const ::primary::HV_IMD_STATUS& _internal_hv_imd_status(int index) const;
  ::primary::HV_IMD_STATUS* _internal_add_hv_imd_status();
  public:
  const ::primary::HV_IMD_STATUS& hv_imd_status(int index) const;
  ::primary::HV_IMD_STATUS* add_hv_imd_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_IMD_STATUS >&
      hv_imd_status() const;

  // repeated .primary.TS_STATUS_DAS TS_STATUS_DAS = 24;
  int ts_status_das_size() const;
  private:
  int _internal_ts_status_das_size() const;
  public:
  void clear_ts_status_das();
  ::primary::TS_STATUS_DAS* mutable_ts_status_das(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_DAS >*
      mutable_ts_status_das();
  private:
  const ::primary::TS_STATUS_DAS& _internal_ts_status_das(int index) const;
  ::primary::TS_STATUS_DAS* _internal_add_ts_status_das();
  public:
  const ::primary::TS_STATUS_DAS& ts_status_das(int index) const;
  ::primary::TS_STATUS_DAS* add_ts_status_das();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_DAS >&
      ts_status_das() const;

  // repeated .primary.TS_STATUS_STEER TS_STATUS_STEER = 25;
  int ts_status_steer_size() const;
  private:
  int _internal_ts_status_steer_size() const;
  public:
  void clear_ts_status_steer();
  ::primary::TS_STATUS_STEER* mutable_ts_status_steer(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_STEER >*
      mutable_ts_status_steer();
  private:
  const ::primary::TS_STATUS_STEER& _internal_ts_status_steer(int index) const;
  ::primary::TS_STATUS_STEER* _internal_add_ts_status_steer();
  public:
  const ::primary::TS_STATUS_STEER& ts_status_steer(int index) const;
  ::primary::TS_STATUS_STEER* add_ts_status_steer();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_STEER >&
      ts_status_steer() const;

  // repeated .primary.TS_STATUS_HANDCART TS_STATUS_HANDCART = 26;
  int ts_status_handcart_size() const;
  private:
  int _internal_ts_status_handcart_size() const;
  public:
  void clear_ts_status_handcart();
  ::primary::TS_STATUS_HANDCART* mutable_ts_status_handcart(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_HANDCART >*
      mutable_ts_status_handcart();
  private:
  const ::primary::TS_STATUS_HANDCART& _internal_ts_status_handcart(int index) const;
  ::primary::TS_STATUS_HANDCART* _internal_add_ts_status_handcart();
  public:
  const ::primary::TS_STATUS_HANDCART& ts_status_handcart(int index) const;
  ::primary::TS_STATUS_HANDCART* add_ts_status_handcart();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_HANDCART >&
      ts_status_handcart() const;

  // repeated .primary.SET_TS_STATUS_DAS SET_TS_STATUS_DAS = 27;
  int set_ts_status_das_size() const;
  private:
  int _internal_set_ts_status_das_size() const;
  public:
  void clear_set_ts_status_das();
  ::primary::SET_TS_STATUS_DAS* mutable_set_ts_status_das(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_DAS >*
      mutable_set_ts_status_das();
  private:
  const ::primary::SET_TS_STATUS_DAS& _internal_set_ts_status_das(int index) const;
  ::primary::SET_TS_STATUS_DAS* _internal_add_set_ts_status_das();
  public:
  const ::primary::SET_TS_STATUS_DAS& set_ts_status_das(int index) const;
  ::primary::SET_TS_STATUS_DAS* add_set_ts_status_das();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_DAS >&
      set_ts_status_das() const;

  // repeated .primary.SET_TS_STATUS_HANDCART SET_TS_STATUS_HANDCART = 28;
  int set_ts_status_handcart_size() const;
  private:
  int _internal_set_ts_status_handcart_size() const;
  public:
  void clear_set_ts_status_handcart();
  ::primary::SET_TS_STATUS_HANDCART* mutable_set_ts_status_handcart(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_HANDCART >*
      mutable_set_ts_status_handcart();
  private:
  const ::primary::SET_TS_STATUS_HANDCART& _internal_set_ts_status_handcart(int index) const;
  ::primary::SET_TS_STATUS_HANDCART* _internal_add_set_ts_status_handcart();
  public:
  const ::primary::SET_TS_STATUS_HANDCART& set_ts_status_handcart(int index) const;
  ::primary::SET_TS_STATUS_HANDCART* add_set_ts_status_handcart();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_HANDCART >&
      set_ts_status_handcart() const;

  // repeated .primary.STEER_STATUS STEER_STATUS = 29;
  int steer_status_size() const;
  private:
  int _internal_steer_status_size() const;
  public:
  void clear_steer_status();
  ::primary::STEER_STATUS* mutable_steer_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_STATUS >*
      mutable_steer_status();
  private:
  const ::primary::STEER_STATUS& _internal_steer_status(int index) const;
  ::primary::STEER_STATUS* _internal_add_steer_status();
  public:
  const ::primary::STEER_STATUS& steer_status(int index) const;
  ::primary::STEER_STATUS* add_steer_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_STATUS >&
      steer_status() const;

  // repeated .primary.SET_CAR_STATUS SET_CAR_STATUS = 30;
  int set_car_status_size() const;
  private:
  int _internal_set_car_status_size() const;
  public:
  void clear_set_car_status();
  ::primary::SET_CAR_STATUS* mutable_set_car_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CAR_STATUS >*
      mutable_set_car_status();
  private:
  const ::primary::SET_CAR_STATUS& _internal_set_car_status(int index) const;
  ::primary::SET_CAR_STATUS* _internal_add_set_car_status();
  public:
  const ::primary::SET_CAR_STATUS& set_car_status(int index) const;
  ::primary::SET_CAR_STATUS* add_set_car_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CAR_STATUS >&
      set_car_status() const;

  // repeated .primary.SET_PEDALS_RANGE SET_PEDALS_RANGE = 31;
  int set_pedals_range_size() const;
  private:
  int _internal_set_pedals_range_size() const;
  public:
  void clear_set_pedals_range();
  ::primary::SET_PEDALS_RANGE* mutable_set_pedals_range(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PEDALS_RANGE >*
      mutable_set_pedals_range();
  private:
  const ::primary::SET_PEDALS_RANGE& _internal_set_pedals_range(int index) const;
  ::primary::SET_PEDALS_RANGE* _internal_add_set_pedals_range();
  public:
  const ::primary::SET_PEDALS_RANGE& set_pedals_range(int index) const;
  ::primary::SET_PEDALS_RANGE* add_set_pedals_range();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PEDALS_RANGE >&
      set_pedals_range() const;

  // repeated .primary.SET_STEERING_ANGLE_RANGE SET_STEERING_ANGLE_RANGE = 32;
  int set_steering_angle_range_size() const;
  private:
  int _internal_set_steering_angle_range_size() const;
  public:
  void clear_set_steering_angle_range();
  ::primary::SET_STEERING_ANGLE_RANGE* mutable_set_steering_angle_range(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_STEERING_ANGLE_RANGE >*
      mutable_set_steering_angle_range();
  private:
  const ::primary::SET_STEERING_ANGLE_RANGE& _internal_set_steering_angle_range(int index) const;
  ::primary::SET_STEERING_ANGLE_RANGE* _internal_add_set_steering_angle_range();
  public:
  const ::primary::SET_STEERING_ANGLE_RANGE& set_steering_angle_range(int index) const;
  ::primary::SET_STEERING_ANGLE_RANGE* add_set_steering_angle_range();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_STEERING_ANGLE_RANGE >&
      set_steering_angle_range() const;

  // repeated .primary.CAR_STATUS CAR_STATUS = 33;
  int car_status_size() const;
  private:
  int _internal_car_status_size() const;
  public:
  void clear_car_status();
  ::primary::CAR_STATUS* mutable_car_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CAR_STATUS >*
      mutable_car_status();
  private:
  const ::primary::CAR_STATUS& _internal_car_status(int index) const;
  ::primary::CAR_STATUS* _internal_add_car_status();
  public:
  const ::primary::CAR_STATUS& car_status(int index) const;
  ::primary::CAR_STATUS* add_car_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CAR_STATUS >&
      car_status() const;

  // repeated .primary.DAS_ERRORS DAS_ERRORS = 34;
  int das_errors_size() const;
  private:
  int _internal_das_errors_size() const;
  public:
  void clear_das_errors();
  ::primary::DAS_ERRORS* mutable_das_errors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_ERRORS >*
      mutable_das_errors();
  private:
  const ::primary::DAS_ERRORS& _internal_das_errors(int index) const;
  ::primary::DAS_ERRORS* _internal_add_das_errors();
  public:
  const ::primary::DAS_ERRORS& das_errors(int index) const;
  ::primary::DAS_ERRORS* add_das_errors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_ERRORS >&
      das_errors() const;

  // repeated .primary.LV_CURRENT LV_CURRENT = 35;
  int lv_current_size() const;
  private:
  int _internal_lv_current_size() const;
  public:
  void clear_lv_current();
  ::primary::LV_CURRENT* mutable_lv_current(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_CURRENT >*
      mutable_lv_current();
  private:
  const ::primary::LV_CURRENT& _internal_lv_current(int index) const;
  ::primary::LV_CURRENT* _internal_add_lv_current();
  public:
  const ::primary::LV_CURRENT& lv_current(int index) const;
  ::primary::LV_CURRENT* add_lv_current();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_CURRENT >&
      lv_current() const;

  // repeated .primary.LV_VOLTAGE LV_VOLTAGE = 36;
  int lv_voltage_size() const;
  private:
  int _internal_lv_voltage_size() const;
  public:
  void clear_lv_voltage();
  ::primary::LV_VOLTAGE* mutable_lv_voltage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VOLTAGE >*
      mutable_lv_voltage();
  private:
  const ::primary::LV_VOLTAGE& _internal_lv_voltage(int index) const;
  ::primary::LV_VOLTAGE* _internal_add_lv_voltage();
  public:
  const ::primary::LV_VOLTAGE& lv_voltage(int index) const;
  ::primary::LV_VOLTAGE* add_lv_voltage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VOLTAGE >&
      lv_voltage() const;

  // repeated .primary.LV_TOTAL_VOLTAGE LV_TOTAL_VOLTAGE = 37;
  int lv_total_voltage_size() const;
  private:
  int _internal_lv_total_voltage_size() const;
  public:
  void clear_lv_total_voltage();
  ::primary::LV_TOTAL_VOLTAGE* mutable_lv_total_voltage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TOTAL_VOLTAGE >*
      mutable_lv_total_voltage();
  private:
  const ::primary::LV_TOTAL_VOLTAGE& _internal_lv_total_voltage(int index) const;
  ::primary::LV_TOTAL_VOLTAGE* _internal_add_lv_total_voltage();
  public:
  const ::primary::LV_TOTAL_VOLTAGE& lv_total_voltage(int index) const;
  ::primary::LV_TOTAL_VOLTAGE* add_lv_total_voltage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TOTAL_VOLTAGE >&
      lv_total_voltage() const;

  // repeated .primary.LV_TEMPERATURE LV_TEMPERATURE = 38;
  int lv_temperature_size() const;
  private:
  int _internal_lv_temperature_size() const;
  public:
  void clear_lv_temperature();
  ::primary::LV_TEMPERATURE* mutable_lv_temperature(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TEMPERATURE >*
      mutable_lv_temperature();
  private:
  const ::primary::LV_TEMPERATURE& _internal_lv_temperature(int index) const;
  ::primary::LV_TEMPERATURE* _internal_add_lv_temperature();
  public:
  const ::primary::LV_TEMPERATURE& lv_temperature(int index) const;
  ::primary::LV_TEMPERATURE* add_lv_temperature();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TEMPERATURE >&
      lv_temperature() const;

  // repeated .primary.COOLING_STATUS COOLING_STATUS = 39;
  int cooling_status_size() const;
  private:
  int _internal_cooling_status_size() const;
  public:
  void clear_cooling_status();
  ::primary::COOLING_STATUS* mutable_cooling_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::COOLING_STATUS >*
      mutable_cooling_status();
  private:
  const ::primary::COOLING_STATUS& _internal_cooling_status(int index) const;
  ::primary::COOLING_STATUS* _internal_add_cooling_status();
  public:
  const ::primary::COOLING_STATUS& cooling_status(int index) const;
  ::primary::COOLING_STATUS* add_cooling_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::COOLING_STATUS >&
      cooling_status() const;

  // repeated .primary.SET_RADIATOR_SPEED SET_RADIATOR_SPEED = 40;
  int set_radiator_speed_size() const;
  private:
  int _internal_set_radiator_speed_size() const;
  public:
  void clear_set_radiator_speed();
  ::primary::SET_RADIATOR_SPEED* mutable_set_radiator_speed(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_RADIATOR_SPEED >*
      mutable_set_radiator_speed();
  private:
  const ::primary::SET_RADIATOR_SPEED& _internal_set_radiator_speed(int index) const;
  ::primary::SET_RADIATOR_SPEED* _internal_add_set_radiator_speed();
  public:
  const ::primary::SET_RADIATOR_SPEED& set_radiator_speed(int index) const;
  ::primary::SET_RADIATOR_SPEED* add_set_radiator_speed();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_RADIATOR_SPEED >&
      set_radiator_speed() const;

  // repeated .primary.SET_PUMPS_SPEED SET_PUMPS_SPEED = 41;
  int set_pumps_speed_size() const;
  private:
  int _internal_set_pumps_speed_size() const;
  public:
  void clear_set_pumps_speed();
  ::primary::SET_PUMPS_SPEED* mutable_set_pumps_speed(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PUMPS_SPEED >*
      mutable_set_pumps_speed();
  private:
  const ::primary::SET_PUMPS_SPEED& _internal_set_pumps_speed(int index) const;
  ::primary::SET_PUMPS_SPEED* _internal_add_set_pumps_speed();
  public:
  const ::primary::SET_PUMPS_SPEED& set_pumps_speed(int index) const;
  ::primary::SET_PUMPS_SPEED* add_set_pumps_speed();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PUMPS_SPEED >&
      set_pumps_speed() const;

  // repeated .primary.SET_INVERTER_CONNECTION_STATUS SET_INVERTER_CONNECTION_STATUS = 42;
  int set_inverter_connection_status_size() const;
  private:
  int _internal_set_inverter_connection_status_size() const;
  public:
  void clear_set_inverter_connection_status();
  ::primary::SET_INVERTER_CONNECTION_STATUS* mutable_set_inverter_connection_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_INVERTER_CONNECTION_STATUS >*
      mutable_set_inverter_connection_status();
  private:
  const ::primary::SET_INVERTER_CONNECTION_STATUS& _internal_set_inverter_connection_status(int index) const;
  ::primary::SET_INVERTER_CONNECTION_STATUS* _internal_add_set_inverter_connection_status();
  public:
  const ::primary::SET_INVERTER_CONNECTION_STATUS& set_inverter_connection_status(int index) const;
  ::primary::SET_INVERTER_CONNECTION_STATUS* add_set_inverter_connection_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_INVERTER_CONNECTION_STATUS >&
      set_inverter_connection_status() const;

  // repeated .primary.INVERTER_CONNECTION_STATUS INVERTER_CONNECTION_STATUS = 43;
  int inverter_connection_status_size() const;
  private:
  int _internal_inverter_connection_status_size() const;
  public:
  void clear_inverter_connection_status();
  ::primary::INVERTER_CONNECTION_STATUS* mutable_inverter_connection_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INVERTER_CONNECTION_STATUS >*
      mutable_inverter_connection_status();
  private:
  const ::primary::INVERTER_CONNECTION_STATUS& _internal_inverter_connection_status(int index) const;
  ::primary::INVERTER_CONNECTION_STATUS* _internal_add_inverter_connection_status();
  public:
  const ::primary::INVERTER_CONNECTION_STATUS& inverter_connection_status(int index) const;
  ::primary::INVERTER_CONNECTION_STATUS* add_inverter_connection_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INVERTER_CONNECTION_STATUS >&
      inverter_connection_status() const;

  // repeated .primary.LV_ERRORS LV_ERRORS = 44;
  int lv_errors_size() const;
  private:
  int _internal_lv_errors_size() const;
  public:
  void clear_lv_errors();
  ::primary::LV_ERRORS* mutable_lv_errors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_ERRORS >*
      mutable_lv_errors();
  private:
  const ::primary::LV_ERRORS& _internal_lv_errors(int index) const;
  ::primary::LV_ERRORS* _internal_add_lv_errors();
  public:
  const ::primary::LV_ERRORS& lv_errors(int index) const;
  ::primary::LV_ERRORS* add_lv_errors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_ERRORS >&
      lv_errors() const;

  // repeated .primary.SHUTDOWN_STATUS SHUTDOWN_STATUS = 45;
  int shutdown_status_size() const;
  private:
  int _internal_shutdown_status_size() const;
  public:
  void clear_shutdown_status();
  ::primary::SHUTDOWN_STATUS* mutable_shutdown_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SHUTDOWN_STATUS >*
      mutable_shutdown_status();
  private:
  const ::primary::SHUTDOWN_STATUS& _internal_shutdown_status(int index) const;
  ::primary::SHUTDOWN_STATUS* _internal_add_shutdown_status();
  public:
  const ::primary::SHUTDOWN_STATUS& shutdown_status(int index) const;
  ::primary::SHUTDOWN_STATUS* add_shutdown_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SHUTDOWN_STATUS >&
      shutdown_status() const;

  // repeated .primary.MARKER MARKER = 46;
  int marker_size() const;
  private:
  int _internal_marker_size() const;
  public:
  void clear_marker();
  ::primary::MARKER* mutable_marker(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::MARKER >*
      mutable_marker();
  private:
  const ::primary::MARKER& _internal_marker(int index) const;
  ::primary::MARKER* _internal_add_marker();
  public:
  const ::primary::MARKER& marker(int index) const;
  ::primary::MARKER* add_marker();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::MARKER >&
      marker() const;

  // repeated .primary.HV_CELLS_VOLTAGE HV_CELLS_VOLTAGE = 47;
  int hv_cells_voltage_size() const;
  private:
  int _internal_hv_cells_voltage_size() const;
  public:
  void clear_hv_cells_voltage();
  ::primary::HV_CELLS_VOLTAGE* mutable_hv_cells_voltage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_VOLTAGE >*
      mutable_hv_cells_voltage();
  private:
  const ::primary::HV_CELLS_VOLTAGE& _internal_hv_cells_voltage(int index) const;
  ::primary::HV_CELLS_VOLTAGE* _internal_add_hv_cells_voltage();
  public:
  const ::primary::HV_CELLS_VOLTAGE& hv_cells_voltage(int index) const;
  ::primary::HV_CELLS_VOLTAGE* add_hv_cells_voltage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_VOLTAGE >&
      hv_cells_voltage() const;

  // repeated .primary.HV_CELLS_TEMP HV_CELLS_TEMP = 48;
  int hv_cells_temp_size() const;
  private:
  int _internal_hv_cells_temp_size() const;
  public:
  void clear_hv_cells_temp();
  ::primary::HV_CELLS_TEMP* mutable_hv_cells_temp(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_TEMP >*
      mutable_hv_cells_temp();
  private:
  const ::primary::HV_CELLS_TEMP& _internal_hv_cells_temp(int index) const;
  ::primary::HV_CELLS_TEMP* _internal_add_hv_cells_temp();
  public:
  const ::primary::HV_CELLS_TEMP& hv_cells_temp(int index) const;
  ::primary::HV_CELLS_TEMP* add_hv_cells_temp();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_TEMP >&
      hv_cells_temp() const;

  // repeated .primary.HV_CELL_BALANCING_STATUS HV_CELL_BALANCING_STATUS = 49;
  int hv_cell_balancing_status_size() const;
  private:
  int _internal_hv_cell_balancing_status_size() const;
  public:
  void clear_hv_cell_balancing_status();
  ::primary::HV_CELL_BALANCING_STATUS* mutable_hv_cell_balancing_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELL_BALANCING_STATUS >*
      mutable_hv_cell_balancing_status();
  private:
  const ::primary::HV_CELL_BALANCING_STATUS& _internal_hv_cell_balancing_status(int index) const;
  ::primary::HV_CELL_BALANCING_STATUS* _internal_add_hv_cell_balancing_status();
  public:
  const ::primary::HV_CELL_BALANCING_STATUS& hv_cell_balancing_status(int index) const;
  ::primary::HV_CELL_BALANCING_STATUS* add_hv_cell_balancing_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELL_BALANCING_STATUS >&
      hv_cell_balancing_status() const;

  // repeated .primary.SET_CELL_BALANCING_STATUS SET_CELL_BALANCING_STATUS = 50;
  int set_cell_balancing_status_size() const;
  private:
  int _internal_set_cell_balancing_status_size() const;
  public:
  void clear_set_cell_balancing_status();
  ::primary::SET_CELL_BALANCING_STATUS* mutable_set_cell_balancing_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CELL_BALANCING_STATUS >*
      mutable_set_cell_balancing_status();
  private:
  const ::primary::SET_CELL_BALANCING_STATUS& _internal_set_cell_balancing_status(int index) const;
  ::primary::SET_CELL_BALANCING_STATUS* _internal_add_set_cell_balancing_status();
  public:
  const ::primary::SET_CELL_BALANCING_STATUS& set_cell_balancing_status(int index) const;
  ::primary::SET_CELL_BALANCING_STATUS* add_set_cell_balancing_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CELL_BALANCING_STATUS >&
      set_cell_balancing_status() const;

  // repeated .primary.HANDCART_STATUS HANDCART_STATUS = 51;
  int handcart_status_size() const;
  private:
  int _internal_handcart_status_size() const;
  public:
  void clear_handcart_status();
  ::primary::HANDCART_STATUS* mutable_handcart_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HANDCART_STATUS >*
      mutable_handcart_status();
  private:
  const ::primary::HANDCART_STATUS& _internal_handcart_status(int index) const;
  ::primary::HANDCART_STATUS* _internal_add_handcart_status();
  public:
  const ::primary::HANDCART_STATUS& handcart_status(int index) const;
  ::primary::HANDCART_STATUS* add_handcart_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HANDCART_STATUS >&
      handcart_status() const;

  // repeated .primary.SPEED SPEED = 52;
  int speed_size() const;
  private:
  int _internal_speed_size() const;
  public:
  void clear_speed();
  ::primary::SPEED* mutable_speed(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SPEED >*
      mutable_speed();
  private:
  const ::primary::SPEED& _internal_speed(int index) const;
  ::primary::SPEED* _internal_add_speed();
  public:
  const ::primary::SPEED& speed(int index) const;
  ::primary::SPEED* add_speed();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SPEED >&
      speed() const;

  // repeated .primary.INV_L_REQUEST INV_L_REQUEST = 53;
  int inv_l_request_size() const;
  private:
  int _internal_inv_l_request_size() const;
  public:
  void clear_inv_l_request();
  ::primary::INV_L_REQUEST* mutable_inv_l_request(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_REQUEST >*
      mutable_inv_l_request();
  private:
  const ::primary::INV_L_REQUEST& _internal_inv_l_request(int index) const;
  ::primary::INV_L_REQUEST* _internal_add_inv_l_request();
  public:
  const ::primary::INV_L_REQUEST& inv_l_request(int index) const;
  ::primary::INV_L_REQUEST* add_inv_l_request();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_REQUEST >&
      inv_l_request() const;

  // repeated .primary.INV_R_REQUEST INV_R_REQUEST = 54;
  int inv_r_request_size() const;
  private:
  int _internal_inv_r_request_size() const;
  public:
  void clear_inv_r_request();
  ::primary::INV_R_REQUEST* mutable_inv_r_request(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_REQUEST >*
      mutable_inv_r_request();
  private:
  const ::primary::INV_R_REQUEST& _internal_inv_r_request(int index) const;
  ::primary::INV_R_REQUEST* _internal_add_inv_r_request();
  public:
  const ::primary::INV_R_REQUEST& inv_r_request(int index) const;
  ::primary::INV_R_REQUEST* add_inv_r_request();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_REQUEST >&
      inv_r_request() const;

  // repeated .primary.INV_L_RESPONSE INV_L_RESPONSE = 55;
  int inv_l_response_size() const;
  private:
  int _internal_inv_l_response_size() const;
  public:
  void clear_inv_l_response();
  ::primary::INV_L_RESPONSE* mutable_inv_l_response(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_RESPONSE >*
      mutable_inv_l_response();
  private:
  const ::primary::INV_L_RESPONSE& _internal_inv_l_response(int index) const;
  ::primary::INV_L_RESPONSE* _internal_add_inv_l_response();
  public:
  const ::primary::INV_L_RESPONSE& inv_l_response(int index) const;
  ::primary::INV_L_RESPONSE* add_inv_l_response();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_RESPONSE >&
      inv_l_response() const;

  // repeated .primary.INV_R_RESPONSE INV_R_RESPONSE = 56;
  int inv_r_response_size() const;
  private:
  int _internal_inv_r_response_size() const;
  public:
  void clear_inv_r_response();
  ::primary::INV_R_RESPONSE* mutable_inv_r_response(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_RESPONSE >*
      mutable_inv_r_response();
  private:
  const ::primary::INV_R_RESPONSE& _internal_inv_r_response(int index) const;
  ::primary::INV_R_RESPONSE* _internal_add_inv_r_response();
  public:
  const ::primary::INV_R_RESPONSE& inv_r_response(int index) const;
  ::primary::INV_R_RESPONSE* add_inv_r_response();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_RESPONSE >&
      inv_r_response() const;

  // repeated .primary.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 57;
  int flash_cellboard_0_tx_size() const;
  private:
  int _internal_flash_cellboard_0_tx_size() const;
  public:
  void clear_flash_cellboard_0_tx();
  ::primary::FLASH_CELLBOARD_0_TX* mutable_flash_cellboard_0_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_TX >*
      mutable_flash_cellboard_0_tx();
  private:
  const ::primary::FLASH_CELLBOARD_0_TX& _internal_flash_cellboard_0_tx(int index) const;
  ::primary::FLASH_CELLBOARD_0_TX* _internal_add_flash_cellboard_0_tx();
  public:
  const ::primary::FLASH_CELLBOARD_0_TX& flash_cellboard_0_tx(int index) const;
  ::primary::FLASH_CELLBOARD_0_TX* add_flash_cellboard_0_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_TX >&
      flash_cellboard_0_tx() const;

  // repeated .primary.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 58;
  int flash_cellboard_0_rx_size() const;
  private:
  int _internal_flash_cellboard_0_rx_size() const;
  public:
  void clear_flash_cellboard_0_rx();
  ::primary::FLASH_CELLBOARD_0_RX* mutable_flash_cellboard_0_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_RX >*
      mutable_flash_cellboard_0_rx();
  private:
  const ::primary::FLASH_CELLBOARD_0_RX& _internal_flash_cellboard_0_rx(int index) const;
  ::primary::FLASH_CELLBOARD_0_RX* _internal_add_flash_cellboard_0_rx();
  public:
  const ::primary::FLASH_CELLBOARD_0_RX& flash_cellboard_0_rx(int index) const;
  ::primary::FLASH_CELLBOARD_0_RX* add_flash_cellboard_0_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_RX >&
      flash_cellboard_0_rx() const;

  // repeated .primary.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 59;
  int flash_cellboard_1_tx_size() const;
  private:
  int _internal_flash_cellboard_1_tx_size() const;
  public:
  void clear_flash_cellboard_1_tx();
  ::primary::FLASH_CELLBOARD_1_TX* mutable_flash_cellboard_1_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_TX >*
      mutable_flash_cellboard_1_tx();
  private:
  const ::primary::FLASH_CELLBOARD_1_TX& _internal_flash_cellboard_1_tx(int index) const;
  ::primary::FLASH_CELLBOARD_1_TX* _internal_add_flash_cellboard_1_tx();
  public:
  const ::primary::FLASH_CELLBOARD_1_TX& flash_cellboard_1_tx(int index) const;
  ::primary::FLASH_CELLBOARD_1_TX* add_flash_cellboard_1_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_TX >&
      flash_cellboard_1_tx() const;

  // repeated .primary.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 60;
  int flash_cellboard_1_rx_size() const;
  private:
  int _internal_flash_cellboard_1_rx_size() const;
  public:
  void clear_flash_cellboard_1_rx();
  ::primary::FLASH_CELLBOARD_1_RX* mutable_flash_cellboard_1_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_RX >*
      mutable_flash_cellboard_1_rx();
  private:
  const ::primary::FLASH_CELLBOARD_1_RX& _internal_flash_cellboard_1_rx(int index) const;
  ::primary::FLASH_CELLBOARD_1_RX* _internal_add_flash_cellboard_1_rx();
  public:
  const ::primary::FLASH_CELLBOARD_1_RX& flash_cellboard_1_rx(int index) const;
  ::primary::FLASH_CELLBOARD_1_RX* add_flash_cellboard_1_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_RX >&
      flash_cellboard_1_rx() const;

  // repeated .primary.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 61;
  int flash_cellboard_2_tx_size() const;
  private:
  int _internal_flash_cellboard_2_tx_size() const;
  public:
  void clear_flash_cellboard_2_tx();
  ::primary::FLASH_CELLBOARD_2_TX* mutable_flash_cellboard_2_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_TX >*
      mutable_flash_cellboard_2_tx();
  private:
  const ::primary::FLASH_CELLBOARD_2_TX& _internal_flash_cellboard_2_tx(int index) const;
  ::primary::FLASH_CELLBOARD_2_TX* _internal_add_flash_cellboard_2_tx();
  public:
  const ::primary::FLASH_CELLBOARD_2_TX& flash_cellboard_2_tx(int index) const;
  ::primary::FLASH_CELLBOARD_2_TX* add_flash_cellboard_2_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_TX >&
      flash_cellboard_2_tx() const;

  // repeated .primary.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 62;
  int flash_cellboard_2_rx_size() const;
  private:
  int _internal_flash_cellboard_2_rx_size() const;
  public:
  void clear_flash_cellboard_2_rx();
  ::primary::FLASH_CELLBOARD_2_RX* mutable_flash_cellboard_2_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_RX >*
      mutable_flash_cellboard_2_rx();
  private:
  const ::primary::FLASH_CELLBOARD_2_RX& _internal_flash_cellboard_2_rx(int index) const;
  ::primary::FLASH_CELLBOARD_2_RX* _internal_add_flash_cellboard_2_rx();
  public:
  const ::primary::FLASH_CELLBOARD_2_RX& flash_cellboard_2_rx(int index) const;
  ::primary::FLASH_CELLBOARD_2_RX* add_flash_cellboard_2_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_RX >&
      flash_cellboard_2_rx() const;

  // repeated .primary.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 63;
  int flash_cellboard_3_tx_size() const;
  private:
  int _internal_flash_cellboard_3_tx_size() const;
  public:
  void clear_flash_cellboard_3_tx();
  ::primary::FLASH_CELLBOARD_3_TX* mutable_flash_cellboard_3_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_TX >*
      mutable_flash_cellboard_3_tx();
  private:
  const ::primary::FLASH_CELLBOARD_3_TX& _internal_flash_cellboard_3_tx(int index) const;
  ::primary::FLASH_CELLBOARD_3_TX* _internal_add_flash_cellboard_3_tx();
  public:
  const ::primary::FLASH_CELLBOARD_3_TX& flash_cellboard_3_tx(int index) const;
  ::primary::FLASH_CELLBOARD_3_TX* add_flash_cellboard_3_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_TX >&
      flash_cellboard_3_tx() const;

  // repeated .primary.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 64;
  int flash_cellboard_3_rx_size() const;
  private:
  int _internal_flash_cellboard_3_rx_size() const;
  public:
  void clear_flash_cellboard_3_rx();
  ::primary::FLASH_CELLBOARD_3_RX* mutable_flash_cellboard_3_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_RX >*
      mutable_flash_cellboard_3_rx();
  private:
  const ::primary::FLASH_CELLBOARD_3_RX& _internal_flash_cellboard_3_rx(int index) const;
  ::primary::FLASH_CELLBOARD_3_RX* _internal_add_flash_cellboard_3_rx();
  public:
  const ::primary::FLASH_CELLBOARD_3_RX& flash_cellboard_3_rx(int index) const;
  ::primary::FLASH_CELLBOARD_3_RX* add_flash_cellboard_3_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_RX >&
      flash_cellboard_3_rx() const;

  // repeated .primary.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 65;
  int flash_cellboard_4_tx_size() const;
  private:
  int _internal_flash_cellboard_4_tx_size() const;
  public:
  void clear_flash_cellboard_4_tx();
  ::primary::FLASH_CELLBOARD_4_TX* mutable_flash_cellboard_4_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_TX >*
      mutable_flash_cellboard_4_tx();
  private:
  const ::primary::FLASH_CELLBOARD_4_TX& _internal_flash_cellboard_4_tx(int index) const;
  ::primary::FLASH_CELLBOARD_4_TX* _internal_add_flash_cellboard_4_tx();
  public:
  const ::primary::FLASH_CELLBOARD_4_TX& flash_cellboard_4_tx(int index) const;
  ::primary::FLASH_CELLBOARD_4_TX* add_flash_cellboard_4_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_TX >&
      flash_cellboard_4_tx() const;

  // repeated .primary.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 66;
  int flash_cellboard_4_rx_size() const;
  private:
  int _internal_flash_cellboard_4_rx_size() const;
  public:
  void clear_flash_cellboard_4_rx();
  ::primary::FLASH_CELLBOARD_4_RX* mutable_flash_cellboard_4_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_RX >*
      mutable_flash_cellboard_4_rx();
  private:
  const ::primary::FLASH_CELLBOARD_4_RX& _internal_flash_cellboard_4_rx(int index) const;
  ::primary::FLASH_CELLBOARD_4_RX* _internal_add_flash_cellboard_4_rx();
  public:
  const ::primary::FLASH_CELLBOARD_4_RX& flash_cellboard_4_rx(int index) const;
  ::primary::FLASH_CELLBOARD_4_RX* add_flash_cellboard_4_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_RX >&
      flash_cellboard_4_rx() const;

  // repeated .primary.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 67;
  int flash_cellboard_5_tx_size() const;
  private:
  int _internal_flash_cellboard_5_tx_size() const;
  public:
  void clear_flash_cellboard_5_tx();
  ::primary::FLASH_CELLBOARD_5_TX* mutable_flash_cellboard_5_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_TX >*
      mutable_flash_cellboard_5_tx();
  private:
  const ::primary::FLASH_CELLBOARD_5_TX& _internal_flash_cellboard_5_tx(int index) const;
  ::primary::FLASH_CELLBOARD_5_TX* _internal_add_flash_cellboard_5_tx();
  public:
  const ::primary::FLASH_CELLBOARD_5_TX& flash_cellboard_5_tx(int index) const;
  ::primary::FLASH_CELLBOARD_5_TX* add_flash_cellboard_5_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_TX >&
      flash_cellboard_5_tx() const;

  // repeated .primary.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 68;
  int flash_cellboard_5_rx_size() const;
  private:
  int _internal_flash_cellboard_5_rx_size() const;
  public:
  void clear_flash_cellboard_5_rx();
  ::primary::FLASH_CELLBOARD_5_RX* mutable_flash_cellboard_5_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_RX >*
      mutable_flash_cellboard_5_rx();
  private:
  const ::primary::FLASH_CELLBOARD_5_RX& _internal_flash_cellboard_5_rx(int index) const;
  ::primary::FLASH_CELLBOARD_5_RX* _internal_add_flash_cellboard_5_rx();
  public:
  const ::primary::FLASH_CELLBOARD_5_RX& flash_cellboard_5_rx(int index) const;
  ::primary::FLASH_CELLBOARD_5_RX* add_flash_cellboard_5_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_RX >&
      flash_cellboard_5_rx() const;

  // repeated .primary.FLASH_BMS_HV_TX FLASH_BMS_HV_TX = 69;
  int flash_bms_hv_tx_size() const;
  private:
  int _internal_flash_bms_hv_tx_size() const;
  public:
  void clear_flash_bms_hv_tx();
  ::primary::FLASH_BMS_HV_TX* mutable_flash_bms_hv_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_TX >*
      mutable_flash_bms_hv_tx();
  private:
  const ::primary::FLASH_BMS_HV_TX& _internal_flash_bms_hv_tx(int index) const;
  ::primary::FLASH_BMS_HV_TX* _internal_add_flash_bms_hv_tx();
  public:
  const ::primary::FLASH_BMS_HV_TX& flash_bms_hv_tx(int index) const;
  ::primary::FLASH_BMS_HV_TX* add_flash_bms_hv_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_TX >&
      flash_bms_hv_tx() const;

  // repeated .primary.FLASH_BMS_HV_RX FLASH_BMS_HV_RX = 70;
  int flash_bms_hv_rx_size() const;
  private:
  int _internal_flash_bms_hv_rx_size() const;
  public:
  void clear_flash_bms_hv_rx();
  ::primary::FLASH_BMS_HV_RX* mutable_flash_bms_hv_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_RX >*
      mutable_flash_bms_hv_rx();
  private:
  const ::primary::FLASH_BMS_HV_RX& _internal_flash_bms_hv_rx(int index) const;
  ::primary::FLASH_BMS_HV_RX* _internal_add_flash_bms_hv_rx();
  public:
  const ::primary::FLASH_BMS_HV_RX& flash_bms_hv_rx(int index) const;
  ::primary::FLASH_BMS_HV_RX* add_flash_bms_hv_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_RX >&
      flash_bms_hv_rx() const;

  // repeated .primary.FLASH_BMS_LV_TX FLASH_BMS_LV_TX = 71;
  int flash_bms_lv_tx_size() const;
  private:
  int _internal_flash_bms_lv_tx_size() const;
  public:
  void clear_flash_bms_lv_tx();
  ::primary::FLASH_BMS_LV_TX* mutable_flash_bms_lv_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_TX >*
      mutable_flash_bms_lv_tx();
  private:
  const ::primary::FLASH_BMS_LV_TX& _internal_flash_bms_lv_tx(int index) const;
  ::primary::FLASH_BMS_LV_TX* _internal_add_flash_bms_lv_tx();
  public:
  const ::primary::FLASH_BMS_LV_TX& flash_bms_lv_tx(int index) const;
  ::primary::FLASH_BMS_LV_TX* add_flash_bms_lv_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_TX >&
      flash_bms_lv_tx() const;

  // repeated .primary.FLASH_BMS_LV_RX FLASH_BMS_LV_RX = 72;
  int flash_bms_lv_rx_size() const;
  private:
  int _internal_flash_bms_lv_rx_size() const;
  public:
  void clear_flash_bms_lv_rx();
  ::primary::FLASH_BMS_LV_RX* mutable_flash_bms_lv_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_RX >*
      mutable_flash_bms_lv_rx();
  private:
  const ::primary::FLASH_BMS_LV_RX& _internal_flash_bms_lv_rx(int index) const;
  ::primary::FLASH_BMS_LV_RX* _internal_add_flash_bms_lv_rx();
  public:
  const ::primary::FLASH_BMS_LV_RX& flash_bms_lv_rx(int index) const;
  ::primary::FLASH_BMS_LV_RX* add_flash_bms_lv_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_RX >&
      flash_bms_lv_rx() const;

  // repeated .primary.BRUSA_NLG5_CTL BRUSA_NLG5_CTL = 73;
  int brusa_nlg5_ctl_size() const;
  private:
  int _internal_brusa_nlg5_ctl_size() const;
  public:
  void clear_brusa_nlg5_ctl();
  ::primary::BRUSA_NLG5_CTL* mutable_brusa_nlg5_ctl(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_NLG5_CTL >*
      mutable_brusa_nlg5_ctl();
  private:
  const ::primary::BRUSA_NLG5_CTL& _internal_brusa_nlg5_ctl(int index) const;
  ::primary::BRUSA_NLG5_CTL* _internal_add_brusa_nlg5_ctl();
  public:
  const ::primary::BRUSA_NLG5_CTL& brusa_nlg5_ctl(int index) const;
  ::primary::BRUSA_NLG5_CTL* add_brusa_nlg5_ctl();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_NLG5_CTL >&
      brusa_nlg5_ctl() const;

  // repeated .primary.BRUSA_ST BRUSA_ST = 74;
  int brusa_st_size() const;
  private:
  int _internal_brusa_st_size() const;
  public:
  void clear_brusa_st();
  ::primary::BRUSA_ST* mutable_brusa_st(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ST >*
      mutable_brusa_st();
  private:
  const ::primary::BRUSA_ST& _internal_brusa_st(int index) const;
  ::primary::BRUSA_ST* _internal_add_brusa_st();
  public:
  const ::primary::BRUSA_ST& brusa_st(int index) const;
  ::primary::BRUSA_ST* add_brusa_st();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ST >&
      brusa_st() const;

  // repeated .primary.BRUSA_ACT_I BRUSA_ACT_I = 75;
  int brusa_act_i_size() const;
  private:
  int _internal_brusa_act_i_size() const;
  public:
  void clear_brusa_act_i();
  ::primary::BRUSA_ACT_I* mutable_brusa_act_i(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_I >*
      mutable_brusa_act_i();
  private:
  const ::primary::BRUSA_ACT_I& _internal_brusa_act_i(int index) const;
  ::primary::BRUSA_ACT_I* _internal_add_brusa_act_i();
  public:
  const ::primary::BRUSA_ACT_I& brusa_act_i(int index) const;
  ::primary::BRUSA_ACT_I* add_brusa_act_i();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_I >&
      brusa_act_i() const;

  // repeated .primary.BRUSA_ACT_II BRUSA_ACT_II = 76;
  int brusa_act_ii_size() const;
  private:
  int _internal_brusa_act_ii_size() const;
  public:
  void clear_brusa_act_ii();
  ::primary::BRUSA_ACT_II* mutable_brusa_act_ii(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_II >*
      mutable_brusa_act_ii();
  private:
  const ::primary::BRUSA_ACT_II& _internal_brusa_act_ii(int index) const;
  ::primary::BRUSA_ACT_II* _internal_add_brusa_act_ii();
  public:
  const ::primary::BRUSA_ACT_II& brusa_act_ii(int index) const;
  ::primary::BRUSA_ACT_II* add_brusa_act_ii();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_II >&
      brusa_act_ii() const;

  // repeated .primary.BRUSA_TEMP BRUSA_TEMP = 77;
  int brusa_temp_size() const;
  private:
  int _internal_brusa_temp_size() const;
  public:
  void clear_brusa_temp();
  ::primary::BRUSA_TEMP* mutable_brusa_temp(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_TEMP >*
      mutable_brusa_temp();
  private:
  const ::primary::BRUSA_TEMP& _internal_brusa_temp(int index) const;
  ::primary::BRUSA_TEMP* _internal_add_brusa_temp();
  public:
  const ::primary::BRUSA_TEMP& brusa_temp(int index) const;
  ::primary::BRUSA_TEMP* add_brusa_temp();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_TEMP >&
      brusa_temp() const;

  // repeated .primary.BRUSA_ERR BRUSA_ERR = 78;
  int brusa_err_size() const;
  private:
  int _internal_brusa_err_size() const;
  public:
  void clear_brusa_err();
  ::primary::BRUSA_ERR* mutable_brusa_err(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ERR >*
      mutable_brusa_err();
  private:
  const ::primary::BRUSA_ERR& _internal_brusa_err(int index) const;
  ::primary::BRUSA_ERR* _internal_add_brusa_err();
  public:
  const ::primary::BRUSA_ERR& brusa_err(int index) const;
  ::primary::BRUSA_ERR* add_brusa_err();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ERR >&
      brusa_err() const;

  // repeated .primary.CONTROL_OUTPUT CONTROL_OUTPUT = 79;
  int control_output_size() const;
  private:
  int _internal_control_output_size() const;
  public:
  void clear_control_output();
  ::primary::CONTROL_OUTPUT* mutable_control_output(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CONTROL_OUTPUT >*
      mutable_control_output();
  private:
  const ::primary::CONTROL_OUTPUT& _internal_control_output(int index) const;
  ::primary::CONTROL_OUTPUT* _internal_add_control_output();
  public:
  const ::primary::CONTROL_OUTPUT& control_output(int index) const;
  ::primary::CONTROL_OUTPUT* add_control_output();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CONTROL_OUTPUT >&
      control_output() const;

  // repeated .primary.LC_RESET LC_RESET = 80;
  int lc_reset_size() const;
  private:
  int _internal_lc_reset_size() const;
  public:
  void clear_lc_reset();
  ::primary::LC_RESET* mutable_lc_reset(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LC_RESET >*
      mutable_lc_reset();
  private:
  const ::primary::LC_RESET& _internal_lc_reset(int index) const;
  ::primary::LC_RESET* _internal_add_lc_reset();
  public:
  const ::primary::LC_RESET& lc_reset(int index) const;
  ::primary::LC_RESET* add_lc_reset();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LC_RESET >&
      lc_reset() const;

  // @@protoc_insertion_point(class_scope:primary.Pack)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_HV_JMP_TO_BLT > bms_hv_jmp_to_blt_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_LV_JMP_TO_BLT > bms_lv_jmp_to_blt_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_VERSION > steer_version_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_VERSION > das_version_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VERSION > hv_version_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VERSION > lv_version_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_VERSION > tlm_version_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TIMESTAMP > timestamp_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::AMBIENT_TEMPERATURE > ambient_temperature_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DATA_LOGGER > data_logger_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TLM_STATUS > set_tlm_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_STATUS > tlm_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_SYSTEM_STATUS > steer_system_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VOLTAGE > hv_voltage_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CURRENT > hv_current_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_TEMP > hv_temp_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_ERRORS > hv_errors_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD > hv_can_forward_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE > hv_fans_override_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD_STATUS > hv_can_forward_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE_STATUS > hv_fans_override_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FEEDBACKS_STATUS > hv_feedbacks_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_IMD_STATUS > hv_imd_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_DAS > ts_status_das_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_STEER > ts_status_steer_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_HANDCART > ts_status_handcart_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_DAS > set_ts_status_das_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_HANDCART > set_ts_status_handcart_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_STATUS > steer_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CAR_STATUS > set_car_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PEDALS_RANGE > set_pedals_range_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_STEERING_ANGLE_RANGE > set_steering_angle_range_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CAR_STATUS > car_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_ERRORS > das_errors_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_CURRENT > lv_current_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VOLTAGE > lv_voltage_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TOTAL_VOLTAGE > lv_total_voltage_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TEMPERATURE > lv_temperature_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::COOLING_STATUS > cooling_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_RADIATOR_SPEED > set_radiator_speed_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PUMPS_SPEED > set_pumps_speed_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_INVERTER_CONNECTION_STATUS > set_inverter_connection_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INVERTER_CONNECTION_STATUS > inverter_connection_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_ERRORS > lv_errors_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SHUTDOWN_STATUS > shutdown_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::MARKER > marker_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_VOLTAGE > hv_cells_voltage_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_TEMP > hv_cells_temp_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELL_BALANCING_STATUS > hv_cell_balancing_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CELL_BALANCING_STATUS > set_cell_balancing_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HANDCART_STATUS > handcart_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SPEED > speed_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_REQUEST > inv_l_request_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_REQUEST > inv_r_request_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_RESPONSE > inv_l_response_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_RESPONSE > inv_r_response_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_TX > flash_cellboard_0_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_RX > flash_cellboard_0_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_TX > flash_cellboard_1_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_RX > flash_cellboard_1_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_TX > flash_cellboard_2_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_RX > flash_cellboard_2_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_TX > flash_cellboard_3_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_RX > flash_cellboard_3_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_TX > flash_cellboard_4_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_RX > flash_cellboard_4_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_TX > flash_cellboard_5_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_RX > flash_cellboard_5_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_TX > flash_bms_hv_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_RX > flash_bms_hv_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_TX > flash_bms_lv_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_RX > flash_bms_lv_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_NLG5_CTL > brusa_nlg5_ctl_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ST > brusa_st_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_I > brusa_act_i_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_II > brusa_act_ii_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_TEMP > brusa_temp_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ERR > brusa_err_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CONTROL_OUTPUT > control_output_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LC_RESET > lc_reset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_primary_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BMS_HV_JMP_TO_BLT

// uint64 _inner_timestamp = 1;
inline void BMS_HV_JMP_TO_BLT::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BMS_HV_JMP_TO_BLT::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BMS_HV_JMP_TO_BLT::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BMS_HV_JMP_TO_BLT._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BMS_HV_JMP_TO_BLT::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BMS_HV_JMP_TO_BLT::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BMS_HV_JMP_TO_BLT._inner_timestamp)
}

// -------------------------------------------------------------------

// BMS_LV_JMP_TO_BLT

// uint64 _inner_timestamp = 1;
inline void BMS_LV_JMP_TO_BLT::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BMS_LV_JMP_TO_BLT::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BMS_LV_JMP_TO_BLT::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BMS_LV_JMP_TO_BLT._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BMS_LV_JMP_TO_BLT::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BMS_LV_JMP_TO_BLT::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BMS_LV_JMP_TO_BLT._inner_timestamp)
}

// -------------------------------------------------------------------

// STEER_VERSION

// uint32 component_version = 1;
inline void STEER_VERSION::clear_component_version() {
  component_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 STEER_VERSION::_internal_component_version() const {
  return component_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 STEER_VERSION::component_version() const {
  // @@protoc_insertion_point(field_get:primary.STEER_VERSION.component_version)
  return _internal_component_version();
}
inline void STEER_VERSION::_internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  component_version_ = value;
}
inline void STEER_VERSION::set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_component_version(value);
  // @@protoc_insertion_point(field_set:primary.STEER_VERSION.component_version)
}

// uint32 canlib_build_time = 2;
inline void STEER_VERSION::clear_canlib_build_time() {
  canlib_build_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 STEER_VERSION::_internal_canlib_build_time() const {
  return canlib_build_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 STEER_VERSION::canlib_build_time() const {
  // @@protoc_insertion_point(field_get:primary.STEER_VERSION.canlib_build_time)
  return _internal_canlib_build_time();
}
inline void STEER_VERSION::_internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  canlib_build_time_ = value;
}
inline void STEER_VERSION::set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_canlib_build_time(value);
  // @@protoc_insertion_point(field_set:primary.STEER_VERSION.canlib_build_time)
}

// uint64 _inner_timestamp = 3;
inline void STEER_VERSION::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 STEER_VERSION::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 STEER_VERSION::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.STEER_VERSION._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void STEER_VERSION::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void STEER_VERSION::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.STEER_VERSION._inner_timestamp)
}

// -------------------------------------------------------------------

// DAS_VERSION

// uint32 component_version = 1;
inline void DAS_VERSION::clear_component_version() {
  component_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DAS_VERSION::_internal_component_version() const {
  return component_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DAS_VERSION::component_version() const {
  // @@protoc_insertion_point(field_get:primary.DAS_VERSION.component_version)
  return _internal_component_version();
}
inline void DAS_VERSION::_internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  component_version_ = value;
}
inline void DAS_VERSION::set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_component_version(value);
  // @@protoc_insertion_point(field_set:primary.DAS_VERSION.component_version)
}

// uint32 canlib_build_time = 2;
inline void DAS_VERSION::clear_canlib_build_time() {
  canlib_build_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DAS_VERSION::_internal_canlib_build_time() const {
  return canlib_build_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DAS_VERSION::canlib_build_time() const {
  // @@protoc_insertion_point(field_get:primary.DAS_VERSION.canlib_build_time)
  return _internal_canlib_build_time();
}
inline void DAS_VERSION::_internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  canlib_build_time_ = value;
}
inline void DAS_VERSION::set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_canlib_build_time(value);
  // @@protoc_insertion_point(field_set:primary.DAS_VERSION.canlib_build_time)
}

// uint64 _inner_timestamp = 3;
inline void DAS_VERSION::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DAS_VERSION::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DAS_VERSION::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.DAS_VERSION._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void DAS_VERSION::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void DAS_VERSION::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.DAS_VERSION._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_VERSION

// uint32 component_version = 1;
inline void HV_VERSION::clear_component_version() {
  component_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_VERSION::_internal_component_version() const {
  return component_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_VERSION::component_version() const {
  // @@protoc_insertion_point(field_get:primary.HV_VERSION.component_version)
  return _internal_component_version();
}
inline void HV_VERSION::_internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  component_version_ = value;
}
inline void HV_VERSION::set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_component_version(value);
  // @@protoc_insertion_point(field_set:primary.HV_VERSION.component_version)
}

// uint32 canlib_build_time = 2;
inline void HV_VERSION::clear_canlib_build_time() {
  canlib_build_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_VERSION::_internal_canlib_build_time() const {
  return canlib_build_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_VERSION::canlib_build_time() const {
  // @@protoc_insertion_point(field_get:primary.HV_VERSION.canlib_build_time)
  return _internal_canlib_build_time();
}
inline void HV_VERSION::_internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  canlib_build_time_ = value;
}
inline void HV_VERSION::set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_canlib_build_time(value);
  // @@protoc_insertion_point(field_set:primary.HV_VERSION.canlib_build_time)
}

// uint64 _inner_timestamp = 3;
inline void HV_VERSION::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_VERSION::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_VERSION::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_VERSION._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_VERSION::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_VERSION::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_VERSION._inner_timestamp)
}

// -------------------------------------------------------------------

// LV_VERSION

// uint32 component_version = 1;
inline void LV_VERSION::clear_component_version() {
  component_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_VERSION::_internal_component_version() const {
  return component_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_VERSION::component_version() const {
  // @@protoc_insertion_point(field_get:primary.LV_VERSION.component_version)
  return _internal_component_version();
}
inline void LV_VERSION::_internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  component_version_ = value;
}
inline void LV_VERSION::set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_component_version(value);
  // @@protoc_insertion_point(field_set:primary.LV_VERSION.component_version)
}

// uint32 canlib_build_time = 2;
inline void LV_VERSION::clear_canlib_build_time() {
  canlib_build_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_VERSION::_internal_canlib_build_time() const {
  return canlib_build_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_VERSION::canlib_build_time() const {
  // @@protoc_insertion_point(field_get:primary.LV_VERSION.canlib_build_time)
  return _internal_canlib_build_time();
}
inline void LV_VERSION::_internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  canlib_build_time_ = value;
}
inline void LV_VERSION::set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_canlib_build_time(value);
  // @@protoc_insertion_point(field_set:primary.LV_VERSION.canlib_build_time)
}

// uint64 _inner_timestamp = 3;
inline void LV_VERSION::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_VERSION::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_VERSION::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.LV_VERSION._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void LV_VERSION::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void LV_VERSION::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.LV_VERSION._inner_timestamp)
}

// -------------------------------------------------------------------

// TLM_VERSION

// uint32 component_version = 1;
inline void TLM_VERSION::clear_component_version() {
  component_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TLM_VERSION::_internal_component_version() const {
  return component_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TLM_VERSION::component_version() const {
  // @@protoc_insertion_point(field_get:primary.TLM_VERSION.component_version)
  return _internal_component_version();
}
inline void TLM_VERSION::_internal_set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  component_version_ = value;
}
inline void TLM_VERSION::set_component_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_component_version(value);
  // @@protoc_insertion_point(field_set:primary.TLM_VERSION.component_version)
}

// uint32 canlib_build_time = 2;
inline void TLM_VERSION::clear_canlib_build_time() {
  canlib_build_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TLM_VERSION::_internal_canlib_build_time() const {
  return canlib_build_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TLM_VERSION::canlib_build_time() const {
  // @@protoc_insertion_point(field_get:primary.TLM_VERSION.canlib_build_time)
  return _internal_canlib_build_time();
}
inline void TLM_VERSION::_internal_set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  canlib_build_time_ = value;
}
inline void TLM_VERSION::set_canlib_build_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_canlib_build_time(value);
  // @@protoc_insertion_point(field_set:primary.TLM_VERSION.canlib_build_time)
}

// uint64 _inner_timestamp = 3;
inline void TLM_VERSION::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TLM_VERSION::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TLM_VERSION::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.TLM_VERSION._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void TLM_VERSION::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void TLM_VERSION::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.TLM_VERSION._inner_timestamp)
}

// -------------------------------------------------------------------

// TIMESTAMP

// uint32 timestamp = 1;
inline void TIMESTAMP::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TIMESTAMP::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TIMESTAMP::timestamp() const {
  // @@protoc_insertion_point(field_get:primary.TIMESTAMP.timestamp)
  return _internal_timestamp();
}
inline void TIMESTAMP::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  timestamp_ = value;
}
inline void TIMESTAMP::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.TIMESTAMP.timestamp)
}

// uint64 _inner_timestamp = 2;
inline void TIMESTAMP::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TIMESTAMP::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TIMESTAMP::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.TIMESTAMP._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void TIMESTAMP::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void TIMESTAMP::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.TIMESTAMP._inner_timestamp)
}

// -------------------------------------------------------------------

// AMBIENT_TEMPERATURE

// sint32 temp = 1;
inline void AMBIENT_TEMPERATURE::clear_temp() {
  temp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AMBIENT_TEMPERATURE::_internal_temp() const {
  return temp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AMBIENT_TEMPERATURE::temp() const {
  // @@protoc_insertion_point(field_get:primary.AMBIENT_TEMPERATURE.temp)
  return _internal_temp();
}
inline void AMBIENT_TEMPERATURE::_internal_set_temp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  temp_ = value;
}
inline void AMBIENT_TEMPERATURE::set_temp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_temp(value);
  // @@protoc_insertion_point(field_set:primary.AMBIENT_TEMPERATURE.temp)
}

// uint64 _inner_timestamp = 2;
inline void AMBIENT_TEMPERATURE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AMBIENT_TEMPERATURE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AMBIENT_TEMPERATURE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.AMBIENT_TEMPERATURE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void AMBIENT_TEMPERATURE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void AMBIENT_TEMPERATURE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.AMBIENT_TEMPERATURE._inner_timestamp)
}

// -------------------------------------------------------------------

// DATA_LOGGER

// uint32 placeholder1 = 1;
inline void DATA_LOGGER::clear_placeholder1() {
  placeholder1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DATA_LOGGER::_internal_placeholder1() const {
  return placeholder1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DATA_LOGGER::placeholder1() const {
  // @@protoc_insertion_point(field_get:primary.DATA_LOGGER.placeholder1)
  return _internal_placeholder1();
}
inline void DATA_LOGGER::_internal_set_placeholder1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  placeholder1_ = value;
}
inline void DATA_LOGGER::set_placeholder1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_placeholder1(value);
  // @@protoc_insertion_point(field_set:primary.DATA_LOGGER.placeholder1)
}

// uint32 placeholder2 = 2;
inline void DATA_LOGGER::clear_placeholder2() {
  placeholder2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DATA_LOGGER::_internal_placeholder2() const {
  return placeholder2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DATA_LOGGER::placeholder2() const {
  // @@protoc_insertion_point(field_get:primary.DATA_LOGGER.placeholder2)
  return _internal_placeholder2();
}
inline void DATA_LOGGER::_internal_set_placeholder2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  placeholder2_ = value;
}
inline void DATA_LOGGER::set_placeholder2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_placeholder2(value);
  // @@protoc_insertion_point(field_set:primary.DATA_LOGGER.placeholder2)
}

// uint64 _inner_timestamp = 3;
inline void DATA_LOGGER::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DATA_LOGGER::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DATA_LOGGER::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.DATA_LOGGER._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void DATA_LOGGER::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void DATA_LOGGER::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.DATA_LOGGER._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_TLM_STATUS

// .primary.Toggle tlm_status = 1;
inline void SET_TLM_STATUS::clear_tlm_status() {
  tlm_status_ = 0;
}
inline ::primary::Toggle SET_TLM_STATUS::_internal_tlm_status() const {
  return static_cast< ::primary::Toggle >(tlm_status_);
}
inline ::primary::Toggle SET_TLM_STATUS::tlm_status() const {
  // @@protoc_insertion_point(field_get:primary.SET_TLM_STATUS.tlm_status)
  return _internal_tlm_status();
}
inline void SET_TLM_STATUS::_internal_set_tlm_status(::primary::Toggle value) {
  
  tlm_status_ = value;
}
inline void SET_TLM_STATUS::set_tlm_status(::primary::Toggle value) {
  _internal_set_tlm_status(value);
  // @@protoc_insertion_point(field_set:primary.SET_TLM_STATUS.tlm_status)
}

// uint64 _inner_timestamp = 2;
inline void SET_TLM_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_TLM_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_TLM_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_TLM_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_TLM_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_TLM_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_TLM_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// TLM_STATUS

// .primary.Toggle tlm_status = 1;
inline void TLM_STATUS::clear_tlm_status() {
  tlm_status_ = 0;
}
inline ::primary::Toggle TLM_STATUS::_internal_tlm_status() const {
  return static_cast< ::primary::Toggle >(tlm_status_);
}
inline ::primary::Toggle TLM_STATUS::tlm_status() const {
  // @@protoc_insertion_point(field_get:primary.TLM_STATUS.tlm_status)
  return _internal_tlm_status();
}
inline void TLM_STATUS::_internal_set_tlm_status(::primary::Toggle value) {
  
  tlm_status_ = value;
}
inline void TLM_STATUS::set_tlm_status(::primary::Toggle value) {
  _internal_set_tlm_status(value);
  // @@protoc_insertion_point(field_set:primary.TLM_STATUS.tlm_status)
}

// uint64 _inner_timestamp = 2;
inline void TLM_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TLM_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TLM_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.TLM_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void TLM_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void TLM_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.TLM_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// STEER_SYSTEM_STATUS

// uint32 soc_temp = 1;
inline void STEER_SYSTEM_STATUS::clear_soc_temp() {
  soc_temp_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 STEER_SYSTEM_STATUS::_internal_soc_temp() const {
  return soc_temp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 STEER_SYSTEM_STATUS::soc_temp() const {
  // @@protoc_insertion_point(field_get:primary.STEER_SYSTEM_STATUS.soc_temp)
  return _internal_soc_temp();
}
inline void STEER_SYSTEM_STATUS::_internal_set_soc_temp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  soc_temp_ = value;
}
inline void STEER_SYSTEM_STATUS::set_soc_temp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_soc_temp(value);
  // @@protoc_insertion_point(field_set:primary.STEER_SYSTEM_STATUS.soc_temp)
}

// uint64 _inner_timestamp = 2;
inline void STEER_SYSTEM_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 STEER_SYSTEM_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 STEER_SYSTEM_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.STEER_SYSTEM_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void STEER_SYSTEM_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void STEER_SYSTEM_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.STEER_SYSTEM_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_VOLTAGE

// float pack_voltage = 1;
inline void HV_VOLTAGE::clear_pack_voltage() {
  pack_voltage_ = 0;
}
inline float HV_VOLTAGE::_internal_pack_voltage() const {
  return pack_voltage_;
}
inline float HV_VOLTAGE::pack_voltage() const {
  // @@protoc_insertion_point(field_get:primary.HV_VOLTAGE.pack_voltage)
  return _internal_pack_voltage();
}
inline void HV_VOLTAGE::_internal_set_pack_voltage(float value) {
  
  pack_voltage_ = value;
}
inline void HV_VOLTAGE::set_pack_voltage(float value) {
  _internal_set_pack_voltage(value);
  // @@protoc_insertion_point(field_set:primary.HV_VOLTAGE.pack_voltage)
}

// float bus_voltage = 2;
inline void HV_VOLTAGE::clear_bus_voltage() {
  bus_voltage_ = 0;
}
inline float HV_VOLTAGE::_internal_bus_voltage() const {
  return bus_voltage_;
}
inline float HV_VOLTAGE::bus_voltage() const {
  // @@protoc_insertion_point(field_get:primary.HV_VOLTAGE.bus_voltage)
  return _internal_bus_voltage();
}
inline void HV_VOLTAGE::_internal_set_bus_voltage(float value) {
  
  bus_voltage_ = value;
}
inline void HV_VOLTAGE::set_bus_voltage(float value) {
  _internal_set_bus_voltage(value);
  // @@protoc_insertion_point(field_set:primary.HV_VOLTAGE.bus_voltage)
}

// float max_cell_voltage = 3;
inline void HV_VOLTAGE::clear_max_cell_voltage() {
  max_cell_voltage_ = 0;
}
inline float HV_VOLTAGE::_internal_max_cell_voltage() const {
  return max_cell_voltage_;
}
inline float HV_VOLTAGE::max_cell_voltage() const {
  // @@protoc_insertion_point(field_get:primary.HV_VOLTAGE.max_cell_voltage)
  return _internal_max_cell_voltage();
}
inline void HV_VOLTAGE::_internal_set_max_cell_voltage(float value) {
  
  max_cell_voltage_ = value;
}
inline void HV_VOLTAGE::set_max_cell_voltage(float value) {
  _internal_set_max_cell_voltage(value);
  // @@protoc_insertion_point(field_set:primary.HV_VOLTAGE.max_cell_voltage)
}

// float min_cell_voltage = 4;
inline void HV_VOLTAGE::clear_min_cell_voltage() {
  min_cell_voltage_ = 0;
}
inline float HV_VOLTAGE::_internal_min_cell_voltage() const {
  return min_cell_voltage_;
}
inline float HV_VOLTAGE::min_cell_voltage() const {
  // @@protoc_insertion_point(field_get:primary.HV_VOLTAGE.min_cell_voltage)
  return _internal_min_cell_voltage();
}
inline void HV_VOLTAGE::_internal_set_min_cell_voltage(float value) {
  
  min_cell_voltage_ = value;
}
inline void HV_VOLTAGE::set_min_cell_voltage(float value) {
  _internal_set_min_cell_voltage(value);
  // @@protoc_insertion_point(field_set:primary.HV_VOLTAGE.min_cell_voltage)
}

// uint64 _inner_timestamp = 5;
inline void HV_VOLTAGE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_VOLTAGE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_VOLTAGE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_VOLTAGE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_VOLTAGE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_VOLTAGE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_VOLTAGE._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_CURRENT

// float current = 1;
inline void HV_CURRENT::clear_current() {
  current_ = 0;
}
inline float HV_CURRENT::_internal_current() const {
  return current_;
}
inline float HV_CURRENT::current() const {
  // @@protoc_insertion_point(field_get:primary.HV_CURRENT.current)
  return _internal_current();
}
inline void HV_CURRENT::_internal_set_current(float value) {
  
  current_ = value;
}
inline void HV_CURRENT::set_current(float value) {
  _internal_set_current(value);
  // @@protoc_insertion_point(field_set:primary.HV_CURRENT.current)
}

// float power = 2;
inline void HV_CURRENT::clear_power() {
  power_ = 0;
}
inline float HV_CURRENT::_internal_power() const {
  return power_;
}
inline float HV_CURRENT::power() const {
  // @@protoc_insertion_point(field_get:primary.HV_CURRENT.power)
  return _internal_power();
}
inline void HV_CURRENT::_internal_set_power(float value) {
  
  power_ = value;
}
inline void HV_CURRENT::set_power(float value) {
  _internal_set_power(value);
  // @@protoc_insertion_point(field_set:primary.HV_CURRENT.power)
}

// float energy = 3;
inline void HV_CURRENT::clear_energy() {
  energy_ = 0;
}
inline float HV_CURRENT::_internal_energy() const {
  return energy_;
}
inline float HV_CURRENT::energy() const {
  // @@protoc_insertion_point(field_get:primary.HV_CURRENT.energy)
  return _internal_energy();
}
inline void HV_CURRENT::_internal_set_energy(float value) {
  
  energy_ = value;
}
inline void HV_CURRENT::set_energy(float value) {
  _internal_set_energy(value);
  // @@protoc_insertion_point(field_set:primary.HV_CURRENT.energy)
}

// float soc = 4;
inline void HV_CURRENT::clear_soc() {
  soc_ = 0;
}
inline float HV_CURRENT::_internal_soc() const {
  return soc_;
}
inline float HV_CURRENT::soc() const {
  // @@protoc_insertion_point(field_get:primary.HV_CURRENT.soc)
  return _internal_soc();
}
inline void HV_CURRENT::_internal_set_soc(float value) {
  
  soc_ = value;
}
inline void HV_CURRENT::set_soc(float value) {
  _internal_set_soc(value);
  // @@protoc_insertion_point(field_set:primary.HV_CURRENT.soc)
}

// uint64 _inner_timestamp = 5;
inline void HV_CURRENT::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CURRENT::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CURRENT::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_CURRENT._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_CURRENT::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_CURRENT::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_CURRENT._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_TEMP

// float average_temp = 1;
inline void HV_TEMP::clear_average_temp() {
  average_temp_ = 0;
}
inline float HV_TEMP::_internal_average_temp() const {
  return average_temp_;
}
inline float HV_TEMP::average_temp() const {
  // @@protoc_insertion_point(field_get:primary.HV_TEMP.average_temp)
  return _internal_average_temp();
}
inline void HV_TEMP::_internal_set_average_temp(float value) {
  
  average_temp_ = value;
}
inline void HV_TEMP::set_average_temp(float value) {
  _internal_set_average_temp(value);
  // @@protoc_insertion_point(field_set:primary.HV_TEMP.average_temp)
}

// float max_temp = 2;
inline void HV_TEMP::clear_max_temp() {
  max_temp_ = 0;
}
inline float HV_TEMP::_internal_max_temp() const {
  return max_temp_;
}
inline float HV_TEMP::max_temp() const {
  // @@protoc_insertion_point(field_get:primary.HV_TEMP.max_temp)
  return _internal_max_temp();
}
inline void HV_TEMP::_internal_set_max_temp(float value) {
  
  max_temp_ = value;
}
inline void HV_TEMP::set_max_temp(float value) {
  _internal_set_max_temp(value);
  // @@protoc_insertion_point(field_set:primary.HV_TEMP.max_temp)
}

// float min_temp = 3;
inline void HV_TEMP::clear_min_temp() {
  min_temp_ = 0;
}
inline float HV_TEMP::_internal_min_temp() const {
  return min_temp_;
}
inline float HV_TEMP::min_temp() const {
  // @@protoc_insertion_point(field_get:primary.HV_TEMP.min_temp)
  return _internal_min_temp();
}
inline void HV_TEMP::_internal_set_min_temp(float value) {
  
  min_temp_ = value;
}
inline void HV_TEMP::set_min_temp(float value) {
  _internal_set_min_temp(value);
  // @@protoc_insertion_point(field_set:primary.HV_TEMP.min_temp)
}

// uint64 _inner_timestamp = 4;
inline void HV_TEMP::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_TEMP::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_TEMP::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_TEMP._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_TEMP::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_TEMP::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_TEMP._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_ERRORS

// uint32 warnings = 1;
inline void HV_ERRORS::clear_warnings() {
  warnings_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_ERRORS::_internal_warnings() const {
  return warnings_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_ERRORS::warnings() const {
  // @@protoc_insertion_point(field_get:primary.HV_ERRORS.warnings)
  return _internal_warnings();
}
inline void HV_ERRORS::_internal_set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  warnings_ = value;
}
inline void HV_ERRORS::set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_warnings(value);
  // @@protoc_insertion_point(field_set:primary.HV_ERRORS.warnings)
}

// uint32 errors = 2;
inline void HV_ERRORS::clear_errors() {
  errors_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_ERRORS::_internal_errors() const {
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_ERRORS::errors() const {
  // @@protoc_insertion_point(field_get:primary.HV_ERRORS.errors)
  return _internal_errors();
}
inline void HV_ERRORS::_internal_set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  errors_ = value;
}
inline void HV_ERRORS::set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errors(value);
  // @@protoc_insertion_point(field_set:primary.HV_ERRORS.errors)
}

// uint64 _inner_timestamp = 3;
inline void HV_ERRORS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_ERRORS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_ERRORS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_ERRORS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_ERRORS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_ERRORS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_ERRORS._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_CAN_FORWARD

// .primary.Toggle can_forward_set = 1;
inline void HV_CAN_FORWARD::clear_can_forward_set() {
  can_forward_set_ = 0;
}
inline ::primary::Toggle HV_CAN_FORWARD::_internal_can_forward_set() const {
  return static_cast< ::primary::Toggle >(can_forward_set_);
}
inline ::primary::Toggle HV_CAN_FORWARD::can_forward_set() const {
  // @@protoc_insertion_point(field_get:primary.HV_CAN_FORWARD.can_forward_set)
  return _internal_can_forward_set();
}
inline void HV_CAN_FORWARD::_internal_set_can_forward_set(::primary::Toggle value) {
  
  can_forward_set_ = value;
}
inline void HV_CAN_FORWARD::set_can_forward_set(::primary::Toggle value) {
  _internal_set_can_forward_set(value);
  // @@protoc_insertion_point(field_set:primary.HV_CAN_FORWARD.can_forward_set)
}

// uint64 _inner_timestamp = 2;
inline void HV_CAN_FORWARD::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CAN_FORWARD::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CAN_FORWARD::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_CAN_FORWARD._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_CAN_FORWARD::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_CAN_FORWARD::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_CAN_FORWARD._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_FANS_OVERRIDE

// .primary.Toggle fans_override = 1;
inline void HV_FANS_OVERRIDE::clear_fans_override() {
  fans_override_ = 0;
}
inline ::primary::Toggle HV_FANS_OVERRIDE::_internal_fans_override() const {
  return static_cast< ::primary::Toggle >(fans_override_);
}
inline ::primary::Toggle HV_FANS_OVERRIDE::fans_override() const {
  // @@protoc_insertion_point(field_get:primary.HV_FANS_OVERRIDE.fans_override)
  return _internal_fans_override();
}
inline void HV_FANS_OVERRIDE::_internal_set_fans_override(::primary::Toggle value) {
  
  fans_override_ = value;
}
inline void HV_FANS_OVERRIDE::set_fans_override(::primary::Toggle value) {
  _internal_set_fans_override(value);
  // @@protoc_insertion_point(field_set:primary.HV_FANS_OVERRIDE.fans_override)
}

// float fans_speed = 2;
inline void HV_FANS_OVERRIDE::clear_fans_speed() {
  fans_speed_ = 0;
}
inline float HV_FANS_OVERRIDE::_internal_fans_speed() const {
  return fans_speed_;
}
inline float HV_FANS_OVERRIDE::fans_speed() const {
  // @@protoc_insertion_point(field_get:primary.HV_FANS_OVERRIDE.fans_speed)
  return _internal_fans_speed();
}
inline void HV_FANS_OVERRIDE::_internal_set_fans_speed(float value) {
  
  fans_speed_ = value;
}
inline void HV_FANS_OVERRIDE::set_fans_speed(float value) {
  _internal_set_fans_speed(value);
  // @@protoc_insertion_point(field_set:primary.HV_FANS_OVERRIDE.fans_speed)
}

// uint64 _inner_timestamp = 3;
inline void HV_FANS_OVERRIDE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_FANS_OVERRIDE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_FANS_OVERRIDE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_FANS_OVERRIDE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_FANS_OVERRIDE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_FANS_OVERRIDE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_FANS_OVERRIDE._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_CAN_FORWARD_STATUS

// .primary.Toggle can_forward_status = 1;
inline void HV_CAN_FORWARD_STATUS::clear_can_forward_status() {
  can_forward_status_ = 0;
}
inline ::primary::Toggle HV_CAN_FORWARD_STATUS::_internal_can_forward_status() const {
  return static_cast< ::primary::Toggle >(can_forward_status_);
}
inline ::primary::Toggle HV_CAN_FORWARD_STATUS::can_forward_status() const {
  // @@protoc_insertion_point(field_get:primary.HV_CAN_FORWARD_STATUS.can_forward_status)
  return _internal_can_forward_status();
}
inline void HV_CAN_FORWARD_STATUS::_internal_set_can_forward_status(::primary::Toggle value) {
  
  can_forward_status_ = value;
}
inline void HV_CAN_FORWARD_STATUS::set_can_forward_status(::primary::Toggle value) {
  _internal_set_can_forward_status(value);
  // @@protoc_insertion_point(field_set:primary.HV_CAN_FORWARD_STATUS.can_forward_status)
}

// uint64 _inner_timestamp = 2;
inline void HV_CAN_FORWARD_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CAN_FORWARD_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CAN_FORWARD_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_CAN_FORWARD_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_CAN_FORWARD_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_CAN_FORWARD_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_CAN_FORWARD_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_FANS_OVERRIDE_STATUS

// .primary.Toggle fans_override = 1;
inline void HV_FANS_OVERRIDE_STATUS::clear_fans_override() {
  fans_override_ = 0;
}
inline ::primary::Toggle HV_FANS_OVERRIDE_STATUS::_internal_fans_override() const {
  return static_cast< ::primary::Toggle >(fans_override_);
}
inline ::primary::Toggle HV_FANS_OVERRIDE_STATUS::fans_override() const {
  // @@protoc_insertion_point(field_get:primary.HV_FANS_OVERRIDE_STATUS.fans_override)
  return _internal_fans_override();
}
inline void HV_FANS_OVERRIDE_STATUS::_internal_set_fans_override(::primary::Toggle value) {
  
  fans_override_ = value;
}
inline void HV_FANS_OVERRIDE_STATUS::set_fans_override(::primary::Toggle value) {
  _internal_set_fans_override(value);
  // @@protoc_insertion_point(field_set:primary.HV_FANS_OVERRIDE_STATUS.fans_override)
}

// float fans_speed = 2;
inline void HV_FANS_OVERRIDE_STATUS::clear_fans_speed() {
  fans_speed_ = 0;
}
inline float HV_FANS_OVERRIDE_STATUS::_internal_fans_speed() const {
  return fans_speed_;
}
inline float HV_FANS_OVERRIDE_STATUS::fans_speed() const {
  // @@protoc_insertion_point(field_get:primary.HV_FANS_OVERRIDE_STATUS.fans_speed)
  return _internal_fans_speed();
}
inline void HV_FANS_OVERRIDE_STATUS::_internal_set_fans_speed(float value) {
  
  fans_speed_ = value;
}
inline void HV_FANS_OVERRIDE_STATUS::set_fans_speed(float value) {
  _internal_set_fans_speed(value);
  // @@protoc_insertion_point(field_set:primary.HV_FANS_OVERRIDE_STATUS.fans_speed)
}

// uint64 _inner_timestamp = 3;
inline void HV_FANS_OVERRIDE_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_FANS_OVERRIDE_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_FANS_OVERRIDE_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_FANS_OVERRIDE_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_FANS_OVERRIDE_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_FANS_OVERRIDE_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_FANS_OVERRIDE_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_FEEDBACKS_STATUS

// uint32 feedbacks_status = 1;
inline void HV_FEEDBACKS_STATUS::clear_feedbacks_status() {
  feedbacks_status_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_FEEDBACKS_STATUS::_internal_feedbacks_status() const {
  return feedbacks_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_FEEDBACKS_STATUS::feedbacks_status() const {
  // @@protoc_insertion_point(field_get:primary.HV_FEEDBACKS_STATUS.feedbacks_status)
  return _internal_feedbacks_status();
}
inline void HV_FEEDBACKS_STATUS::_internal_set_feedbacks_status(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  feedbacks_status_ = value;
}
inline void HV_FEEDBACKS_STATUS::set_feedbacks_status(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_feedbacks_status(value);
  // @@protoc_insertion_point(field_set:primary.HV_FEEDBACKS_STATUS.feedbacks_status)
}

// uint32 is_circuitry_error = 2;
inline void HV_FEEDBACKS_STATUS::clear_is_circuitry_error() {
  is_circuitry_error_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_FEEDBACKS_STATUS::_internal_is_circuitry_error() const {
  return is_circuitry_error_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_FEEDBACKS_STATUS::is_circuitry_error() const {
  // @@protoc_insertion_point(field_get:primary.HV_FEEDBACKS_STATUS.is_circuitry_error)
  return _internal_is_circuitry_error();
}
inline void HV_FEEDBACKS_STATUS::_internal_set_is_circuitry_error(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  is_circuitry_error_ = value;
}
inline void HV_FEEDBACKS_STATUS::set_is_circuitry_error(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_is_circuitry_error(value);
  // @@protoc_insertion_point(field_set:primary.HV_FEEDBACKS_STATUS.is_circuitry_error)
}

// uint64 _inner_timestamp = 3;
inline void HV_FEEDBACKS_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_FEEDBACKS_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_FEEDBACKS_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_FEEDBACKS_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_FEEDBACKS_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_FEEDBACKS_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_FEEDBACKS_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_IMD_STATUS

// bool imd_fault = 1;
inline void HV_IMD_STATUS::clear_imd_fault() {
  imd_fault_ = false;
}
inline bool HV_IMD_STATUS::_internal_imd_fault() const {
  return imd_fault_;
}
inline bool HV_IMD_STATUS::imd_fault() const {
  // @@protoc_insertion_point(field_get:primary.HV_IMD_STATUS.imd_fault)
  return _internal_imd_fault();
}
inline void HV_IMD_STATUS::_internal_set_imd_fault(bool value) {
  
  imd_fault_ = value;
}
inline void HV_IMD_STATUS::set_imd_fault(bool value) {
  _internal_set_imd_fault(value);
  // @@protoc_insertion_point(field_set:primary.HV_IMD_STATUS.imd_fault)
}

// .primary.ImdStatus imd_status = 2;
inline void HV_IMD_STATUS::clear_imd_status() {
  imd_status_ = 0;
}
inline ::primary::ImdStatus HV_IMD_STATUS::_internal_imd_status() const {
  return static_cast< ::primary::ImdStatus >(imd_status_);
}
inline ::primary::ImdStatus HV_IMD_STATUS::imd_status() const {
  // @@protoc_insertion_point(field_get:primary.HV_IMD_STATUS.imd_status)
  return _internal_imd_status();
}
inline void HV_IMD_STATUS::_internal_set_imd_status(::primary::ImdStatus value) {
  
  imd_status_ = value;
}
inline void HV_IMD_STATUS::set_imd_status(::primary::ImdStatus value) {
  _internal_set_imd_status(value);
  // @@protoc_insertion_point(field_set:primary.HV_IMD_STATUS.imd_status)
}

// sint32 imd_info = 3;
inline void HV_IMD_STATUS::clear_imd_info() {
  imd_info_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HV_IMD_STATUS::_internal_imd_info() const {
  return imd_info_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HV_IMD_STATUS::imd_info() const {
  // @@protoc_insertion_point(field_get:primary.HV_IMD_STATUS.imd_info)
  return _internal_imd_info();
}
inline void HV_IMD_STATUS::_internal_set_imd_info(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  imd_info_ = value;
}
inline void HV_IMD_STATUS::set_imd_info(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_imd_info(value);
  // @@protoc_insertion_point(field_set:primary.HV_IMD_STATUS.imd_info)
}

// uint64 _inner_timestamp = 4;
inline void HV_IMD_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_IMD_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_IMD_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_IMD_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_IMD_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_IMD_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_IMD_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// TS_STATUS_DAS

// .primary.TsStatus ts_status = 1;
inline void TS_STATUS_DAS::clear_ts_status() {
  ts_status_ = 0;
}
inline ::primary::TsStatus TS_STATUS_DAS::_internal_ts_status() const {
  return static_cast< ::primary::TsStatus >(ts_status_);
}
inline ::primary::TsStatus TS_STATUS_DAS::ts_status() const {
  // @@protoc_insertion_point(field_get:primary.TS_STATUS_DAS.ts_status)
  return _internal_ts_status();
}
inline void TS_STATUS_DAS::_internal_set_ts_status(::primary::TsStatus value) {
  
  ts_status_ = value;
}
inline void TS_STATUS_DAS::set_ts_status(::primary::TsStatus value) {
  _internal_set_ts_status(value);
  // @@protoc_insertion_point(field_set:primary.TS_STATUS_DAS.ts_status)
}

// uint64 _inner_timestamp = 2;
inline void TS_STATUS_DAS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TS_STATUS_DAS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TS_STATUS_DAS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.TS_STATUS_DAS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void TS_STATUS_DAS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void TS_STATUS_DAS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.TS_STATUS_DAS._inner_timestamp)
}

// -------------------------------------------------------------------

// TS_STATUS_STEER

// .primary.TsStatus ts_status = 1;
inline void TS_STATUS_STEER::clear_ts_status() {
  ts_status_ = 0;
}
inline ::primary::TsStatus TS_STATUS_STEER::_internal_ts_status() const {
  return static_cast< ::primary::TsStatus >(ts_status_);
}
inline ::primary::TsStatus TS_STATUS_STEER::ts_status() const {
  // @@protoc_insertion_point(field_get:primary.TS_STATUS_STEER.ts_status)
  return _internal_ts_status();
}
inline void TS_STATUS_STEER::_internal_set_ts_status(::primary::TsStatus value) {
  
  ts_status_ = value;
}
inline void TS_STATUS_STEER::set_ts_status(::primary::TsStatus value) {
  _internal_set_ts_status(value);
  // @@protoc_insertion_point(field_set:primary.TS_STATUS_STEER.ts_status)
}

// uint64 _inner_timestamp = 2;
inline void TS_STATUS_STEER::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TS_STATUS_STEER::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TS_STATUS_STEER::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.TS_STATUS_STEER._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void TS_STATUS_STEER::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void TS_STATUS_STEER::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.TS_STATUS_STEER._inner_timestamp)
}

// -------------------------------------------------------------------

// TS_STATUS_HANDCART

// .primary.TsStatus ts_status = 1;
inline void TS_STATUS_HANDCART::clear_ts_status() {
  ts_status_ = 0;
}
inline ::primary::TsStatus TS_STATUS_HANDCART::_internal_ts_status() const {
  return static_cast< ::primary::TsStatus >(ts_status_);
}
inline ::primary::TsStatus TS_STATUS_HANDCART::ts_status() const {
  // @@protoc_insertion_point(field_get:primary.TS_STATUS_HANDCART.ts_status)
  return _internal_ts_status();
}
inline void TS_STATUS_HANDCART::_internal_set_ts_status(::primary::TsStatus value) {
  
  ts_status_ = value;
}
inline void TS_STATUS_HANDCART::set_ts_status(::primary::TsStatus value) {
  _internal_set_ts_status(value);
  // @@protoc_insertion_point(field_set:primary.TS_STATUS_HANDCART.ts_status)
}

// uint64 _inner_timestamp = 2;
inline void TS_STATUS_HANDCART::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TS_STATUS_HANDCART::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TS_STATUS_HANDCART::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.TS_STATUS_HANDCART._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void TS_STATUS_HANDCART::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void TS_STATUS_HANDCART::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.TS_STATUS_HANDCART._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_TS_STATUS_DAS

// .primary.Toggle ts_status_set = 1;
inline void SET_TS_STATUS_DAS::clear_ts_status_set() {
  ts_status_set_ = 0;
}
inline ::primary::Toggle SET_TS_STATUS_DAS::_internal_ts_status_set() const {
  return static_cast< ::primary::Toggle >(ts_status_set_);
}
inline ::primary::Toggle SET_TS_STATUS_DAS::ts_status_set() const {
  // @@protoc_insertion_point(field_get:primary.SET_TS_STATUS_DAS.ts_status_set)
  return _internal_ts_status_set();
}
inline void SET_TS_STATUS_DAS::_internal_set_ts_status_set(::primary::Toggle value) {
  
  ts_status_set_ = value;
}
inline void SET_TS_STATUS_DAS::set_ts_status_set(::primary::Toggle value) {
  _internal_set_ts_status_set(value);
  // @@protoc_insertion_point(field_set:primary.SET_TS_STATUS_DAS.ts_status_set)
}

// uint64 _inner_timestamp = 2;
inline void SET_TS_STATUS_DAS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_TS_STATUS_DAS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_TS_STATUS_DAS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_TS_STATUS_DAS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_TS_STATUS_DAS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_TS_STATUS_DAS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_TS_STATUS_DAS._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_TS_STATUS_HANDCART

// .primary.Toggle ts_status_set = 1;
inline void SET_TS_STATUS_HANDCART::clear_ts_status_set() {
  ts_status_set_ = 0;
}
inline ::primary::Toggle SET_TS_STATUS_HANDCART::_internal_ts_status_set() const {
  return static_cast< ::primary::Toggle >(ts_status_set_);
}
inline ::primary::Toggle SET_TS_STATUS_HANDCART::ts_status_set() const {
  // @@protoc_insertion_point(field_get:primary.SET_TS_STATUS_HANDCART.ts_status_set)
  return _internal_ts_status_set();
}
inline void SET_TS_STATUS_HANDCART::_internal_set_ts_status_set(::primary::Toggle value) {
  
  ts_status_set_ = value;
}
inline void SET_TS_STATUS_HANDCART::set_ts_status_set(::primary::Toggle value) {
  _internal_set_ts_status_set(value);
  // @@protoc_insertion_point(field_set:primary.SET_TS_STATUS_HANDCART.ts_status_set)
}

// uint64 _inner_timestamp = 2;
inline void SET_TS_STATUS_HANDCART::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_TS_STATUS_HANDCART::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_TS_STATUS_HANDCART::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_TS_STATUS_HANDCART._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_TS_STATUS_HANDCART::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_TS_STATUS_HANDCART::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_TS_STATUS_HANDCART._inner_timestamp)
}

// -------------------------------------------------------------------

// STEER_STATUS

// float map_pw = 1;
inline void STEER_STATUS::clear_map_pw() {
  map_pw_ = 0;
}
inline float STEER_STATUS::_internal_map_pw() const {
  return map_pw_;
}
inline float STEER_STATUS::map_pw() const {
  // @@protoc_insertion_point(field_get:primary.STEER_STATUS.map_pw)
  return _internal_map_pw();
}
inline void STEER_STATUS::_internal_set_map_pw(float value) {
  
  map_pw_ = value;
}
inline void STEER_STATUS::set_map_pw(float value) {
  _internal_set_map_pw(value);
  // @@protoc_insertion_point(field_set:primary.STEER_STATUS.map_pw)
}

// float map_sc = 2;
inline void STEER_STATUS::clear_map_sc() {
  map_sc_ = 0;
}
inline float STEER_STATUS::_internal_map_sc() const {
  return map_sc_;
}
inline float STEER_STATUS::map_sc() const {
  // @@protoc_insertion_point(field_get:primary.STEER_STATUS.map_sc)
  return _internal_map_sc();
}
inline void STEER_STATUS::_internal_set_map_sc(float value) {
  
  map_sc_ = value;
}
inline void STEER_STATUS::set_map_sc(float value) {
  _internal_set_map_sc(value);
  // @@protoc_insertion_point(field_set:primary.STEER_STATUS.map_sc)
}

// float map_tv = 3;
inline void STEER_STATUS::clear_map_tv() {
  map_tv_ = 0;
}
inline float STEER_STATUS::_internal_map_tv() const {
  return map_tv_;
}
inline float STEER_STATUS::map_tv() const {
  // @@protoc_insertion_point(field_get:primary.STEER_STATUS.map_tv)
  return _internal_map_tv();
}
inline void STEER_STATUS::_internal_set_map_tv(float value) {
  
  map_tv_ = value;
}
inline void STEER_STATUS::set_map_tv(float value) {
  _internal_set_map_tv(value);
  // @@protoc_insertion_point(field_set:primary.STEER_STATUS.map_tv)
}

// uint64 _inner_timestamp = 4;
inline void STEER_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 STEER_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 STEER_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.STEER_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void STEER_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void STEER_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.STEER_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_CAR_STATUS

// .primary.SetCarStatus car_status_set = 1;
inline void SET_CAR_STATUS::clear_car_status_set() {
  car_status_set_ = 0;
}
inline ::primary::SetCarStatus SET_CAR_STATUS::_internal_car_status_set() const {
  return static_cast< ::primary::SetCarStatus >(car_status_set_);
}
inline ::primary::SetCarStatus SET_CAR_STATUS::car_status_set() const {
  // @@protoc_insertion_point(field_get:primary.SET_CAR_STATUS.car_status_set)
  return _internal_car_status_set();
}
inline void SET_CAR_STATUS::_internal_set_car_status_set(::primary::SetCarStatus value) {
  
  car_status_set_ = value;
}
inline void SET_CAR_STATUS::set_car_status_set(::primary::SetCarStatus value) {
  _internal_set_car_status_set(value);
  // @@protoc_insertion_point(field_set:primary.SET_CAR_STATUS.car_status_set)
}

// uint64 _inner_timestamp = 2;
inline void SET_CAR_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_CAR_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_CAR_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_CAR_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_CAR_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_CAR_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_CAR_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_PEDALS_RANGE

// .primary.Bound bound = 1;
inline void SET_PEDALS_RANGE::clear_bound() {
  bound_ = 0;
}
inline ::primary::Bound SET_PEDALS_RANGE::_internal_bound() const {
  return static_cast< ::primary::Bound >(bound_);
}
inline ::primary::Bound SET_PEDALS_RANGE::bound() const {
  // @@protoc_insertion_point(field_get:primary.SET_PEDALS_RANGE.bound)
  return _internal_bound();
}
inline void SET_PEDALS_RANGE::_internal_set_bound(::primary::Bound value) {
  
  bound_ = value;
}
inline void SET_PEDALS_RANGE::set_bound(::primary::Bound value) {
  _internal_set_bound(value);
  // @@protoc_insertion_point(field_set:primary.SET_PEDALS_RANGE.bound)
}

// .primary.Pedal pedal = 2;
inline void SET_PEDALS_RANGE::clear_pedal() {
  pedal_ = 0;
}
inline ::primary::Pedal SET_PEDALS_RANGE::_internal_pedal() const {
  return static_cast< ::primary::Pedal >(pedal_);
}
inline ::primary::Pedal SET_PEDALS_RANGE::pedal() const {
  // @@protoc_insertion_point(field_get:primary.SET_PEDALS_RANGE.pedal)
  return _internal_pedal();
}
inline void SET_PEDALS_RANGE::_internal_set_pedal(::primary::Pedal value) {
  
  pedal_ = value;
}
inline void SET_PEDALS_RANGE::set_pedal(::primary::Pedal value) {
  _internal_set_pedal(value);
  // @@protoc_insertion_point(field_set:primary.SET_PEDALS_RANGE.pedal)
}

// uint64 _inner_timestamp = 3;
inline void SET_PEDALS_RANGE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_PEDALS_RANGE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_PEDALS_RANGE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_PEDALS_RANGE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_PEDALS_RANGE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_PEDALS_RANGE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_PEDALS_RANGE._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_STEERING_ANGLE_RANGE

// .primary.Bound bound = 1;
inline void SET_STEERING_ANGLE_RANGE::clear_bound() {
  bound_ = 0;
}
inline ::primary::Bound SET_STEERING_ANGLE_RANGE::_internal_bound() const {
  return static_cast< ::primary::Bound >(bound_);
}
inline ::primary::Bound SET_STEERING_ANGLE_RANGE::bound() const {
  // @@protoc_insertion_point(field_get:primary.SET_STEERING_ANGLE_RANGE.bound)
  return _internal_bound();
}
inline void SET_STEERING_ANGLE_RANGE::_internal_set_bound(::primary::Bound value) {
  
  bound_ = value;
}
inline void SET_STEERING_ANGLE_RANGE::set_bound(::primary::Bound value) {
  _internal_set_bound(value);
  // @@protoc_insertion_point(field_set:primary.SET_STEERING_ANGLE_RANGE.bound)
}

// uint64 _inner_timestamp = 2;
inline void SET_STEERING_ANGLE_RANGE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_STEERING_ANGLE_RANGE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_STEERING_ANGLE_RANGE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_STEERING_ANGLE_RANGE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_STEERING_ANGLE_RANGE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_STEERING_ANGLE_RANGE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_STEERING_ANGLE_RANGE._inner_timestamp)
}

// -------------------------------------------------------------------

// CAR_STATUS

// .primary.InverterStatus inverter_l = 1;
inline void CAR_STATUS::clear_inverter_l() {
  inverter_l_ = 0;
}
inline ::primary::InverterStatus CAR_STATUS::_internal_inverter_l() const {
  return static_cast< ::primary::InverterStatus >(inverter_l_);
}
inline ::primary::InverterStatus CAR_STATUS::inverter_l() const {
  // @@protoc_insertion_point(field_get:primary.CAR_STATUS.inverter_l)
  return _internal_inverter_l();
}
inline void CAR_STATUS::_internal_set_inverter_l(::primary::InverterStatus value) {
  
  inverter_l_ = value;
}
inline void CAR_STATUS::set_inverter_l(::primary::InverterStatus value) {
  _internal_set_inverter_l(value);
  // @@protoc_insertion_point(field_set:primary.CAR_STATUS.inverter_l)
}

// .primary.InverterStatus inverter_r = 2;
inline void CAR_STATUS::clear_inverter_r() {
  inverter_r_ = 0;
}
inline ::primary::InverterStatus CAR_STATUS::_internal_inverter_r() const {
  return static_cast< ::primary::InverterStatus >(inverter_r_);
}
inline ::primary::InverterStatus CAR_STATUS::inverter_r() const {
  // @@protoc_insertion_point(field_get:primary.CAR_STATUS.inverter_r)
  return _internal_inverter_r();
}
inline void CAR_STATUS::_internal_set_inverter_r(::primary::InverterStatus value) {
  
  inverter_r_ = value;
}
inline void CAR_STATUS::set_inverter_r(::primary::InverterStatus value) {
  _internal_set_inverter_r(value);
  // @@protoc_insertion_point(field_set:primary.CAR_STATUS.inverter_r)
}

// .primary.CarStatus car_status = 3;
inline void CAR_STATUS::clear_car_status() {
  car_status_ = 0;
}
inline ::primary::CarStatus CAR_STATUS::_internal_car_status() const {
  return static_cast< ::primary::CarStatus >(car_status_);
}
inline ::primary::CarStatus CAR_STATUS::car_status() const {
  // @@protoc_insertion_point(field_get:primary.CAR_STATUS.car_status)
  return _internal_car_status();
}
inline void CAR_STATUS::_internal_set_car_status(::primary::CarStatus value) {
  
  car_status_ = value;
}
inline void CAR_STATUS::set_car_status(::primary::CarStatus value) {
  _internal_set_car_status(value);
  // @@protoc_insertion_point(field_set:primary.CAR_STATUS.car_status)
}

// uint64 _inner_timestamp = 4;
inline void CAR_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CAR_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CAR_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.CAR_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void CAR_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void CAR_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.CAR_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// DAS_ERRORS

// uint32 das_error = 1;
inline void DAS_ERRORS::clear_das_error() {
  das_error_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DAS_ERRORS::_internal_das_error() const {
  return das_error_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DAS_ERRORS::das_error() const {
  // @@protoc_insertion_point(field_get:primary.DAS_ERRORS.das_error)
  return _internal_das_error();
}
inline void DAS_ERRORS::_internal_set_das_error(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  das_error_ = value;
}
inline void DAS_ERRORS::set_das_error(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_das_error(value);
  // @@protoc_insertion_point(field_set:primary.DAS_ERRORS.das_error)
}

// uint64 _inner_timestamp = 2;
inline void DAS_ERRORS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DAS_ERRORS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DAS_ERRORS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.DAS_ERRORS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void DAS_ERRORS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void DAS_ERRORS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.DAS_ERRORS._inner_timestamp)
}

// -------------------------------------------------------------------

// LV_CURRENT

// float current = 1;
inline void LV_CURRENT::clear_current() {
  current_ = 0;
}
inline float LV_CURRENT::_internal_current() const {
  return current_;
}
inline float LV_CURRENT::current() const {
  // @@protoc_insertion_point(field_get:primary.LV_CURRENT.current)
  return _internal_current();
}
inline void LV_CURRENT::_internal_set_current(float value) {
  
  current_ = value;
}
inline void LV_CURRENT::set_current(float value) {
  _internal_set_current(value);
  // @@protoc_insertion_point(field_set:primary.LV_CURRENT.current)
}

// uint64 _inner_timestamp = 2;
inline void LV_CURRENT::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_CURRENT::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_CURRENT::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.LV_CURRENT._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void LV_CURRENT::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void LV_CURRENT::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.LV_CURRENT._inner_timestamp)
}

// -------------------------------------------------------------------

// LV_VOLTAGE

// float voltage_1 = 1;
inline void LV_VOLTAGE::clear_voltage_1() {
  voltage_1_ = 0;
}
inline float LV_VOLTAGE::_internal_voltage_1() const {
  return voltage_1_;
}
inline float LV_VOLTAGE::voltage_1() const {
  // @@protoc_insertion_point(field_get:primary.LV_VOLTAGE.voltage_1)
  return _internal_voltage_1();
}
inline void LV_VOLTAGE::_internal_set_voltage_1(float value) {
  
  voltage_1_ = value;
}
inline void LV_VOLTAGE::set_voltage_1(float value) {
  _internal_set_voltage_1(value);
  // @@protoc_insertion_point(field_set:primary.LV_VOLTAGE.voltage_1)
}

// float voltage_2 = 2;
inline void LV_VOLTAGE::clear_voltage_2() {
  voltage_2_ = 0;
}
inline float LV_VOLTAGE::_internal_voltage_2() const {
  return voltage_2_;
}
inline float LV_VOLTAGE::voltage_2() const {
  // @@protoc_insertion_point(field_get:primary.LV_VOLTAGE.voltage_2)
  return _internal_voltage_2();
}
inline void LV_VOLTAGE::_internal_set_voltage_2(float value) {
  
  voltage_2_ = value;
}
inline void LV_VOLTAGE::set_voltage_2(float value) {
  _internal_set_voltage_2(value);
  // @@protoc_insertion_point(field_set:primary.LV_VOLTAGE.voltage_2)
}

// float voltage_3 = 3;
inline void LV_VOLTAGE::clear_voltage_3() {
  voltage_3_ = 0;
}
inline float LV_VOLTAGE::_internal_voltage_3() const {
  return voltage_3_;
}
inline float LV_VOLTAGE::voltage_3() const {
  // @@protoc_insertion_point(field_get:primary.LV_VOLTAGE.voltage_3)
  return _internal_voltage_3();
}
inline void LV_VOLTAGE::_internal_set_voltage_3(float value) {
  
  voltage_3_ = value;
}
inline void LV_VOLTAGE::set_voltage_3(float value) {
  _internal_set_voltage_3(value);
  // @@protoc_insertion_point(field_set:primary.LV_VOLTAGE.voltage_3)
}

// float voltage_4 = 4;
inline void LV_VOLTAGE::clear_voltage_4() {
  voltage_4_ = 0;
}
inline float LV_VOLTAGE::_internal_voltage_4() const {
  return voltage_4_;
}
inline float LV_VOLTAGE::voltage_4() const {
  // @@protoc_insertion_point(field_get:primary.LV_VOLTAGE.voltage_4)
  return _internal_voltage_4();
}
inline void LV_VOLTAGE::_internal_set_voltage_4(float value) {
  
  voltage_4_ = value;
}
inline void LV_VOLTAGE::set_voltage_4(float value) {
  _internal_set_voltage_4(value);
  // @@protoc_insertion_point(field_set:primary.LV_VOLTAGE.voltage_4)
}

// uint64 _inner_timestamp = 5;
inline void LV_VOLTAGE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_VOLTAGE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_VOLTAGE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.LV_VOLTAGE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void LV_VOLTAGE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void LV_VOLTAGE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.LV_VOLTAGE._inner_timestamp)
}

// -------------------------------------------------------------------

// LV_TOTAL_VOLTAGE

// float total_voltage = 1;
inline void LV_TOTAL_VOLTAGE::clear_total_voltage() {
  total_voltage_ = 0;
}
inline float LV_TOTAL_VOLTAGE::_internal_total_voltage() const {
  return total_voltage_;
}
inline float LV_TOTAL_VOLTAGE::total_voltage() const {
  // @@protoc_insertion_point(field_get:primary.LV_TOTAL_VOLTAGE.total_voltage)
  return _internal_total_voltage();
}
inline void LV_TOTAL_VOLTAGE::_internal_set_total_voltage(float value) {
  
  total_voltage_ = value;
}
inline void LV_TOTAL_VOLTAGE::set_total_voltage(float value) {
  _internal_set_total_voltage(value);
  // @@protoc_insertion_point(field_set:primary.LV_TOTAL_VOLTAGE.total_voltage)
}

// uint64 _inner_timestamp = 2;
inline void LV_TOTAL_VOLTAGE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_TOTAL_VOLTAGE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_TOTAL_VOLTAGE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.LV_TOTAL_VOLTAGE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void LV_TOTAL_VOLTAGE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void LV_TOTAL_VOLTAGE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.LV_TOTAL_VOLTAGE._inner_timestamp)
}

// -------------------------------------------------------------------

// LV_TEMPERATURE

// float bp_temperature_1 = 1;
inline void LV_TEMPERATURE::clear_bp_temperature_1() {
  bp_temperature_1_ = 0;
}
inline float LV_TEMPERATURE::_internal_bp_temperature_1() const {
  return bp_temperature_1_;
}
inline float LV_TEMPERATURE::bp_temperature_1() const {
  // @@protoc_insertion_point(field_get:primary.LV_TEMPERATURE.bp_temperature_1)
  return _internal_bp_temperature_1();
}
inline void LV_TEMPERATURE::_internal_set_bp_temperature_1(float value) {
  
  bp_temperature_1_ = value;
}
inline void LV_TEMPERATURE::set_bp_temperature_1(float value) {
  _internal_set_bp_temperature_1(value);
  // @@protoc_insertion_point(field_set:primary.LV_TEMPERATURE.bp_temperature_1)
}

// float bp_temperature_2 = 2;
inline void LV_TEMPERATURE::clear_bp_temperature_2() {
  bp_temperature_2_ = 0;
}
inline float LV_TEMPERATURE::_internal_bp_temperature_2() const {
  return bp_temperature_2_;
}
inline float LV_TEMPERATURE::bp_temperature_2() const {
  // @@protoc_insertion_point(field_get:primary.LV_TEMPERATURE.bp_temperature_2)
  return _internal_bp_temperature_2();
}
inline void LV_TEMPERATURE::_internal_set_bp_temperature_2(float value) {
  
  bp_temperature_2_ = value;
}
inline void LV_TEMPERATURE::set_bp_temperature_2(float value) {
  _internal_set_bp_temperature_2(value);
  // @@protoc_insertion_point(field_set:primary.LV_TEMPERATURE.bp_temperature_2)
}

// float dcdc12_temperature = 3;
inline void LV_TEMPERATURE::clear_dcdc12_temperature() {
  dcdc12_temperature_ = 0;
}
inline float LV_TEMPERATURE::_internal_dcdc12_temperature() const {
  return dcdc12_temperature_;
}
inline float LV_TEMPERATURE::dcdc12_temperature() const {
  // @@protoc_insertion_point(field_get:primary.LV_TEMPERATURE.dcdc12_temperature)
  return _internal_dcdc12_temperature();
}
inline void LV_TEMPERATURE::_internal_set_dcdc12_temperature(float value) {
  
  dcdc12_temperature_ = value;
}
inline void LV_TEMPERATURE::set_dcdc12_temperature(float value) {
  _internal_set_dcdc12_temperature(value);
  // @@protoc_insertion_point(field_set:primary.LV_TEMPERATURE.dcdc12_temperature)
}

// float dcdc24_temperature = 4;
inline void LV_TEMPERATURE::clear_dcdc24_temperature() {
  dcdc24_temperature_ = 0;
}
inline float LV_TEMPERATURE::_internal_dcdc24_temperature() const {
  return dcdc24_temperature_;
}
inline float LV_TEMPERATURE::dcdc24_temperature() const {
  // @@protoc_insertion_point(field_get:primary.LV_TEMPERATURE.dcdc24_temperature)
  return _internal_dcdc24_temperature();
}
inline void LV_TEMPERATURE::_internal_set_dcdc24_temperature(float value) {
  
  dcdc24_temperature_ = value;
}
inline void LV_TEMPERATURE::set_dcdc24_temperature(float value) {
  _internal_set_dcdc24_temperature(value);
  // @@protoc_insertion_point(field_set:primary.LV_TEMPERATURE.dcdc24_temperature)
}

// uint64 _inner_timestamp = 5;
inline void LV_TEMPERATURE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_TEMPERATURE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_TEMPERATURE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.LV_TEMPERATURE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void LV_TEMPERATURE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void LV_TEMPERATURE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.LV_TEMPERATURE._inner_timestamp)
}

// -------------------------------------------------------------------

// COOLING_STATUS

// float radiators_speed = 1;
inline void COOLING_STATUS::clear_radiators_speed() {
  radiators_speed_ = 0;
}
inline float COOLING_STATUS::_internal_radiators_speed() const {
  return radiators_speed_;
}
inline float COOLING_STATUS::radiators_speed() const {
  // @@protoc_insertion_point(field_get:primary.COOLING_STATUS.radiators_speed)
  return _internal_radiators_speed();
}
inline void COOLING_STATUS::_internal_set_radiators_speed(float value) {
  
  radiators_speed_ = value;
}
inline void COOLING_STATUS::set_radiators_speed(float value) {
  _internal_set_radiators_speed(value);
  // @@protoc_insertion_point(field_set:primary.COOLING_STATUS.radiators_speed)
}

// float pumps_speed = 2;
inline void COOLING_STATUS::clear_pumps_speed() {
  pumps_speed_ = 0;
}
inline float COOLING_STATUS::_internal_pumps_speed() const {
  return pumps_speed_;
}
inline float COOLING_STATUS::pumps_speed() const {
  // @@protoc_insertion_point(field_get:primary.COOLING_STATUS.pumps_speed)
  return _internal_pumps_speed();
}
inline void COOLING_STATUS::_internal_set_pumps_speed(float value) {
  
  pumps_speed_ = value;
}
inline void COOLING_STATUS::set_pumps_speed(float value) {
  _internal_set_pumps_speed(value);
  // @@protoc_insertion_point(field_set:primary.COOLING_STATUS.pumps_speed)
}

// uint64 _inner_timestamp = 3;
inline void COOLING_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 COOLING_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 COOLING_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.COOLING_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void COOLING_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void COOLING_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.COOLING_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_RADIATOR_SPEED

// float radiators_speed = 1;
inline void SET_RADIATOR_SPEED::clear_radiators_speed() {
  radiators_speed_ = 0;
}
inline float SET_RADIATOR_SPEED::_internal_radiators_speed() const {
  return radiators_speed_;
}
inline float SET_RADIATOR_SPEED::radiators_speed() const {
  // @@protoc_insertion_point(field_get:primary.SET_RADIATOR_SPEED.radiators_speed)
  return _internal_radiators_speed();
}
inline void SET_RADIATOR_SPEED::_internal_set_radiators_speed(float value) {
  
  radiators_speed_ = value;
}
inline void SET_RADIATOR_SPEED::set_radiators_speed(float value) {
  _internal_set_radiators_speed(value);
  // @@protoc_insertion_point(field_set:primary.SET_RADIATOR_SPEED.radiators_speed)
}

// uint64 _inner_timestamp = 2;
inline void SET_RADIATOR_SPEED::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_RADIATOR_SPEED::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_RADIATOR_SPEED::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_RADIATOR_SPEED._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_RADIATOR_SPEED::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_RADIATOR_SPEED::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_RADIATOR_SPEED._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_PUMPS_SPEED

// float pumps_speed = 1;
inline void SET_PUMPS_SPEED::clear_pumps_speed() {
  pumps_speed_ = 0;
}
inline float SET_PUMPS_SPEED::_internal_pumps_speed() const {
  return pumps_speed_;
}
inline float SET_PUMPS_SPEED::pumps_speed() const {
  // @@protoc_insertion_point(field_get:primary.SET_PUMPS_SPEED.pumps_speed)
  return _internal_pumps_speed();
}
inline void SET_PUMPS_SPEED::_internal_set_pumps_speed(float value) {
  
  pumps_speed_ = value;
}
inline void SET_PUMPS_SPEED::set_pumps_speed(float value) {
  _internal_set_pumps_speed(value);
  // @@protoc_insertion_point(field_set:primary.SET_PUMPS_SPEED.pumps_speed)
}

// uint64 _inner_timestamp = 2;
inline void SET_PUMPS_SPEED::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_PUMPS_SPEED::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_PUMPS_SPEED::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_PUMPS_SPEED._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_PUMPS_SPEED::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_PUMPS_SPEED::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_PUMPS_SPEED._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_INVERTER_CONNECTION_STATUS

// .primary.Toggle status = 1;
inline void SET_INVERTER_CONNECTION_STATUS::clear_status() {
  status_ = 0;
}
inline ::primary::Toggle SET_INVERTER_CONNECTION_STATUS::_internal_status() const {
  return static_cast< ::primary::Toggle >(status_);
}
inline ::primary::Toggle SET_INVERTER_CONNECTION_STATUS::status() const {
  // @@protoc_insertion_point(field_get:primary.SET_INVERTER_CONNECTION_STATUS.status)
  return _internal_status();
}
inline void SET_INVERTER_CONNECTION_STATUS::_internal_set_status(::primary::Toggle value) {
  
  status_ = value;
}
inline void SET_INVERTER_CONNECTION_STATUS::set_status(::primary::Toggle value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:primary.SET_INVERTER_CONNECTION_STATUS.status)
}

// uint64 _inner_timestamp = 2;
inline void SET_INVERTER_CONNECTION_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_INVERTER_CONNECTION_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_INVERTER_CONNECTION_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_INVERTER_CONNECTION_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_INVERTER_CONNECTION_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_INVERTER_CONNECTION_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_INVERTER_CONNECTION_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// INVERTER_CONNECTION_STATUS

// .primary.Toggle status = 1;
inline void INVERTER_CONNECTION_STATUS::clear_status() {
  status_ = 0;
}
inline ::primary::Toggle INVERTER_CONNECTION_STATUS::_internal_status() const {
  return static_cast< ::primary::Toggle >(status_);
}
inline ::primary::Toggle INVERTER_CONNECTION_STATUS::status() const {
  // @@protoc_insertion_point(field_get:primary.INVERTER_CONNECTION_STATUS.status)
  return _internal_status();
}
inline void INVERTER_CONNECTION_STATUS::_internal_set_status(::primary::Toggle value) {
  
  status_ = value;
}
inline void INVERTER_CONNECTION_STATUS::set_status(::primary::Toggle value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:primary.INVERTER_CONNECTION_STATUS.status)
}

// uint64 _inner_timestamp = 2;
inline void INVERTER_CONNECTION_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INVERTER_CONNECTION_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INVERTER_CONNECTION_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.INVERTER_CONNECTION_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void INVERTER_CONNECTION_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void INVERTER_CONNECTION_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.INVERTER_CONNECTION_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// LV_ERRORS

// uint32 warnings = 1;
inline void LV_ERRORS::clear_warnings() {
  warnings_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_ERRORS::_internal_warnings() const {
  return warnings_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_ERRORS::warnings() const {
  // @@protoc_insertion_point(field_get:primary.LV_ERRORS.warnings)
  return _internal_warnings();
}
inline void LV_ERRORS::_internal_set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  warnings_ = value;
}
inline void LV_ERRORS::set_warnings(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_warnings(value);
  // @@protoc_insertion_point(field_set:primary.LV_ERRORS.warnings)
}

// uint32 errors = 2;
inline void LV_ERRORS::clear_errors() {
  errors_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_ERRORS::_internal_errors() const {
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LV_ERRORS::errors() const {
  // @@protoc_insertion_point(field_get:primary.LV_ERRORS.errors)
  return _internal_errors();
}
inline void LV_ERRORS::_internal_set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  errors_ = value;
}
inline void LV_ERRORS::set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errors(value);
  // @@protoc_insertion_point(field_set:primary.LV_ERRORS.errors)
}

// uint64 _inner_timestamp = 3;
inline void LV_ERRORS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_ERRORS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LV_ERRORS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.LV_ERRORS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void LV_ERRORS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void LV_ERRORS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.LV_ERRORS._inner_timestamp)
}

// -------------------------------------------------------------------

// SHUTDOWN_STATUS

// bool input = 1;
inline void SHUTDOWN_STATUS::clear_input() {
  input_ = false;
}
inline bool SHUTDOWN_STATUS::_internal_input() const {
  return input_;
}
inline bool SHUTDOWN_STATUS::input() const {
  // @@protoc_insertion_point(field_get:primary.SHUTDOWN_STATUS.input)
  return _internal_input();
}
inline void SHUTDOWN_STATUS::_internal_set_input(bool value) {
  
  input_ = value;
}
inline void SHUTDOWN_STATUS::set_input(bool value) {
  _internal_set_input(value);
  // @@protoc_insertion_point(field_set:primary.SHUTDOWN_STATUS.input)
}

// bool output = 2;
inline void SHUTDOWN_STATUS::clear_output() {
  output_ = false;
}
inline bool SHUTDOWN_STATUS::_internal_output() const {
  return output_;
}
inline bool SHUTDOWN_STATUS::output() const {
  // @@protoc_insertion_point(field_get:primary.SHUTDOWN_STATUS.output)
  return _internal_output();
}
inline void SHUTDOWN_STATUS::_internal_set_output(bool value) {
  
  output_ = value;
}
inline void SHUTDOWN_STATUS::set_output(bool value) {
  _internal_set_output(value);
  // @@protoc_insertion_point(field_set:primary.SHUTDOWN_STATUS.output)
}

// uint64 _inner_timestamp = 3;
inline void SHUTDOWN_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SHUTDOWN_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SHUTDOWN_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SHUTDOWN_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SHUTDOWN_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SHUTDOWN_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SHUTDOWN_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// MARKER

// uint64 _inner_timestamp = 1;
inline void MARKER::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MARKER::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MARKER::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.MARKER._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void MARKER::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void MARKER::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.MARKER._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_CELLS_VOLTAGE

// uint32 start_index = 1;
inline void HV_CELLS_VOLTAGE::clear_start_index() {
  start_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_CELLS_VOLTAGE::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_CELLS_VOLTAGE::start_index() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_VOLTAGE.start_index)
  return _internal_start_index();
}
inline void HV_CELLS_VOLTAGE::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_index_ = value;
}
inline void HV_CELLS_VOLTAGE::set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_VOLTAGE.start_index)
}

// float voltage_0 = 2;
inline void HV_CELLS_VOLTAGE::clear_voltage_0() {
  voltage_0_ = 0;
}
inline float HV_CELLS_VOLTAGE::_internal_voltage_0() const {
  return voltage_0_;
}
inline float HV_CELLS_VOLTAGE::voltage_0() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_VOLTAGE.voltage_0)
  return _internal_voltage_0();
}
inline void HV_CELLS_VOLTAGE::_internal_set_voltage_0(float value) {
  
  voltage_0_ = value;
}
inline void HV_CELLS_VOLTAGE::set_voltage_0(float value) {
  _internal_set_voltage_0(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_VOLTAGE.voltage_0)
}

// float voltage_1 = 3;
inline void HV_CELLS_VOLTAGE::clear_voltage_1() {
  voltage_1_ = 0;
}
inline float HV_CELLS_VOLTAGE::_internal_voltage_1() const {
  return voltage_1_;
}
inline float HV_CELLS_VOLTAGE::voltage_1() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_VOLTAGE.voltage_1)
  return _internal_voltage_1();
}
inline void HV_CELLS_VOLTAGE::_internal_set_voltage_1(float value) {
  
  voltage_1_ = value;
}
inline void HV_CELLS_VOLTAGE::set_voltage_1(float value) {
  _internal_set_voltage_1(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_VOLTAGE.voltage_1)
}

// float voltage_2 = 4;
inline void HV_CELLS_VOLTAGE::clear_voltage_2() {
  voltage_2_ = 0;
}
inline float HV_CELLS_VOLTAGE::_internal_voltage_2() const {
  return voltage_2_;
}
inline float HV_CELLS_VOLTAGE::voltage_2() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_VOLTAGE.voltage_2)
  return _internal_voltage_2();
}
inline void HV_CELLS_VOLTAGE::_internal_set_voltage_2(float value) {
  
  voltage_2_ = value;
}
inline void HV_CELLS_VOLTAGE::set_voltage_2(float value) {
  _internal_set_voltage_2(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_VOLTAGE.voltage_2)
}

// uint64 _inner_timestamp = 5;
inline void HV_CELLS_VOLTAGE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CELLS_VOLTAGE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CELLS_VOLTAGE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_VOLTAGE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_CELLS_VOLTAGE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_CELLS_VOLTAGE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_VOLTAGE._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_CELLS_TEMP

// uint32 start_index = 1;
inline void HV_CELLS_TEMP::clear_start_index() {
  start_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_CELLS_TEMP::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HV_CELLS_TEMP::start_index() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP.start_index)
  return _internal_start_index();
}
inline void HV_CELLS_TEMP::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_index_ = value;
}
inline void HV_CELLS_TEMP::set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP.start_index)
}

// float temp_0 = 2;
inline void HV_CELLS_TEMP::clear_temp_0() {
  temp_0_ = 0;
}
inline float HV_CELLS_TEMP::_internal_temp_0() const {
  return temp_0_;
}
inline float HV_CELLS_TEMP::temp_0() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP.temp_0)
  return _internal_temp_0();
}
inline void HV_CELLS_TEMP::_internal_set_temp_0(float value) {
  
  temp_0_ = value;
}
inline void HV_CELLS_TEMP::set_temp_0(float value) {
  _internal_set_temp_0(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP.temp_0)
}

// float temp_1 = 3;
inline void HV_CELLS_TEMP::clear_temp_1() {
  temp_1_ = 0;
}
inline float HV_CELLS_TEMP::_internal_temp_1() const {
  return temp_1_;
}
inline float HV_CELLS_TEMP::temp_1() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP.temp_1)
  return _internal_temp_1();
}
inline void HV_CELLS_TEMP::_internal_set_temp_1(float value) {
  
  temp_1_ = value;
}
inline void HV_CELLS_TEMP::set_temp_1(float value) {
  _internal_set_temp_1(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP.temp_1)
}

// float temp_2 = 4;
inline void HV_CELLS_TEMP::clear_temp_2() {
  temp_2_ = 0;
}
inline float HV_CELLS_TEMP::_internal_temp_2() const {
  return temp_2_;
}
inline float HV_CELLS_TEMP::temp_2() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP.temp_2)
  return _internal_temp_2();
}
inline void HV_CELLS_TEMP::_internal_set_temp_2(float value) {
  
  temp_2_ = value;
}
inline void HV_CELLS_TEMP::set_temp_2(float value) {
  _internal_set_temp_2(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP.temp_2)
}

// float temp_3 = 5;
inline void HV_CELLS_TEMP::clear_temp_3() {
  temp_3_ = 0;
}
inline float HV_CELLS_TEMP::_internal_temp_3() const {
  return temp_3_;
}
inline float HV_CELLS_TEMP::temp_3() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP.temp_3)
  return _internal_temp_3();
}
inline void HV_CELLS_TEMP::_internal_set_temp_3(float value) {
  
  temp_3_ = value;
}
inline void HV_CELLS_TEMP::set_temp_3(float value) {
  _internal_set_temp_3(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP.temp_3)
}

// float temp_4 = 6;
inline void HV_CELLS_TEMP::clear_temp_4() {
  temp_4_ = 0;
}
inline float HV_CELLS_TEMP::_internal_temp_4() const {
  return temp_4_;
}
inline float HV_CELLS_TEMP::temp_4() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP.temp_4)
  return _internal_temp_4();
}
inline void HV_CELLS_TEMP::_internal_set_temp_4(float value) {
  
  temp_4_ = value;
}
inline void HV_CELLS_TEMP::set_temp_4(float value) {
  _internal_set_temp_4(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP.temp_4)
}

// float temp_5 = 7;
inline void HV_CELLS_TEMP::clear_temp_5() {
  temp_5_ = 0;
}
inline float HV_CELLS_TEMP::_internal_temp_5() const {
  return temp_5_;
}
inline float HV_CELLS_TEMP::temp_5() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP.temp_5)
  return _internal_temp_5();
}
inline void HV_CELLS_TEMP::_internal_set_temp_5(float value) {
  
  temp_5_ = value;
}
inline void HV_CELLS_TEMP::set_temp_5(float value) {
  _internal_set_temp_5(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP.temp_5)
}

// uint64 _inner_timestamp = 8;
inline void HV_CELLS_TEMP::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CELLS_TEMP::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CELLS_TEMP::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELLS_TEMP._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_CELLS_TEMP::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_CELLS_TEMP::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELLS_TEMP._inner_timestamp)
}

// -------------------------------------------------------------------

// HV_CELL_BALANCING_STATUS

// .primary.Toggle balancing_status = 1;
inline void HV_CELL_BALANCING_STATUS::clear_balancing_status() {
  balancing_status_ = 0;
}
inline ::primary::Toggle HV_CELL_BALANCING_STATUS::_internal_balancing_status() const {
  return static_cast< ::primary::Toggle >(balancing_status_);
}
inline ::primary::Toggle HV_CELL_BALANCING_STATUS::balancing_status() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELL_BALANCING_STATUS.balancing_status)
  return _internal_balancing_status();
}
inline void HV_CELL_BALANCING_STATUS::_internal_set_balancing_status(::primary::Toggle value) {
  
  balancing_status_ = value;
}
inline void HV_CELL_BALANCING_STATUS::set_balancing_status(::primary::Toggle value) {
  _internal_set_balancing_status(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELL_BALANCING_STATUS.balancing_status)
}

// uint64 _inner_timestamp = 2;
inline void HV_CELL_BALANCING_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CELL_BALANCING_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HV_CELL_BALANCING_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HV_CELL_BALANCING_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HV_CELL_BALANCING_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HV_CELL_BALANCING_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HV_CELL_BALANCING_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// SET_CELL_BALANCING_STATUS

// .primary.Toggle set_balancing_status = 1;
inline void SET_CELL_BALANCING_STATUS::clear_set_balancing_status() {
  set_balancing_status_ = 0;
}
inline ::primary::Toggle SET_CELL_BALANCING_STATUS::_internal_set_balancing_status() const {
  return static_cast< ::primary::Toggle >(set_balancing_status_);
}
inline ::primary::Toggle SET_CELL_BALANCING_STATUS::set_balancing_status() const {
  // @@protoc_insertion_point(field_get:primary.SET_CELL_BALANCING_STATUS.set_balancing_status)
  return _internal_set_balancing_status();
}
inline void SET_CELL_BALANCING_STATUS::_internal_set_set_balancing_status(::primary::Toggle value) {
  
  set_balancing_status_ = value;
}
inline void SET_CELL_BALANCING_STATUS::set_set_balancing_status(::primary::Toggle value) {
  _internal_set_set_balancing_status(value);
  // @@protoc_insertion_point(field_set:primary.SET_CELL_BALANCING_STATUS.set_balancing_status)
}

// uint64 _inner_timestamp = 2;
inline void SET_CELL_BALANCING_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_CELL_BALANCING_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SET_CELL_BALANCING_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SET_CELL_BALANCING_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SET_CELL_BALANCING_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SET_CELL_BALANCING_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SET_CELL_BALANCING_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// HANDCART_STATUS

// bool connected = 1;
inline void HANDCART_STATUS::clear_connected() {
  connected_ = false;
}
inline bool HANDCART_STATUS::_internal_connected() const {
  return connected_;
}
inline bool HANDCART_STATUS::connected() const {
  // @@protoc_insertion_point(field_get:primary.HANDCART_STATUS.connected)
  return _internal_connected();
}
inline void HANDCART_STATUS::_internal_set_connected(bool value) {
  
  connected_ = value;
}
inline void HANDCART_STATUS::set_connected(bool value) {
  _internal_set_connected(value);
  // @@protoc_insertion_point(field_set:primary.HANDCART_STATUS.connected)
}

// uint64 _inner_timestamp = 2;
inline void HANDCART_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HANDCART_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HANDCART_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.HANDCART_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void HANDCART_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void HANDCART_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.HANDCART_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// SPEED

// float encoder_r = 1;
inline void SPEED::clear_encoder_r() {
  encoder_r_ = 0;
}
inline float SPEED::_internal_encoder_r() const {
  return encoder_r_;
}
inline float SPEED::encoder_r() const {
  // @@protoc_insertion_point(field_get:primary.SPEED.encoder_r)
  return _internal_encoder_r();
}
inline void SPEED::_internal_set_encoder_r(float value) {
  
  encoder_r_ = value;
}
inline void SPEED::set_encoder_r(float value) {
  _internal_set_encoder_r(value);
  // @@protoc_insertion_point(field_set:primary.SPEED.encoder_r)
}

// float encoder_l = 2;
inline void SPEED::clear_encoder_l() {
  encoder_l_ = 0;
}
inline float SPEED::_internal_encoder_l() const {
  return encoder_l_;
}
inline float SPEED::encoder_l() const {
  // @@protoc_insertion_point(field_get:primary.SPEED.encoder_l)
  return _internal_encoder_l();
}
inline void SPEED::_internal_set_encoder_l(float value) {
  
  encoder_l_ = value;
}
inline void SPEED::set_encoder_l(float value) {
  _internal_set_encoder_l(value);
  // @@protoc_insertion_point(field_set:primary.SPEED.encoder_l)
}

// float inverter_r = 3;
inline void SPEED::clear_inverter_r() {
  inverter_r_ = 0;
}
inline float SPEED::_internal_inverter_r() const {
  return inverter_r_;
}
inline float SPEED::inverter_r() const {
  // @@protoc_insertion_point(field_get:primary.SPEED.inverter_r)
  return _internal_inverter_r();
}
inline void SPEED::_internal_set_inverter_r(float value) {
  
  inverter_r_ = value;
}
inline void SPEED::set_inverter_r(float value) {
  _internal_set_inverter_r(value);
  // @@protoc_insertion_point(field_set:primary.SPEED.inverter_r)
}

// float inverter_l = 4;
inline void SPEED::clear_inverter_l() {
  inverter_l_ = 0;
}
inline float SPEED::_internal_inverter_l() const {
  return inverter_l_;
}
inline float SPEED::inverter_l() const {
  // @@protoc_insertion_point(field_get:primary.SPEED.inverter_l)
  return _internal_inverter_l();
}
inline void SPEED::_internal_set_inverter_l(float value) {
  
  inverter_l_ = value;
}
inline void SPEED::set_inverter_l(float value) {
  _internal_set_inverter_l(value);
  // @@protoc_insertion_point(field_set:primary.SPEED.inverter_l)
}

// uint64 _inner_timestamp = 5;
inline void SPEED::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SPEED::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SPEED::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.SPEED._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void SPEED::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void SPEED::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.SPEED._inner_timestamp)
}

// -------------------------------------------------------------------

// INV_L_REQUEST

// uint32 data_0 = 1;
inline void INV_L_REQUEST::clear_data_0() {
  data_0_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_0() const {
  return data_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_0() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_0)
  return _internal_data_0();
}
inline void INV_L_REQUEST::_internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_0_ = value;
}
inline void INV_L_REQUEST::set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_0(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_0)
}

// uint32 data_1 = 2;
inline void INV_L_REQUEST::clear_data_1() {
  data_1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_1() const {
  return data_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_1() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_1)
  return _internal_data_1();
}
inline void INV_L_REQUEST::_internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_1_ = value;
}
inline void INV_L_REQUEST::set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_1(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_1)
}

// uint32 data_2 = 3;
inline void INV_L_REQUEST::clear_data_2() {
  data_2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_2() const {
  return data_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_2() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_2)
  return _internal_data_2();
}
inline void INV_L_REQUEST::_internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_2_ = value;
}
inline void INV_L_REQUEST::set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_2(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_2)
}

// uint32 data_3 = 4;
inline void INV_L_REQUEST::clear_data_3() {
  data_3_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_3() const {
  return data_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_3() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_3)
  return _internal_data_3();
}
inline void INV_L_REQUEST::_internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_3_ = value;
}
inline void INV_L_REQUEST::set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_3(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_3)
}

// uint32 data_4 = 5;
inline void INV_L_REQUEST::clear_data_4() {
  data_4_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_4() const {
  return data_4_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_4() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_4)
  return _internal_data_4();
}
inline void INV_L_REQUEST::_internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_4_ = value;
}
inline void INV_L_REQUEST::set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_4(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_4)
}

// uint32 data_5 = 6;
inline void INV_L_REQUEST::clear_data_5() {
  data_5_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_5() const {
  return data_5_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_5() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_5)
  return _internal_data_5();
}
inline void INV_L_REQUEST::_internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_5_ = value;
}
inline void INV_L_REQUEST::set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_5(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_5)
}

// uint32 data_6 = 7;
inline void INV_L_REQUEST::clear_data_6() {
  data_6_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_6() const {
  return data_6_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_6() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_6)
  return _internal_data_6();
}
inline void INV_L_REQUEST::_internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_6_ = value;
}
inline void INV_L_REQUEST::set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_6(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_6)
}

// uint32 data_7 = 8;
inline void INV_L_REQUEST::clear_data_7() {
  data_7_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::_internal_data_7() const {
  return data_7_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_REQUEST::data_7() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST.data_7)
  return _internal_data_7();
}
inline void INV_L_REQUEST::_internal_set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_7_ = value;
}
inline void INV_L_REQUEST::set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_7(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST.data_7)
}

// uint64 _inner_timestamp = 9;
inline void INV_L_REQUEST::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_L_REQUEST::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_L_REQUEST::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_REQUEST._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void INV_L_REQUEST::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void INV_L_REQUEST::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_REQUEST._inner_timestamp)
}

// -------------------------------------------------------------------

// INV_R_REQUEST

// uint32 data_0 = 1;
inline void INV_R_REQUEST::clear_data_0() {
  data_0_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_0() const {
  return data_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_0() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_0)
  return _internal_data_0();
}
inline void INV_R_REQUEST::_internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_0_ = value;
}
inline void INV_R_REQUEST::set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_0(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_0)
}

// uint32 data_1 = 2;
inline void INV_R_REQUEST::clear_data_1() {
  data_1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_1() const {
  return data_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_1() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_1)
  return _internal_data_1();
}
inline void INV_R_REQUEST::_internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_1_ = value;
}
inline void INV_R_REQUEST::set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_1(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_1)
}

// uint32 data_2 = 3;
inline void INV_R_REQUEST::clear_data_2() {
  data_2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_2() const {
  return data_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_2() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_2)
  return _internal_data_2();
}
inline void INV_R_REQUEST::_internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_2_ = value;
}
inline void INV_R_REQUEST::set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_2(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_2)
}

// uint32 data_3 = 4;
inline void INV_R_REQUEST::clear_data_3() {
  data_3_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_3() const {
  return data_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_3() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_3)
  return _internal_data_3();
}
inline void INV_R_REQUEST::_internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_3_ = value;
}
inline void INV_R_REQUEST::set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_3(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_3)
}

// uint32 data_4 = 5;
inline void INV_R_REQUEST::clear_data_4() {
  data_4_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_4() const {
  return data_4_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_4() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_4)
  return _internal_data_4();
}
inline void INV_R_REQUEST::_internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_4_ = value;
}
inline void INV_R_REQUEST::set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_4(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_4)
}

// uint32 data_5 = 6;
inline void INV_R_REQUEST::clear_data_5() {
  data_5_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_5() const {
  return data_5_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_5() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_5)
  return _internal_data_5();
}
inline void INV_R_REQUEST::_internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_5_ = value;
}
inline void INV_R_REQUEST::set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_5(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_5)
}

// uint32 data_6 = 7;
inline void INV_R_REQUEST::clear_data_6() {
  data_6_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_6() const {
  return data_6_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_6() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_6)
  return _internal_data_6();
}
inline void INV_R_REQUEST::_internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_6_ = value;
}
inline void INV_R_REQUEST::set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_6(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_6)
}

// uint32 data_7 = 8;
inline void INV_R_REQUEST::clear_data_7() {
  data_7_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::_internal_data_7() const {
  return data_7_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_REQUEST::data_7() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST.data_7)
  return _internal_data_7();
}
inline void INV_R_REQUEST::_internal_set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_7_ = value;
}
inline void INV_R_REQUEST::set_data_7(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_7(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST.data_7)
}

// uint64 _inner_timestamp = 9;
inline void INV_R_REQUEST::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_R_REQUEST::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_R_REQUEST::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_REQUEST._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void INV_R_REQUEST::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void INV_R_REQUEST::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_REQUEST._inner_timestamp)
}

// -------------------------------------------------------------------

// INV_L_RESPONSE

// uint32 reg_id = 1;
inline void INV_L_RESPONSE::clear_reg_id() {
  reg_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_reg_id() const {
  return reg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::reg_id() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.reg_id)
  return _internal_reg_id();
}
inline void INV_L_RESPONSE::_internal_set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reg_id_ = value;
}
inline void INV_L_RESPONSE::set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reg_id(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.reg_id)
}

// uint32 data_0 = 2;
inline void INV_L_RESPONSE::clear_data_0() {
  data_0_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_data_0() const {
  return data_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::data_0() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.data_0)
  return _internal_data_0();
}
inline void INV_L_RESPONSE::_internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_0_ = value;
}
inline void INV_L_RESPONSE::set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_0(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.data_0)
}

// uint32 data_1 = 3;
inline void INV_L_RESPONSE::clear_data_1() {
  data_1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_data_1() const {
  return data_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::data_1() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.data_1)
  return _internal_data_1();
}
inline void INV_L_RESPONSE::_internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_1_ = value;
}
inline void INV_L_RESPONSE::set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_1(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.data_1)
}

// uint32 data_2 = 4;
inline void INV_L_RESPONSE::clear_data_2() {
  data_2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_data_2() const {
  return data_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::data_2() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.data_2)
  return _internal_data_2();
}
inline void INV_L_RESPONSE::_internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_2_ = value;
}
inline void INV_L_RESPONSE::set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_2(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.data_2)
}

// uint32 data_3 = 5;
inline void INV_L_RESPONSE::clear_data_3() {
  data_3_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_data_3() const {
  return data_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::data_3() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.data_3)
  return _internal_data_3();
}
inline void INV_L_RESPONSE::_internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_3_ = value;
}
inline void INV_L_RESPONSE::set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_3(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.data_3)
}

// uint32 data_4 = 6;
inline void INV_L_RESPONSE::clear_data_4() {
  data_4_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_data_4() const {
  return data_4_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::data_4() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.data_4)
  return _internal_data_4();
}
inline void INV_L_RESPONSE::_internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_4_ = value;
}
inline void INV_L_RESPONSE::set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_4(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.data_4)
}

// uint32 data_5 = 7;
inline void INV_L_RESPONSE::clear_data_5() {
  data_5_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_data_5() const {
  return data_5_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::data_5() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.data_5)
  return _internal_data_5();
}
inline void INV_L_RESPONSE::_internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_5_ = value;
}
inline void INV_L_RESPONSE::set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_5(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.data_5)
}

// uint32 data_6 = 8;
inline void INV_L_RESPONSE::clear_data_6() {
  data_6_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::_internal_data_6() const {
  return data_6_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_L_RESPONSE::data_6() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE.data_6)
  return _internal_data_6();
}
inline void INV_L_RESPONSE::_internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_6_ = value;
}
inline void INV_L_RESPONSE::set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_6(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE.data_6)
}

// uint64 _inner_timestamp = 9;
inline void INV_L_RESPONSE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_L_RESPONSE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_L_RESPONSE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.INV_L_RESPONSE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void INV_L_RESPONSE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void INV_L_RESPONSE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.INV_L_RESPONSE._inner_timestamp)
}

// -------------------------------------------------------------------

// INV_R_RESPONSE

// uint32 reg_id = 1;
inline void INV_R_RESPONSE::clear_reg_id() {
  reg_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_reg_id() const {
  return reg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::reg_id() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.reg_id)
  return _internal_reg_id();
}
inline void INV_R_RESPONSE::_internal_set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reg_id_ = value;
}
inline void INV_R_RESPONSE::set_reg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reg_id(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.reg_id)
}

// uint32 data_0 = 2;
inline void INV_R_RESPONSE::clear_data_0() {
  data_0_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_data_0() const {
  return data_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::data_0() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.data_0)
  return _internal_data_0();
}
inline void INV_R_RESPONSE::_internal_set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_0_ = value;
}
inline void INV_R_RESPONSE::set_data_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_0(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.data_0)
}

// uint32 data_1 = 3;
inline void INV_R_RESPONSE::clear_data_1() {
  data_1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_data_1() const {
  return data_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::data_1() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.data_1)
  return _internal_data_1();
}
inline void INV_R_RESPONSE::_internal_set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_1_ = value;
}
inline void INV_R_RESPONSE::set_data_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_1(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.data_1)
}

// uint32 data_2 = 4;
inline void INV_R_RESPONSE::clear_data_2() {
  data_2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_data_2() const {
  return data_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::data_2() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.data_2)
  return _internal_data_2();
}
inline void INV_R_RESPONSE::_internal_set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_2_ = value;
}
inline void INV_R_RESPONSE::set_data_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_2(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.data_2)
}

// uint32 data_3 = 5;
inline void INV_R_RESPONSE::clear_data_3() {
  data_3_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_data_3() const {
  return data_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::data_3() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.data_3)
  return _internal_data_3();
}
inline void INV_R_RESPONSE::_internal_set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_3_ = value;
}
inline void INV_R_RESPONSE::set_data_3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_3(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.data_3)
}

// uint32 data_4 = 6;
inline void INV_R_RESPONSE::clear_data_4() {
  data_4_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_data_4() const {
  return data_4_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::data_4() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.data_4)
  return _internal_data_4();
}
inline void INV_R_RESPONSE::_internal_set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_4_ = value;
}
inline void INV_R_RESPONSE::set_data_4(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_4(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.data_4)
}

// uint32 data_5 = 7;
inline void INV_R_RESPONSE::clear_data_5() {
  data_5_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_data_5() const {
  return data_5_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::data_5() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.data_5)
  return _internal_data_5();
}
inline void INV_R_RESPONSE::_internal_set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_5_ = value;
}
inline void INV_R_RESPONSE::set_data_5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_5(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.data_5)
}

// uint32 data_6 = 8;
inline void INV_R_RESPONSE::clear_data_6() {
  data_6_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::_internal_data_6() const {
  return data_6_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INV_R_RESPONSE::data_6() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE.data_6)
  return _internal_data_6();
}
inline void INV_R_RESPONSE::_internal_set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_6_ = value;
}
inline void INV_R_RESPONSE::set_data_6(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data_6(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE.data_6)
}

// uint64 _inner_timestamp = 9;
inline void INV_R_RESPONSE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_R_RESPONSE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INV_R_RESPONSE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.INV_R_RESPONSE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void INV_R_RESPONSE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void INV_R_RESPONSE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.INV_R_RESPONSE._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_0_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_0_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_0_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_0_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_0_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_0_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_0_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_0_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_0_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_0_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_0_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_0_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_1_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_1_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_1_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_1_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_1_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_1_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_1_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_1_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_1_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_1_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_1_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_1_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_2_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_2_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_2_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_2_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_2_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_2_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_2_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_2_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_2_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_2_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_2_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_2_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_3_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_3_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_3_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_3_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_3_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_3_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_3_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_3_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_3_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_3_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_3_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_3_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_4_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_4_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_4_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_4_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_4_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_4_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_4_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_4_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_4_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_4_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_4_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_4_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_5_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_5_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_5_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_5_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_5_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_5_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_5_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_5_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_CELLBOARD_5_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_5_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_5_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_CELLBOARD_5_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_BMS_HV_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_BMS_HV_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_HV_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_HV_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_BMS_HV_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_BMS_HV_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_BMS_HV_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_BMS_HV_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_BMS_HV_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_BMS_HV_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_HV_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_HV_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_BMS_HV_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_BMS_HV_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_BMS_HV_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_BMS_HV_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_BMS_LV_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_BMS_LV_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_LV_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_LV_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_BMS_LV_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_BMS_LV_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_BMS_LV_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_BMS_LV_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_BMS_LV_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_BMS_LV_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_LV_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_BMS_LV_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.FLASH_BMS_LV_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_BMS_LV_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_BMS_LV_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.FLASH_BMS_LV_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// BRUSA_NLG5_CTL

// uint64 _inner_timestamp = 1;
inline void BRUSA_NLG5_CTL::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_NLG5_CTL::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_NLG5_CTL::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BRUSA_NLG5_CTL._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BRUSA_NLG5_CTL::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BRUSA_NLG5_CTL::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BRUSA_NLG5_CTL._inner_timestamp)
}

// -------------------------------------------------------------------

// BRUSA_ST

// uint64 _inner_timestamp = 1;
inline void BRUSA_ST::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ST::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ST::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BRUSA_ST._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BRUSA_ST::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BRUSA_ST::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BRUSA_ST._inner_timestamp)
}

// -------------------------------------------------------------------

// BRUSA_ACT_I

// uint64 _inner_timestamp = 1;
inline void BRUSA_ACT_I::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ACT_I::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ACT_I::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BRUSA_ACT_I._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BRUSA_ACT_I::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BRUSA_ACT_I::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BRUSA_ACT_I._inner_timestamp)
}

// -------------------------------------------------------------------

// BRUSA_ACT_II

// uint64 _inner_timestamp = 1;
inline void BRUSA_ACT_II::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ACT_II::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ACT_II::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BRUSA_ACT_II._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BRUSA_ACT_II::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BRUSA_ACT_II::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BRUSA_ACT_II._inner_timestamp)
}

// -------------------------------------------------------------------

// BRUSA_TEMP

// uint64 _inner_timestamp = 1;
inline void BRUSA_TEMP::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_TEMP::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_TEMP::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BRUSA_TEMP._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BRUSA_TEMP::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BRUSA_TEMP::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BRUSA_TEMP._inner_timestamp)
}

// -------------------------------------------------------------------

// BRUSA_ERR

// uint64 _inner_timestamp = 1;
inline void BRUSA_ERR::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ERR::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BRUSA_ERR::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.BRUSA_ERR._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BRUSA_ERR::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BRUSA_ERR::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.BRUSA_ERR._inner_timestamp)
}

// -------------------------------------------------------------------

// CONTROL_OUTPUT

// float estimated_velocity = 1;
inline void CONTROL_OUTPUT::clear_estimated_velocity() {
  estimated_velocity_ = 0;
}
inline float CONTROL_OUTPUT::_internal_estimated_velocity() const {
  return estimated_velocity_;
}
inline float CONTROL_OUTPUT::estimated_velocity() const {
  // @@protoc_insertion_point(field_get:primary.CONTROL_OUTPUT.estimated_velocity)
  return _internal_estimated_velocity();
}
inline void CONTROL_OUTPUT::_internal_set_estimated_velocity(float value) {
  
  estimated_velocity_ = value;
}
inline void CONTROL_OUTPUT::set_estimated_velocity(float value) {
  _internal_set_estimated_velocity(value);
  // @@protoc_insertion_point(field_set:primary.CONTROL_OUTPUT.estimated_velocity)
}

// float tmax_r = 2;
inline void CONTROL_OUTPUT::clear_tmax_r() {
  tmax_r_ = 0;
}
inline float CONTROL_OUTPUT::_internal_tmax_r() const {
  return tmax_r_;
}
inline float CONTROL_OUTPUT::tmax_r() const {
  // @@protoc_insertion_point(field_get:primary.CONTROL_OUTPUT.tmax_r)
  return _internal_tmax_r();
}
inline void CONTROL_OUTPUT::_internal_set_tmax_r(float value) {
  
  tmax_r_ = value;
}
inline void CONTROL_OUTPUT::set_tmax_r(float value) {
  _internal_set_tmax_r(value);
  // @@protoc_insertion_point(field_set:primary.CONTROL_OUTPUT.tmax_r)
}

// float tmax_l = 3;
inline void CONTROL_OUTPUT::clear_tmax_l() {
  tmax_l_ = 0;
}
inline float CONTROL_OUTPUT::_internal_tmax_l() const {
  return tmax_l_;
}
inline float CONTROL_OUTPUT::tmax_l() const {
  // @@protoc_insertion_point(field_get:primary.CONTROL_OUTPUT.tmax_l)
  return _internal_tmax_l();
}
inline void CONTROL_OUTPUT::_internal_set_tmax_l(float value) {
  
  tmax_l_ = value;
}
inline void CONTROL_OUTPUT::set_tmax_l(float value) {
  _internal_set_tmax_l(value);
  // @@protoc_insertion_point(field_set:primary.CONTROL_OUTPUT.tmax_l)
}

// float torque_l = 4;
inline void CONTROL_OUTPUT::clear_torque_l() {
  torque_l_ = 0;
}
inline float CONTROL_OUTPUT::_internal_torque_l() const {
  return torque_l_;
}
inline float CONTROL_OUTPUT::torque_l() const {
  // @@protoc_insertion_point(field_get:primary.CONTROL_OUTPUT.torque_l)
  return _internal_torque_l();
}
inline void CONTROL_OUTPUT::_internal_set_torque_l(float value) {
  
  torque_l_ = value;
}
inline void CONTROL_OUTPUT::set_torque_l(float value) {
  _internal_set_torque_l(value);
  // @@protoc_insertion_point(field_set:primary.CONTROL_OUTPUT.torque_l)
}

// float torque_r = 5;
inline void CONTROL_OUTPUT::clear_torque_r() {
  torque_r_ = 0;
}
inline float CONTROL_OUTPUT::_internal_torque_r() const {
  return torque_r_;
}
inline float CONTROL_OUTPUT::torque_r() const {
  // @@protoc_insertion_point(field_get:primary.CONTROL_OUTPUT.torque_r)
  return _internal_torque_r();
}
inline void CONTROL_OUTPUT::_internal_set_torque_r(float value) {
  
  torque_r_ = value;
}
inline void CONTROL_OUTPUT::set_torque_r(float value) {
  _internal_set_torque_r(value);
  // @@protoc_insertion_point(field_set:primary.CONTROL_OUTPUT.torque_r)
}

// uint64 _inner_timestamp = 6;
inline void CONTROL_OUTPUT::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CONTROL_OUTPUT::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CONTROL_OUTPUT::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.CONTROL_OUTPUT._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void CONTROL_OUTPUT::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void CONTROL_OUTPUT::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.CONTROL_OUTPUT._inner_timestamp)
}

// -------------------------------------------------------------------

// LC_RESET

// uint64 _inner_timestamp = 1;
inline void LC_RESET::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LC_RESET::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LC_RESET::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:primary.LC_RESET._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void LC_RESET::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void LC_RESET::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:primary.LC_RESET._inner_timestamp)
}

// -------------------------------------------------------------------

// Pack

// repeated .primary.BMS_HV_JMP_TO_BLT BMS_HV_JMP_TO_BLT = 1;
inline int Pack::_internal_bms_hv_jmp_to_blt_size() const {
  return bms_hv_jmp_to_blt_.size();
}
inline int Pack::bms_hv_jmp_to_blt_size() const {
  return _internal_bms_hv_jmp_to_blt_size();
}
inline void Pack::clear_bms_hv_jmp_to_blt() {
  bms_hv_jmp_to_blt_.Clear();
}
inline ::primary::BMS_HV_JMP_TO_BLT* Pack::mutable_bms_hv_jmp_to_blt(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BMS_HV_JMP_TO_BLT)
  return bms_hv_jmp_to_blt_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_HV_JMP_TO_BLT >*
Pack::mutable_bms_hv_jmp_to_blt() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BMS_HV_JMP_TO_BLT)
  return &bms_hv_jmp_to_blt_;
}
inline const ::primary::BMS_HV_JMP_TO_BLT& Pack::_internal_bms_hv_jmp_to_blt(int index) const {
  return bms_hv_jmp_to_blt_.Get(index);
}
inline const ::primary::BMS_HV_JMP_TO_BLT& Pack::bms_hv_jmp_to_blt(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BMS_HV_JMP_TO_BLT)
  return _internal_bms_hv_jmp_to_blt(index);
}
inline ::primary::BMS_HV_JMP_TO_BLT* Pack::_internal_add_bms_hv_jmp_to_blt() {
  return bms_hv_jmp_to_blt_.Add();
}
inline ::primary::BMS_HV_JMP_TO_BLT* Pack::add_bms_hv_jmp_to_blt() {
  // @@protoc_insertion_point(field_add:primary.Pack.BMS_HV_JMP_TO_BLT)
  return _internal_add_bms_hv_jmp_to_blt();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_HV_JMP_TO_BLT >&
Pack::bms_hv_jmp_to_blt() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BMS_HV_JMP_TO_BLT)
  return bms_hv_jmp_to_blt_;
}

// repeated .primary.BMS_LV_JMP_TO_BLT BMS_LV_JMP_TO_BLT = 2;
inline int Pack::_internal_bms_lv_jmp_to_blt_size() const {
  return bms_lv_jmp_to_blt_.size();
}
inline int Pack::bms_lv_jmp_to_blt_size() const {
  return _internal_bms_lv_jmp_to_blt_size();
}
inline void Pack::clear_bms_lv_jmp_to_blt() {
  bms_lv_jmp_to_blt_.Clear();
}
inline ::primary::BMS_LV_JMP_TO_BLT* Pack::mutable_bms_lv_jmp_to_blt(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BMS_LV_JMP_TO_BLT)
  return bms_lv_jmp_to_blt_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_LV_JMP_TO_BLT >*
Pack::mutable_bms_lv_jmp_to_blt() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BMS_LV_JMP_TO_BLT)
  return &bms_lv_jmp_to_blt_;
}
inline const ::primary::BMS_LV_JMP_TO_BLT& Pack::_internal_bms_lv_jmp_to_blt(int index) const {
  return bms_lv_jmp_to_blt_.Get(index);
}
inline const ::primary::BMS_LV_JMP_TO_BLT& Pack::bms_lv_jmp_to_blt(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BMS_LV_JMP_TO_BLT)
  return _internal_bms_lv_jmp_to_blt(index);
}
inline ::primary::BMS_LV_JMP_TO_BLT* Pack::_internal_add_bms_lv_jmp_to_blt() {
  return bms_lv_jmp_to_blt_.Add();
}
inline ::primary::BMS_LV_JMP_TO_BLT* Pack::add_bms_lv_jmp_to_blt() {
  // @@protoc_insertion_point(field_add:primary.Pack.BMS_LV_JMP_TO_BLT)
  return _internal_add_bms_lv_jmp_to_blt();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BMS_LV_JMP_TO_BLT >&
Pack::bms_lv_jmp_to_blt() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BMS_LV_JMP_TO_BLT)
  return bms_lv_jmp_to_blt_;
}

// repeated .primary.STEER_VERSION STEER_VERSION = 3;
inline int Pack::_internal_steer_version_size() const {
  return steer_version_.size();
}
inline int Pack::steer_version_size() const {
  return _internal_steer_version_size();
}
inline void Pack::clear_steer_version() {
  steer_version_.Clear();
}
inline ::primary::STEER_VERSION* Pack::mutable_steer_version(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.STEER_VERSION)
  return steer_version_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_VERSION >*
Pack::mutable_steer_version() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.STEER_VERSION)
  return &steer_version_;
}
inline const ::primary::STEER_VERSION& Pack::_internal_steer_version(int index) const {
  return steer_version_.Get(index);
}
inline const ::primary::STEER_VERSION& Pack::steer_version(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.STEER_VERSION)
  return _internal_steer_version(index);
}
inline ::primary::STEER_VERSION* Pack::_internal_add_steer_version() {
  return steer_version_.Add();
}
inline ::primary::STEER_VERSION* Pack::add_steer_version() {
  // @@protoc_insertion_point(field_add:primary.Pack.STEER_VERSION)
  return _internal_add_steer_version();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_VERSION >&
Pack::steer_version() const {
  // @@protoc_insertion_point(field_list:primary.Pack.STEER_VERSION)
  return steer_version_;
}

// repeated .primary.DAS_VERSION DAS_VERSION = 4;
inline int Pack::_internal_das_version_size() const {
  return das_version_.size();
}
inline int Pack::das_version_size() const {
  return _internal_das_version_size();
}
inline void Pack::clear_das_version() {
  das_version_.Clear();
}
inline ::primary::DAS_VERSION* Pack::mutable_das_version(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.DAS_VERSION)
  return das_version_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_VERSION >*
Pack::mutable_das_version() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.DAS_VERSION)
  return &das_version_;
}
inline const ::primary::DAS_VERSION& Pack::_internal_das_version(int index) const {
  return das_version_.Get(index);
}
inline const ::primary::DAS_VERSION& Pack::das_version(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.DAS_VERSION)
  return _internal_das_version(index);
}
inline ::primary::DAS_VERSION* Pack::_internal_add_das_version() {
  return das_version_.Add();
}
inline ::primary::DAS_VERSION* Pack::add_das_version() {
  // @@protoc_insertion_point(field_add:primary.Pack.DAS_VERSION)
  return _internal_add_das_version();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_VERSION >&
Pack::das_version() const {
  // @@protoc_insertion_point(field_list:primary.Pack.DAS_VERSION)
  return das_version_;
}

// repeated .primary.HV_VERSION HV_VERSION = 5;
inline int Pack::_internal_hv_version_size() const {
  return hv_version_.size();
}
inline int Pack::hv_version_size() const {
  return _internal_hv_version_size();
}
inline void Pack::clear_hv_version() {
  hv_version_.Clear();
}
inline ::primary::HV_VERSION* Pack::mutable_hv_version(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_VERSION)
  return hv_version_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VERSION >*
Pack::mutable_hv_version() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_VERSION)
  return &hv_version_;
}
inline const ::primary::HV_VERSION& Pack::_internal_hv_version(int index) const {
  return hv_version_.Get(index);
}
inline const ::primary::HV_VERSION& Pack::hv_version(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_VERSION)
  return _internal_hv_version(index);
}
inline ::primary::HV_VERSION* Pack::_internal_add_hv_version() {
  return hv_version_.Add();
}
inline ::primary::HV_VERSION* Pack::add_hv_version() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_VERSION)
  return _internal_add_hv_version();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VERSION >&
Pack::hv_version() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_VERSION)
  return hv_version_;
}

// repeated .primary.LV_VERSION LV_VERSION = 6;
inline int Pack::_internal_lv_version_size() const {
  return lv_version_.size();
}
inline int Pack::lv_version_size() const {
  return _internal_lv_version_size();
}
inline void Pack::clear_lv_version() {
  lv_version_.Clear();
}
inline ::primary::LV_VERSION* Pack::mutable_lv_version(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.LV_VERSION)
  return lv_version_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VERSION >*
Pack::mutable_lv_version() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.LV_VERSION)
  return &lv_version_;
}
inline const ::primary::LV_VERSION& Pack::_internal_lv_version(int index) const {
  return lv_version_.Get(index);
}
inline const ::primary::LV_VERSION& Pack::lv_version(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.LV_VERSION)
  return _internal_lv_version(index);
}
inline ::primary::LV_VERSION* Pack::_internal_add_lv_version() {
  return lv_version_.Add();
}
inline ::primary::LV_VERSION* Pack::add_lv_version() {
  // @@protoc_insertion_point(field_add:primary.Pack.LV_VERSION)
  return _internal_add_lv_version();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VERSION >&
Pack::lv_version() const {
  // @@protoc_insertion_point(field_list:primary.Pack.LV_VERSION)
  return lv_version_;
}

// repeated .primary.TLM_VERSION TLM_VERSION = 7;
inline int Pack::_internal_tlm_version_size() const {
  return tlm_version_.size();
}
inline int Pack::tlm_version_size() const {
  return _internal_tlm_version_size();
}
inline void Pack::clear_tlm_version() {
  tlm_version_.Clear();
}
inline ::primary::TLM_VERSION* Pack::mutable_tlm_version(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.TLM_VERSION)
  return tlm_version_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_VERSION >*
Pack::mutable_tlm_version() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.TLM_VERSION)
  return &tlm_version_;
}
inline const ::primary::TLM_VERSION& Pack::_internal_tlm_version(int index) const {
  return tlm_version_.Get(index);
}
inline const ::primary::TLM_VERSION& Pack::tlm_version(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.TLM_VERSION)
  return _internal_tlm_version(index);
}
inline ::primary::TLM_VERSION* Pack::_internal_add_tlm_version() {
  return tlm_version_.Add();
}
inline ::primary::TLM_VERSION* Pack::add_tlm_version() {
  // @@protoc_insertion_point(field_add:primary.Pack.TLM_VERSION)
  return _internal_add_tlm_version();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_VERSION >&
Pack::tlm_version() const {
  // @@protoc_insertion_point(field_list:primary.Pack.TLM_VERSION)
  return tlm_version_;
}

// repeated .primary.TIMESTAMP TIMESTAMP = 8;
inline int Pack::_internal_timestamp_size() const {
  return timestamp_.size();
}
inline int Pack::timestamp_size() const {
  return _internal_timestamp_size();
}
inline void Pack::clear_timestamp() {
  timestamp_.Clear();
}
inline ::primary::TIMESTAMP* Pack::mutable_timestamp(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.TIMESTAMP)
  return timestamp_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TIMESTAMP >*
Pack::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.TIMESTAMP)
  return &timestamp_;
}
inline const ::primary::TIMESTAMP& Pack::_internal_timestamp(int index) const {
  return timestamp_.Get(index);
}
inline const ::primary::TIMESTAMP& Pack::timestamp(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.TIMESTAMP)
  return _internal_timestamp(index);
}
inline ::primary::TIMESTAMP* Pack::_internal_add_timestamp() {
  return timestamp_.Add();
}
inline ::primary::TIMESTAMP* Pack::add_timestamp() {
  // @@protoc_insertion_point(field_add:primary.Pack.TIMESTAMP)
  return _internal_add_timestamp();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TIMESTAMP >&
Pack::timestamp() const {
  // @@protoc_insertion_point(field_list:primary.Pack.TIMESTAMP)
  return timestamp_;
}

// repeated .primary.AMBIENT_TEMPERATURE AMBIENT_TEMPERATURE = 9;
inline int Pack::_internal_ambient_temperature_size() const {
  return ambient_temperature_.size();
}
inline int Pack::ambient_temperature_size() const {
  return _internal_ambient_temperature_size();
}
inline void Pack::clear_ambient_temperature() {
  ambient_temperature_.Clear();
}
inline ::primary::AMBIENT_TEMPERATURE* Pack::mutable_ambient_temperature(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.AMBIENT_TEMPERATURE)
  return ambient_temperature_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::AMBIENT_TEMPERATURE >*
Pack::mutable_ambient_temperature() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.AMBIENT_TEMPERATURE)
  return &ambient_temperature_;
}
inline const ::primary::AMBIENT_TEMPERATURE& Pack::_internal_ambient_temperature(int index) const {
  return ambient_temperature_.Get(index);
}
inline const ::primary::AMBIENT_TEMPERATURE& Pack::ambient_temperature(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.AMBIENT_TEMPERATURE)
  return _internal_ambient_temperature(index);
}
inline ::primary::AMBIENT_TEMPERATURE* Pack::_internal_add_ambient_temperature() {
  return ambient_temperature_.Add();
}
inline ::primary::AMBIENT_TEMPERATURE* Pack::add_ambient_temperature() {
  // @@protoc_insertion_point(field_add:primary.Pack.AMBIENT_TEMPERATURE)
  return _internal_add_ambient_temperature();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::AMBIENT_TEMPERATURE >&
Pack::ambient_temperature() const {
  // @@protoc_insertion_point(field_list:primary.Pack.AMBIENT_TEMPERATURE)
  return ambient_temperature_;
}

// repeated .primary.DATA_LOGGER DATA_LOGGER = 10;
inline int Pack::_internal_data_logger_size() const {
  return data_logger_.size();
}
inline int Pack::data_logger_size() const {
  return _internal_data_logger_size();
}
inline void Pack::clear_data_logger() {
  data_logger_.Clear();
}
inline ::primary::DATA_LOGGER* Pack::mutable_data_logger(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.DATA_LOGGER)
  return data_logger_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DATA_LOGGER >*
Pack::mutable_data_logger() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.DATA_LOGGER)
  return &data_logger_;
}
inline const ::primary::DATA_LOGGER& Pack::_internal_data_logger(int index) const {
  return data_logger_.Get(index);
}
inline const ::primary::DATA_LOGGER& Pack::data_logger(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.DATA_LOGGER)
  return _internal_data_logger(index);
}
inline ::primary::DATA_LOGGER* Pack::_internal_add_data_logger() {
  return data_logger_.Add();
}
inline ::primary::DATA_LOGGER* Pack::add_data_logger() {
  // @@protoc_insertion_point(field_add:primary.Pack.DATA_LOGGER)
  return _internal_add_data_logger();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DATA_LOGGER >&
Pack::data_logger() const {
  // @@protoc_insertion_point(field_list:primary.Pack.DATA_LOGGER)
  return data_logger_;
}

// repeated .primary.SET_TLM_STATUS SET_TLM_STATUS = 11;
inline int Pack::_internal_set_tlm_status_size() const {
  return set_tlm_status_.size();
}
inline int Pack::set_tlm_status_size() const {
  return _internal_set_tlm_status_size();
}
inline void Pack::clear_set_tlm_status() {
  set_tlm_status_.Clear();
}
inline ::primary::SET_TLM_STATUS* Pack::mutable_set_tlm_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_TLM_STATUS)
  return set_tlm_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TLM_STATUS >*
Pack::mutable_set_tlm_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_TLM_STATUS)
  return &set_tlm_status_;
}
inline const ::primary::SET_TLM_STATUS& Pack::_internal_set_tlm_status(int index) const {
  return set_tlm_status_.Get(index);
}
inline const ::primary::SET_TLM_STATUS& Pack::set_tlm_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_TLM_STATUS)
  return _internal_set_tlm_status(index);
}
inline ::primary::SET_TLM_STATUS* Pack::_internal_add_set_tlm_status() {
  return set_tlm_status_.Add();
}
inline ::primary::SET_TLM_STATUS* Pack::add_set_tlm_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_TLM_STATUS)
  return _internal_add_set_tlm_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TLM_STATUS >&
Pack::set_tlm_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_TLM_STATUS)
  return set_tlm_status_;
}

// repeated .primary.TLM_STATUS TLM_STATUS = 12;
inline int Pack::_internal_tlm_status_size() const {
  return tlm_status_.size();
}
inline int Pack::tlm_status_size() const {
  return _internal_tlm_status_size();
}
inline void Pack::clear_tlm_status() {
  tlm_status_.Clear();
}
inline ::primary::TLM_STATUS* Pack::mutable_tlm_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.TLM_STATUS)
  return tlm_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_STATUS >*
Pack::mutable_tlm_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.TLM_STATUS)
  return &tlm_status_;
}
inline const ::primary::TLM_STATUS& Pack::_internal_tlm_status(int index) const {
  return tlm_status_.Get(index);
}
inline const ::primary::TLM_STATUS& Pack::tlm_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.TLM_STATUS)
  return _internal_tlm_status(index);
}
inline ::primary::TLM_STATUS* Pack::_internal_add_tlm_status() {
  return tlm_status_.Add();
}
inline ::primary::TLM_STATUS* Pack::add_tlm_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.TLM_STATUS)
  return _internal_add_tlm_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TLM_STATUS >&
Pack::tlm_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.TLM_STATUS)
  return tlm_status_;
}

// repeated .primary.STEER_SYSTEM_STATUS STEER_SYSTEM_STATUS = 13;
inline int Pack::_internal_steer_system_status_size() const {
  return steer_system_status_.size();
}
inline int Pack::steer_system_status_size() const {
  return _internal_steer_system_status_size();
}
inline void Pack::clear_steer_system_status() {
  steer_system_status_.Clear();
}
inline ::primary::STEER_SYSTEM_STATUS* Pack::mutable_steer_system_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.STEER_SYSTEM_STATUS)
  return steer_system_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_SYSTEM_STATUS >*
Pack::mutable_steer_system_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.STEER_SYSTEM_STATUS)
  return &steer_system_status_;
}
inline const ::primary::STEER_SYSTEM_STATUS& Pack::_internal_steer_system_status(int index) const {
  return steer_system_status_.Get(index);
}
inline const ::primary::STEER_SYSTEM_STATUS& Pack::steer_system_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.STEER_SYSTEM_STATUS)
  return _internal_steer_system_status(index);
}
inline ::primary::STEER_SYSTEM_STATUS* Pack::_internal_add_steer_system_status() {
  return steer_system_status_.Add();
}
inline ::primary::STEER_SYSTEM_STATUS* Pack::add_steer_system_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.STEER_SYSTEM_STATUS)
  return _internal_add_steer_system_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_SYSTEM_STATUS >&
Pack::steer_system_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.STEER_SYSTEM_STATUS)
  return steer_system_status_;
}

// repeated .primary.HV_VOLTAGE HV_VOLTAGE = 14;
inline int Pack::_internal_hv_voltage_size() const {
  return hv_voltage_.size();
}
inline int Pack::hv_voltage_size() const {
  return _internal_hv_voltage_size();
}
inline void Pack::clear_hv_voltage() {
  hv_voltage_.Clear();
}
inline ::primary::HV_VOLTAGE* Pack::mutable_hv_voltage(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_VOLTAGE)
  return hv_voltage_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VOLTAGE >*
Pack::mutable_hv_voltage() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_VOLTAGE)
  return &hv_voltage_;
}
inline const ::primary::HV_VOLTAGE& Pack::_internal_hv_voltage(int index) const {
  return hv_voltage_.Get(index);
}
inline const ::primary::HV_VOLTAGE& Pack::hv_voltage(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_VOLTAGE)
  return _internal_hv_voltage(index);
}
inline ::primary::HV_VOLTAGE* Pack::_internal_add_hv_voltage() {
  return hv_voltage_.Add();
}
inline ::primary::HV_VOLTAGE* Pack::add_hv_voltage() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_VOLTAGE)
  return _internal_add_hv_voltage();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_VOLTAGE >&
Pack::hv_voltage() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_VOLTAGE)
  return hv_voltage_;
}

// repeated .primary.HV_CURRENT HV_CURRENT = 15;
inline int Pack::_internal_hv_current_size() const {
  return hv_current_.size();
}
inline int Pack::hv_current_size() const {
  return _internal_hv_current_size();
}
inline void Pack::clear_hv_current() {
  hv_current_.Clear();
}
inline ::primary::HV_CURRENT* Pack::mutable_hv_current(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_CURRENT)
  return hv_current_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CURRENT >*
Pack::mutable_hv_current() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_CURRENT)
  return &hv_current_;
}
inline const ::primary::HV_CURRENT& Pack::_internal_hv_current(int index) const {
  return hv_current_.Get(index);
}
inline const ::primary::HV_CURRENT& Pack::hv_current(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_CURRENT)
  return _internal_hv_current(index);
}
inline ::primary::HV_CURRENT* Pack::_internal_add_hv_current() {
  return hv_current_.Add();
}
inline ::primary::HV_CURRENT* Pack::add_hv_current() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_CURRENT)
  return _internal_add_hv_current();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CURRENT >&
Pack::hv_current() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_CURRENT)
  return hv_current_;
}

// repeated .primary.HV_TEMP HV_TEMP = 16;
inline int Pack::_internal_hv_temp_size() const {
  return hv_temp_.size();
}
inline int Pack::hv_temp_size() const {
  return _internal_hv_temp_size();
}
inline void Pack::clear_hv_temp() {
  hv_temp_.Clear();
}
inline ::primary::HV_TEMP* Pack::mutable_hv_temp(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_TEMP)
  return hv_temp_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_TEMP >*
Pack::mutable_hv_temp() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_TEMP)
  return &hv_temp_;
}
inline const ::primary::HV_TEMP& Pack::_internal_hv_temp(int index) const {
  return hv_temp_.Get(index);
}
inline const ::primary::HV_TEMP& Pack::hv_temp(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_TEMP)
  return _internal_hv_temp(index);
}
inline ::primary::HV_TEMP* Pack::_internal_add_hv_temp() {
  return hv_temp_.Add();
}
inline ::primary::HV_TEMP* Pack::add_hv_temp() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_TEMP)
  return _internal_add_hv_temp();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_TEMP >&
Pack::hv_temp() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_TEMP)
  return hv_temp_;
}

// repeated .primary.HV_ERRORS HV_ERRORS = 17;
inline int Pack::_internal_hv_errors_size() const {
  return hv_errors_.size();
}
inline int Pack::hv_errors_size() const {
  return _internal_hv_errors_size();
}
inline void Pack::clear_hv_errors() {
  hv_errors_.Clear();
}
inline ::primary::HV_ERRORS* Pack::mutable_hv_errors(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_ERRORS)
  return hv_errors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_ERRORS >*
Pack::mutable_hv_errors() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_ERRORS)
  return &hv_errors_;
}
inline const ::primary::HV_ERRORS& Pack::_internal_hv_errors(int index) const {
  return hv_errors_.Get(index);
}
inline const ::primary::HV_ERRORS& Pack::hv_errors(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_ERRORS)
  return _internal_hv_errors(index);
}
inline ::primary::HV_ERRORS* Pack::_internal_add_hv_errors() {
  return hv_errors_.Add();
}
inline ::primary::HV_ERRORS* Pack::add_hv_errors() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_ERRORS)
  return _internal_add_hv_errors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_ERRORS >&
Pack::hv_errors() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_ERRORS)
  return hv_errors_;
}

// repeated .primary.HV_CAN_FORWARD HV_CAN_FORWARD = 18;
inline int Pack::_internal_hv_can_forward_size() const {
  return hv_can_forward_.size();
}
inline int Pack::hv_can_forward_size() const {
  return _internal_hv_can_forward_size();
}
inline void Pack::clear_hv_can_forward() {
  hv_can_forward_.Clear();
}
inline ::primary::HV_CAN_FORWARD* Pack::mutable_hv_can_forward(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_CAN_FORWARD)
  return hv_can_forward_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD >*
Pack::mutable_hv_can_forward() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_CAN_FORWARD)
  return &hv_can_forward_;
}
inline const ::primary::HV_CAN_FORWARD& Pack::_internal_hv_can_forward(int index) const {
  return hv_can_forward_.Get(index);
}
inline const ::primary::HV_CAN_FORWARD& Pack::hv_can_forward(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_CAN_FORWARD)
  return _internal_hv_can_forward(index);
}
inline ::primary::HV_CAN_FORWARD* Pack::_internal_add_hv_can_forward() {
  return hv_can_forward_.Add();
}
inline ::primary::HV_CAN_FORWARD* Pack::add_hv_can_forward() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_CAN_FORWARD)
  return _internal_add_hv_can_forward();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD >&
Pack::hv_can_forward() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_CAN_FORWARD)
  return hv_can_forward_;
}

// repeated .primary.HV_FANS_OVERRIDE HV_FANS_OVERRIDE = 19;
inline int Pack::_internal_hv_fans_override_size() const {
  return hv_fans_override_.size();
}
inline int Pack::hv_fans_override_size() const {
  return _internal_hv_fans_override_size();
}
inline void Pack::clear_hv_fans_override() {
  hv_fans_override_.Clear();
}
inline ::primary::HV_FANS_OVERRIDE* Pack::mutable_hv_fans_override(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_FANS_OVERRIDE)
  return hv_fans_override_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE >*
Pack::mutable_hv_fans_override() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_FANS_OVERRIDE)
  return &hv_fans_override_;
}
inline const ::primary::HV_FANS_OVERRIDE& Pack::_internal_hv_fans_override(int index) const {
  return hv_fans_override_.Get(index);
}
inline const ::primary::HV_FANS_OVERRIDE& Pack::hv_fans_override(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_FANS_OVERRIDE)
  return _internal_hv_fans_override(index);
}
inline ::primary::HV_FANS_OVERRIDE* Pack::_internal_add_hv_fans_override() {
  return hv_fans_override_.Add();
}
inline ::primary::HV_FANS_OVERRIDE* Pack::add_hv_fans_override() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_FANS_OVERRIDE)
  return _internal_add_hv_fans_override();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE >&
Pack::hv_fans_override() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_FANS_OVERRIDE)
  return hv_fans_override_;
}

// repeated .primary.HV_CAN_FORWARD_STATUS HV_CAN_FORWARD_STATUS = 20;
inline int Pack::_internal_hv_can_forward_status_size() const {
  return hv_can_forward_status_.size();
}
inline int Pack::hv_can_forward_status_size() const {
  return _internal_hv_can_forward_status_size();
}
inline void Pack::clear_hv_can_forward_status() {
  hv_can_forward_status_.Clear();
}
inline ::primary::HV_CAN_FORWARD_STATUS* Pack::mutable_hv_can_forward_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_CAN_FORWARD_STATUS)
  return hv_can_forward_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD_STATUS >*
Pack::mutable_hv_can_forward_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_CAN_FORWARD_STATUS)
  return &hv_can_forward_status_;
}
inline const ::primary::HV_CAN_FORWARD_STATUS& Pack::_internal_hv_can_forward_status(int index) const {
  return hv_can_forward_status_.Get(index);
}
inline const ::primary::HV_CAN_FORWARD_STATUS& Pack::hv_can_forward_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_CAN_FORWARD_STATUS)
  return _internal_hv_can_forward_status(index);
}
inline ::primary::HV_CAN_FORWARD_STATUS* Pack::_internal_add_hv_can_forward_status() {
  return hv_can_forward_status_.Add();
}
inline ::primary::HV_CAN_FORWARD_STATUS* Pack::add_hv_can_forward_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_CAN_FORWARD_STATUS)
  return _internal_add_hv_can_forward_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CAN_FORWARD_STATUS >&
Pack::hv_can_forward_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_CAN_FORWARD_STATUS)
  return hv_can_forward_status_;
}

// repeated .primary.HV_FANS_OVERRIDE_STATUS HV_FANS_OVERRIDE_STATUS = 21;
inline int Pack::_internal_hv_fans_override_status_size() const {
  return hv_fans_override_status_.size();
}
inline int Pack::hv_fans_override_status_size() const {
  return _internal_hv_fans_override_status_size();
}
inline void Pack::clear_hv_fans_override_status() {
  hv_fans_override_status_.Clear();
}
inline ::primary::HV_FANS_OVERRIDE_STATUS* Pack::mutable_hv_fans_override_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_FANS_OVERRIDE_STATUS)
  return hv_fans_override_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE_STATUS >*
Pack::mutable_hv_fans_override_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_FANS_OVERRIDE_STATUS)
  return &hv_fans_override_status_;
}
inline const ::primary::HV_FANS_OVERRIDE_STATUS& Pack::_internal_hv_fans_override_status(int index) const {
  return hv_fans_override_status_.Get(index);
}
inline const ::primary::HV_FANS_OVERRIDE_STATUS& Pack::hv_fans_override_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_FANS_OVERRIDE_STATUS)
  return _internal_hv_fans_override_status(index);
}
inline ::primary::HV_FANS_OVERRIDE_STATUS* Pack::_internal_add_hv_fans_override_status() {
  return hv_fans_override_status_.Add();
}
inline ::primary::HV_FANS_OVERRIDE_STATUS* Pack::add_hv_fans_override_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_FANS_OVERRIDE_STATUS)
  return _internal_add_hv_fans_override_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FANS_OVERRIDE_STATUS >&
Pack::hv_fans_override_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_FANS_OVERRIDE_STATUS)
  return hv_fans_override_status_;
}

// repeated .primary.HV_FEEDBACKS_STATUS HV_FEEDBACKS_STATUS = 22;
inline int Pack::_internal_hv_feedbacks_status_size() const {
  return hv_feedbacks_status_.size();
}
inline int Pack::hv_feedbacks_status_size() const {
  return _internal_hv_feedbacks_status_size();
}
inline void Pack::clear_hv_feedbacks_status() {
  hv_feedbacks_status_.Clear();
}
inline ::primary::HV_FEEDBACKS_STATUS* Pack::mutable_hv_feedbacks_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_FEEDBACKS_STATUS)
  return hv_feedbacks_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FEEDBACKS_STATUS >*
Pack::mutable_hv_feedbacks_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_FEEDBACKS_STATUS)
  return &hv_feedbacks_status_;
}
inline const ::primary::HV_FEEDBACKS_STATUS& Pack::_internal_hv_feedbacks_status(int index) const {
  return hv_feedbacks_status_.Get(index);
}
inline const ::primary::HV_FEEDBACKS_STATUS& Pack::hv_feedbacks_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_FEEDBACKS_STATUS)
  return _internal_hv_feedbacks_status(index);
}
inline ::primary::HV_FEEDBACKS_STATUS* Pack::_internal_add_hv_feedbacks_status() {
  return hv_feedbacks_status_.Add();
}
inline ::primary::HV_FEEDBACKS_STATUS* Pack::add_hv_feedbacks_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_FEEDBACKS_STATUS)
  return _internal_add_hv_feedbacks_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_FEEDBACKS_STATUS >&
Pack::hv_feedbacks_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_FEEDBACKS_STATUS)
  return hv_feedbacks_status_;
}

// repeated .primary.HV_IMD_STATUS HV_IMD_STATUS = 23;
inline int Pack::_internal_hv_imd_status_size() const {
  return hv_imd_status_.size();
}
inline int Pack::hv_imd_status_size() const {
  return _internal_hv_imd_status_size();
}
inline void Pack::clear_hv_imd_status() {
  hv_imd_status_.Clear();
}
inline ::primary::HV_IMD_STATUS* Pack::mutable_hv_imd_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_IMD_STATUS)
  return hv_imd_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_IMD_STATUS >*
Pack::mutable_hv_imd_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_IMD_STATUS)
  return &hv_imd_status_;
}
inline const ::primary::HV_IMD_STATUS& Pack::_internal_hv_imd_status(int index) const {
  return hv_imd_status_.Get(index);
}
inline const ::primary::HV_IMD_STATUS& Pack::hv_imd_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_IMD_STATUS)
  return _internal_hv_imd_status(index);
}
inline ::primary::HV_IMD_STATUS* Pack::_internal_add_hv_imd_status() {
  return hv_imd_status_.Add();
}
inline ::primary::HV_IMD_STATUS* Pack::add_hv_imd_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_IMD_STATUS)
  return _internal_add_hv_imd_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_IMD_STATUS >&
Pack::hv_imd_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_IMD_STATUS)
  return hv_imd_status_;
}

// repeated .primary.TS_STATUS_DAS TS_STATUS_DAS = 24;
inline int Pack::_internal_ts_status_das_size() const {
  return ts_status_das_.size();
}
inline int Pack::ts_status_das_size() const {
  return _internal_ts_status_das_size();
}
inline void Pack::clear_ts_status_das() {
  ts_status_das_.Clear();
}
inline ::primary::TS_STATUS_DAS* Pack::mutable_ts_status_das(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.TS_STATUS_DAS)
  return ts_status_das_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_DAS >*
Pack::mutable_ts_status_das() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.TS_STATUS_DAS)
  return &ts_status_das_;
}
inline const ::primary::TS_STATUS_DAS& Pack::_internal_ts_status_das(int index) const {
  return ts_status_das_.Get(index);
}
inline const ::primary::TS_STATUS_DAS& Pack::ts_status_das(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.TS_STATUS_DAS)
  return _internal_ts_status_das(index);
}
inline ::primary::TS_STATUS_DAS* Pack::_internal_add_ts_status_das() {
  return ts_status_das_.Add();
}
inline ::primary::TS_STATUS_DAS* Pack::add_ts_status_das() {
  // @@protoc_insertion_point(field_add:primary.Pack.TS_STATUS_DAS)
  return _internal_add_ts_status_das();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_DAS >&
Pack::ts_status_das() const {
  // @@protoc_insertion_point(field_list:primary.Pack.TS_STATUS_DAS)
  return ts_status_das_;
}

// repeated .primary.TS_STATUS_STEER TS_STATUS_STEER = 25;
inline int Pack::_internal_ts_status_steer_size() const {
  return ts_status_steer_.size();
}
inline int Pack::ts_status_steer_size() const {
  return _internal_ts_status_steer_size();
}
inline void Pack::clear_ts_status_steer() {
  ts_status_steer_.Clear();
}
inline ::primary::TS_STATUS_STEER* Pack::mutable_ts_status_steer(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.TS_STATUS_STEER)
  return ts_status_steer_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_STEER >*
Pack::mutable_ts_status_steer() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.TS_STATUS_STEER)
  return &ts_status_steer_;
}
inline const ::primary::TS_STATUS_STEER& Pack::_internal_ts_status_steer(int index) const {
  return ts_status_steer_.Get(index);
}
inline const ::primary::TS_STATUS_STEER& Pack::ts_status_steer(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.TS_STATUS_STEER)
  return _internal_ts_status_steer(index);
}
inline ::primary::TS_STATUS_STEER* Pack::_internal_add_ts_status_steer() {
  return ts_status_steer_.Add();
}
inline ::primary::TS_STATUS_STEER* Pack::add_ts_status_steer() {
  // @@protoc_insertion_point(field_add:primary.Pack.TS_STATUS_STEER)
  return _internal_add_ts_status_steer();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_STEER >&
Pack::ts_status_steer() const {
  // @@protoc_insertion_point(field_list:primary.Pack.TS_STATUS_STEER)
  return ts_status_steer_;
}

// repeated .primary.TS_STATUS_HANDCART TS_STATUS_HANDCART = 26;
inline int Pack::_internal_ts_status_handcart_size() const {
  return ts_status_handcart_.size();
}
inline int Pack::ts_status_handcart_size() const {
  return _internal_ts_status_handcart_size();
}
inline void Pack::clear_ts_status_handcart() {
  ts_status_handcart_.Clear();
}
inline ::primary::TS_STATUS_HANDCART* Pack::mutable_ts_status_handcart(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.TS_STATUS_HANDCART)
  return ts_status_handcart_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_HANDCART >*
Pack::mutable_ts_status_handcart() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.TS_STATUS_HANDCART)
  return &ts_status_handcart_;
}
inline const ::primary::TS_STATUS_HANDCART& Pack::_internal_ts_status_handcart(int index) const {
  return ts_status_handcart_.Get(index);
}
inline const ::primary::TS_STATUS_HANDCART& Pack::ts_status_handcart(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.TS_STATUS_HANDCART)
  return _internal_ts_status_handcart(index);
}
inline ::primary::TS_STATUS_HANDCART* Pack::_internal_add_ts_status_handcart() {
  return ts_status_handcart_.Add();
}
inline ::primary::TS_STATUS_HANDCART* Pack::add_ts_status_handcart() {
  // @@protoc_insertion_point(field_add:primary.Pack.TS_STATUS_HANDCART)
  return _internal_add_ts_status_handcart();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::TS_STATUS_HANDCART >&
Pack::ts_status_handcart() const {
  // @@protoc_insertion_point(field_list:primary.Pack.TS_STATUS_HANDCART)
  return ts_status_handcart_;
}

// repeated .primary.SET_TS_STATUS_DAS SET_TS_STATUS_DAS = 27;
inline int Pack::_internal_set_ts_status_das_size() const {
  return set_ts_status_das_.size();
}
inline int Pack::set_ts_status_das_size() const {
  return _internal_set_ts_status_das_size();
}
inline void Pack::clear_set_ts_status_das() {
  set_ts_status_das_.Clear();
}
inline ::primary::SET_TS_STATUS_DAS* Pack::mutable_set_ts_status_das(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_TS_STATUS_DAS)
  return set_ts_status_das_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_DAS >*
Pack::mutable_set_ts_status_das() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_TS_STATUS_DAS)
  return &set_ts_status_das_;
}
inline const ::primary::SET_TS_STATUS_DAS& Pack::_internal_set_ts_status_das(int index) const {
  return set_ts_status_das_.Get(index);
}
inline const ::primary::SET_TS_STATUS_DAS& Pack::set_ts_status_das(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_TS_STATUS_DAS)
  return _internal_set_ts_status_das(index);
}
inline ::primary::SET_TS_STATUS_DAS* Pack::_internal_add_set_ts_status_das() {
  return set_ts_status_das_.Add();
}
inline ::primary::SET_TS_STATUS_DAS* Pack::add_set_ts_status_das() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_TS_STATUS_DAS)
  return _internal_add_set_ts_status_das();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_DAS >&
Pack::set_ts_status_das() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_TS_STATUS_DAS)
  return set_ts_status_das_;
}

// repeated .primary.SET_TS_STATUS_HANDCART SET_TS_STATUS_HANDCART = 28;
inline int Pack::_internal_set_ts_status_handcart_size() const {
  return set_ts_status_handcart_.size();
}
inline int Pack::set_ts_status_handcart_size() const {
  return _internal_set_ts_status_handcart_size();
}
inline void Pack::clear_set_ts_status_handcart() {
  set_ts_status_handcart_.Clear();
}
inline ::primary::SET_TS_STATUS_HANDCART* Pack::mutable_set_ts_status_handcart(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_TS_STATUS_HANDCART)
  return set_ts_status_handcart_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_HANDCART >*
Pack::mutable_set_ts_status_handcart() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_TS_STATUS_HANDCART)
  return &set_ts_status_handcart_;
}
inline const ::primary::SET_TS_STATUS_HANDCART& Pack::_internal_set_ts_status_handcart(int index) const {
  return set_ts_status_handcart_.Get(index);
}
inline const ::primary::SET_TS_STATUS_HANDCART& Pack::set_ts_status_handcart(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_TS_STATUS_HANDCART)
  return _internal_set_ts_status_handcart(index);
}
inline ::primary::SET_TS_STATUS_HANDCART* Pack::_internal_add_set_ts_status_handcart() {
  return set_ts_status_handcart_.Add();
}
inline ::primary::SET_TS_STATUS_HANDCART* Pack::add_set_ts_status_handcart() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_TS_STATUS_HANDCART)
  return _internal_add_set_ts_status_handcart();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_TS_STATUS_HANDCART >&
Pack::set_ts_status_handcart() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_TS_STATUS_HANDCART)
  return set_ts_status_handcart_;
}

// repeated .primary.STEER_STATUS STEER_STATUS = 29;
inline int Pack::_internal_steer_status_size() const {
  return steer_status_.size();
}
inline int Pack::steer_status_size() const {
  return _internal_steer_status_size();
}
inline void Pack::clear_steer_status() {
  steer_status_.Clear();
}
inline ::primary::STEER_STATUS* Pack::mutable_steer_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.STEER_STATUS)
  return steer_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_STATUS >*
Pack::mutable_steer_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.STEER_STATUS)
  return &steer_status_;
}
inline const ::primary::STEER_STATUS& Pack::_internal_steer_status(int index) const {
  return steer_status_.Get(index);
}
inline const ::primary::STEER_STATUS& Pack::steer_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.STEER_STATUS)
  return _internal_steer_status(index);
}
inline ::primary::STEER_STATUS* Pack::_internal_add_steer_status() {
  return steer_status_.Add();
}
inline ::primary::STEER_STATUS* Pack::add_steer_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.STEER_STATUS)
  return _internal_add_steer_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::STEER_STATUS >&
Pack::steer_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.STEER_STATUS)
  return steer_status_;
}

// repeated .primary.SET_CAR_STATUS SET_CAR_STATUS = 30;
inline int Pack::_internal_set_car_status_size() const {
  return set_car_status_.size();
}
inline int Pack::set_car_status_size() const {
  return _internal_set_car_status_size();
}
inline void Pack::clear_set_car_status() {
  set_car_status_.Clear();
}
inline ::primary::SET_CAR_STATUS* Pack::mutable_set_car_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_CAR_STATUS)
  return set_car_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CAR_STATUS >*
Pack::mutable_set_car_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_CAR_STATUS)
  return &set_car_status_;
}
inline const ::primary::SET_CAR_STATUS& Pack::_internal_set_car_status(int index) const {
  return set_car_status_.Get(index);
}
inline const ::primary::SET_CAR_STATUS& Pack::set_car_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_CAR_STATUS)
  return _internal_set_car_status(index);
}
inline ::primary::SET_CAR_STATUS* Pack::_internal_add_set_car_status() {
  return set_car_status_.Add();
}
inline ::primary::SET_CAR_STATUS* Pack::add_set_car_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_CAR_STATUS)
  return _internal_add_set_car_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CAR_STATUS >&
Pack::set_car_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_CAR_STATUS)
  return set_car_status_;
}

// repeated .primary.SET_PEDALS_RANGE SET_PEDALS_RANGE = 31;
inline int Pack::_internal_set_pedals_range_size() const {
  return set_pedals_range_.size();
}
inline int Pack::set_pedals_range_size() const {
  return _internal_set_pedals_range_size();
}
inline void Pack::clear_set_pedals_range() {
  set_pedals_range_.Clear();
}
inline ::primary::SET_PEDALS_RANGE* Pack::mutable_set_pedals_range(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_PEDALS_RANGE)
  return set_pedals_range_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PEDALS_RANGE >*
Pack::mutable_set_pedals_range() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_PEDALS_RANGE)
  return &set_pedals_range_;
}
inline const ::primary::SET_PEDALS_RANGE& Pack::_internal_set_pedals_range(int index) const {
  return set_pedals_range_.Get(index);
}
inline const ::primary::SET_PEDALS_RANGE& Pack::set_pedals_range(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_PEDALS_RANGE)
  return _internal_set_pedals_range(index);
}
inline ::primary::SET_PEDALS_RANGE* Pack::_internal_add_set_pedals_range() {
  return set_pedals_range_.Add();
}
inline ::primary::SET_PEDALS_RANGE* Pack::add_set_pedals_range() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_PEDALS_RANGE)
  return _internal_add_set_pedals_range();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PEDALS_RANGE >&
Pack::set_pedals_range() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_PEDALS_RANGE)
  return set_pedals_range_;
}

// repeated .primary.SET_STEERING_ANGLE_RANGE SET_STEERING_ANGLE_RANGE = 32;
inline int Pack::_internal_set_steering_angle_range_size() const {
  return set_steering_angle_range_.size();
}
inline int Pack::set_steering_angle_range_size() const {
  return _internal_set_steering_angle_range_size();
}
inline void Pack::clear_set_steering_angle_range() {
  set_steering_angle_range_.Clear();
}
inline ::primary::SET_STEERING_ANGLE_RANGE* Pack::mutable_set_steering_angle_range(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_STEERING_ANGLE_RANGE)
  return set_steering_angle_range_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_STEERING_ANGLE_RANGE >*
Pack::mutable_set_steering_angle_range() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_STEERING_ANGLE_RANGE)
  return &set_steering_angle_range_;
}
inline const ::primary::SET_STEERING_ANGLE_RANGE& Pack::_internal_set_steering_angle_range(int index) const {
  return set_steering_angle_range_.Get(index);
}
inline const ::primary::SET_STEERING_ANGLE_RANGE& Pack::set_steering_angle_range(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_STEERING_ANGLE_RANGE)
  return _internal_set_steering_angle_range(index);
}
inline ::primary::SET_STEERING_ANGLE_RANGE* Pack::_internal_add_set_steering_angle_range() {
  return set_steering_angle_range_.Add();
}
inline ::primary::SET_STEERING_ANGLE_RANGE* Pack::add_set_steering_angle_range() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_STEERING_ANGLE_RANGE)
  return _internal_add_set_steering_angle_range();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_STEERING_ANGLE_RANGE >&
Pack::set_steering_angle_range() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_STEERING_ANGLE_RANGE)
  return set_steering_angle_range_;
}

// repeated .primary.CAR_STATUS CAR_STATUS = 33;
inline int Pack::_internal_car_status_size() const {
  return car_status_.size();
}
inline int Pack::car_status_size() const {
  return _internal_car_status_size();
}
inline void Pack::clear_car_status() {
  car_status_.Clear();
}
inline ::primary::CAR_STATUS* Pack::mutable_car_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.CAR_STATUS)
  return car_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CAR_STATUS >*
Pack::mutable_car_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.CAR_STATUS)
  return &car_status_;
}
inline const ::primary::CAR_STATUS& Pack::_internal_car_status(int index) const {
  return car_status_.Get(index);
}
inline const ::primary::CAR_STATUS& Pack::car_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.CAR_STATUS)
  return _internal_car_status(index);
}
inline ::primary::CAR_STATUS* Pack::_internal_add_car_status() {
  return car_status_.Add();
}
inline ::primary::CAR_STATUS* Pack::add_car_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.CAR_STATUS)
  return _internal_add_car_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CAR_STATUS >&
Pack::car_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.CAR_STATUS)
  return car_status_;
}

// repeated .primary.DAS_ERRORS DAS_ERRORS = 34;
inline int Pack::_internal_das_errors_size() const {
  return das_errors_.size();
}
inline int Pack::das_errors_size() const {
  return _internal_das_errors_size();
}
inline void Pack::clear_das_errors() {
  das_errors_.Clear();
}
inline ::primary::DAS_ERRORS* Pack::mutable_das_errors(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.DAS_ERRORS)
  return das_errors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_ERRORS >*
Pack::mutable_das_errors() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.DAS_ERRORS)
  return &das_errors_;
}
inline const ::primary::DAS_ERRORS& Pack::_internal_das_errors(int index) const {
  return das_errors_.Get(index);
}
inline const ::primary::DAS_ERRORS& Pack::das_errors(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.DAS_ERRORS)
  return _internal_das_errors(index);
}
inline ::primary::DAS_ERRORS* Pack::_internal_add_das_errors() {
  return das_errors_.Add();
}
inline ::primary::DAS_ERRORS* Pack::add_das_errors() {
  // @@protoc_insertion_point(field_add:primary.Pack.DAS_ERRORS)
  return _internal_add_das_errors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::DAS_ERRORS >&
Pack::das_errors() const {
  // @@protoc_insertion_point(field_list:primary.Pack.DAS_ERRORS)
  return das_errors_;
}

// repeated .primary.LV_CURRENT LV_CURRENT = 35;
inline int Pack::_internal_lv_current_size() const {
  return lv_current_.size();
}
inline int Pack::lv_current_size() const {
  return _internal_lv_current_size();
}
inline void Pack::clear_lv_current() {
  lv_current_.Clear();
}
inline ::primary::LV_CURRENT* Pack::mutable_lv_current(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.LV_CURRENT)
  return lv_current_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_CURRENT >*
Pack::mutable_lv_current() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.LV_CURRENT)
  return &lv_current_;
}
inline const ::primary::LV_CURRENT& Pack::_internal_lv_current(int index) const {
  return lv_current_.Get(index);
}
inline const ::primary::LV_CURRENT& Pack::lv_current(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.LV_CURRENT)
  return _internal_lv_current(index);
}
inline ::primary::LV_CURRENT* Pack::_internal_add_lv_current() {
  return lv_current_.Add();
}
inline ::primary::LV_CURRENT* Pack::add_lv_current() {
  // @@protoc_insertion_point(field_add:primary.Pack.LV_CURRENT)
  return _internal_add_lv_current();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_CURRENT >&
Pack::lv_current() const {
  // @@protoc_insertion_point(field_list:primary.Pack.LV_CURRENT)
  return lv_current_;
}

// repeated .primary.LV_VOLTAGE LV_VOLTAGE = 36;
inline int Pack::_internal_lv_voltage_size() const {
  return lv_voltage_.size();
}
inline int Pack::lv_voltage_size() const {
  return _internal_lv_voltage_size();
}
inline void Pack::clear_lv_voltage() {
  lv_voltage_.Clear();
}
inline ::primary::LV_VOLTAGE* Pack::mutable_lv_voltage(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.LV_VOLTAGE)
  return lv_voltage_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VOLTAGE >*
Pack::mutable_lv_voltage() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.LV_VOLTAGE)
  return &lv_voltage_;
}
inline const ::primary::LV_VOLTAGE& Pack::_internal_lv_voltage(int index) const {
  return lv_voltage_.Get(index);
}
inline const ::primary::LV_VOLTAGE& Pack::lv_voltage(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.LV_VOLTAGE)
  return _internal_lv_voltage(index);
}
inline ::primary::LV_VOLTAGE* Pack::_internal_add_lv_voltage() {
  return lv_voltage_.Add();
}
inline ::primary::LV_VOLTAGE* Pack::add_lv_voltage() {
  // @@protoc_insertion_point(field_add:primary.Pack.LV_VOLTAGE)
  return _internal_add_lv_voltage();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_VOLTAGE >&
Pack::lv_voltage() const {
  // @@protoc_insertion_point(field_list:primary.Pack.LV_VOLTAGE)
  return lv_voltage_;
}

// repeated .primary.LV_TOTAL_VOLTAGE LV_TOTAL_VOLTAGE = 37;
inline int Pack::_internal_lv_total_voltage_size() const {
  return lv_total_voltage_.size();
}
inline int Pack::lv_total_voltage_size() const {
  return _internal_lv_total_voltage_size();
}
inline void Pack::clear_lv_total_voltage() {
  lv_total_voltage_.Clear();
}
inline ::primary::LV_TOTAL_VOLTAGE* Pack::mutable_lv_total_voltage(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.LV_TOTAL_VOLTAGE)
  return lv_total_voltage_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TOTAL_VOLTAGE >*
Pack::mutable_lv_total_voltage() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.LV_TOTAL_VOLTAGE)
  return &lv_total_voltage_;
}
inline const ::primary::LV_TOTAL_VOLTAGE& Pack::_internal_lv_total_voltage(int index) const {
  return lv_total_voltage_.Get(index);
}
inline const ::primary::LV_TOTAL_VOLTAGE& Pack::lv_total_voltage(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.LV_TOTAL_VOLTAGE)
  return _internal_lv_total_voltage(index);
}
inline ::primary::LV_TOTAL_VOLTAGE* Pack::_internal_add_lv_total_voltage() {
  return lv_total_voltage_.Add();
}
inline ::primary::LV_TOTAL_VOLTAGE* Pack::add_lv_total_voltage() {
  // @@protoc_insertion_point(field_add:primary.Pack.LV_TOTAL_VOLTAGE)
  return _internal_add_lv_total_voltage();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TOTAL_VOLTAGE >&
Pack::lv_total_voltage() const {
  // @@protoc_insertion_point(field_list:primary.Pack.LV_TOTAL_VOLTAGE)
  return lv_total_voltage_;
}

// repeated .primary.LV_TEMPERATURE LV_TEMPERATURE = 38;
inline int Pack::_internal_lv_temperature_size() const {
  return lv_temperature_.size();
}
inline int Pack::lv_temperature_size() const {
  return _internal_lv_temperature_size();
}
inline void Pack::clear_lv_temperature() {
  lv_temperature_.Clear();
}
inline ::primary::LV_TEMPERATURE* Pack::mutable_lv_temperature(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.LV_TEMPERATURE)
  return lv_temperature_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TEMPERATURE >*
Pack::mutable_lv_temperature() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.LV_TEMPERATURE)
  return &lv_temperature_;
}
inline const ::primary::LV_TEMPERATURE& Pack::_internal_lv_temperature(int index) const {
  return lv_temperature_.Get(index);
}
inline const ::primary::LV_TEMPERATURE& Pack::lv_temperature(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.LV_TEMPERATURE)
  return _internal_lv_temperature(index);
}
inline ::primary::LV_TEMPERATURE* Pack::_internal_add_lv_temperature() {
  return lv_temperature_.Add();
}
inline ::primary::LV_TEMPERATURE* Pack::add_lv_temperature() {
  // @@protoc_insertion_point(field_add:primary.Pack.LV_TEMPERATURE)
  return _internal_add_lv_temperature();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_TEMPERATURE >&
Pack::lv_temperature() const {
  // @@protoc_insertion_point(field_list:primary.Pack.LV_TEMPERATURE)
  return lv_temperature_;
}

// repeated .primary.COOLING_STATUS COOLING_STATUS = 39;
inline int Pack::_internal_cooling_status_size() const {
  return cooling_status_.size();
}
inline int Pack::cooling_status_size() const {
  return _internal_cooling_status_size();
}
inline void Pack::clear_cooling_status() {
  cooling_status_.Clear();
}
inline ::primary::COOLING_STATUS* Pack::mutable_cooling_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.COOLING_STATUS)
  return cooling_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::COOLING_STATUS >*
Pack::mutable_cooling_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.COOLING_STATUS)
  return &cooling_status_;
}
inline const ::primary::COOLING_STATUS& Pack::_internal_cooling_status(int index) const {
  return cooling_status_.Get(index);
}
inline const ::primary::COOLING_STATUS& Pack::cooling_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.COOLING_STATUS)
  return _internal_cooling_status(index);
}
inline ::primary::COOLING_STATUS* Pack::_internal_add_cooling_status() {
  return cooling_status_.Add();
}
inline ::primary::COOLING_STATUS* Pack::add_cooling_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.COOLING_STATUS)
  return _internal_add_cooling_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::COOLING_STATUS >&
Pack::cooling_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.COOLING_STATUS)
  return cooling_status_;
}

// repeated .primary.SET_RADIATOR_SPEED SET_RADIATOR_SPEED = 40;
inline int Pack::_internal_set_radiator_speed_size() const {
  return set_radiator_speed_.size();
}
inline int Pack::set_radiator_speed_size() const {
  return _internal_set_radiator_speed_size();
}
inline void Pack::clear_set_radiator_speed() {
  set_radiator_speed_.Clear();
}
inline ::primary::SET_RADIATOR_SPEED* Pack::mutable_set_radiator_speed(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_RADIATOR_SPEED)
  return set_radiator_speed_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_RADIATOR_SPEED >*
Pack::mutable_set_radiator_speed() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_RADIATOR_SPEED)
  return &set_radiator_speed_;
}
inline const ::primary::SET_RADIATOR_SPEED& Pack::_internal_set_radiator_speed(int index) const {
  return set_radiator_speed_.Get(index);
}
inline const ::primary::SET_RADIATOR_SPEED& Pack::set_radiator_speed(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_RADIATOR_SPEED)
  return _internal_set_radiator_speed(index);
}
inline ::primary::SET_RADIATOR_SPEED* Pack::_internal_add_set_radiator_speed() {
  return set_radiator_speed_.Add();
}
inline ::primary::SET_RADIATOR_SPEED* Pack::add_set_radiator_speed() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_RADIATOR_SPEED)
  return _internal_add_set_radiator_speed();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_RADIATOR_SPEED >&
Pack::set_radiator_speed() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_RADIATOR_SPEED)
  return set_radiator_speed_;
}

// repeated .primary.SET_PUMPS_SPEED SET_PUMPS_SPEED = 41;
inline int Pack::_internal_set_pumps_speed_size() const {
  return set_pumps_speed_.size();
}
inline int Pack::set_pumps_speed_size() const {
  return _internal_set_pumps_speed_size();
}
inline void Pack::clear_set_pumps_speed() {
  set_pumps_speed_.Clear();
}
inline ::primary::SET_PUMPS_SPEED* Pack::mutable_set_pumps_speed(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_PUMPS_SPEED)
  return set_pumps_speed_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PUMPS_SPEED >*
Pack::mutable_set_pumps_speed() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_PUMPS_SPEED)
  return &set_pumps_speed_;
}
inline const ::primary::SET_PUMPS_SPEED& Pack::_internal_set_pumps_speed(int index) const {
  return set_pumps_speed_.Get(index);
}
inline const ::primary::SET_PUMPS_SPEED& Pack::set_pumps_speed(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_PUMPS_SPEED)
  return _internal_set_pumps_speed(index);
}
inline ::primary::SET_PUMPS_SPEED* Pack::_internal_add_set_pumps_speed() {
  return set_pumps_speed_.Add();
}
inline ::primary::SET_PUMPS_SPEED* Pack::add_set_pumps_speed() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_PUMPS_SPEED)
  return _internal_add_set_pumps_speed();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_PUMPS_SPEED >&
Pack::set_pumps_speed() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_PUMPS_SPEED)
  return set_pumps_speed_;
}

// repeated .primary.SET_INVERTER_CONNECTION_STATUS SET_INVERTER_CONNECTION_STATUS = 42;
inline int Pack::_internal_set_inverter_connection_status_size() const {
  return set_inverter_connection_status_.size();
}
inline int Pack::set_inverter_connection_status_size() const {
  return _internal_set_inverter_connection_status_size();
}
inline void Pack::clear_set_inverter_connection_status() {
  set_inverter_connection_status_.Clear();
}
inline ::primary::SET_INVERTER_CONNECTION_STATUS* Pack::mutable_set_inverter_connection_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_INVERTER_CONNECTION_STATUS)
  return set_inverter_connection_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_INVERTER_CONNECTION_STATUS >*
Pack::mutable_set_inverter_connection_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_INVERTER_CONNECTION_STATUS)
  return &set_inverter_connection_status_;
}
inline const ::primary::SET_INVERTER_CONNECTION_STATUS& Pack::_internal_set_inverter_connection_status(int index) const {
  return set_inverter_connection_status_.Get(index);
}
inline const ::primary::SET_INVERTER_CONNECTION_STATUS& Pack::set_inverter_connection_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_INVERTER_CONNECTION_STATUS)
  return _internal_set_inverter_connection_status(index);
}
inline ::primary::SET_INVERTER_CONNECTION_STATUS* Pack::_internal_add_set_inverter_connection_status() {
  return set_inverter_connection_status_.Add();
}
inline ::primary::SET_INVERTER_CONNECTION_STATUS* Pack::add_set_inverter_connection_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_INVERTER_CONNECTION_STATUS)
  return _internal_add_set_inverter_connection_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_INVERTER_CONNECTION_STATUS >&
Pack::set_inverter_connection_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_INVERTER_CONNECTION_STATUS)
  return set_inverter_connection_status_;
}

// repeated .primary.INVERTER_CONNECTION_STATUS INVERTER_CONNECTION_STATUS = 43;
inline int Pack::_internal_inverter_connection_status_size() const {
  return inverter_connection_status_.size();
}
inline int Pack::inverter_connection_status_size() const {
  return _internal_inverter_connection_status_size();
}
inline void Pack::clear_inverter_connection_status() {
  inverter_connection_status_.Clear();
}
inline ::primary::INVERTER_CONNECTION_STATUS* Pack::mutable_inverter_connection_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.INVERTER_CONNECTION_STATUS)
  return inverter_connection_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INVERTER_CONNECTION_STATUS >*
Pack::mutable_inverter_connection_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.INVERTER_CONNECTION_STATUS)
  return &inverter_connection_status_;
}
inline const ::primary::INVERTER_CONNECTION_STATUS& Pack::_internal_inverter_connection_status(int index) const {
  return inverter_connection_status_.Get(index);
}
inline const ::primary::INVERTER_CONNECTION_STATUS& Pack::inverter_connection_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.INVERTER_CONNECTION_STATUS)
  return _internal_inverter_connection_status(index);
}
inline ::primary::INVERTER_CONNECTION_STATUS* Pack::_internal_add_inverter_connection_status() {
  return inverter_connection_status_.Add();
}
inline ::primary::INVERTER_CONNECTION_STATUS* Pack::add_inverter_connection_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.INVERTER_CONNECTION_STATUS)
  return _internal_add_inverter_connection_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INVERTER_CONNECTION_STATUS >&
Pack::inverter_connection_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.INVERTER_CONNECTION_STATUS)
  return inverter_connection_status_;
}

// repeated .primary.LV_ERRORS LV_ERRORS = 44;
inline int Pack::_internal_lv_errors_size() const {
  return lv_errors_.size();
}
inline int Pack::lv_errors_size() const {
  return _internal_lv_errors_size();
}
inline void Pack::clear_lv_errors() {
  lv_errors_.Clear();
}
inline ::primary::LV_ERRORS* Pack::mutable_lv_errors(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.LV_ERRORS)
  return lv_errors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_ERRORS >*
Pack::mutable_lv_errors() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.LV_ERRORS)
  return &lv_errors_;
}
inline const ::primary::LV_ERRORS& Pack::_internal_lv_errors(int index) const {
  return lv_errors_.Get(index);
}
inline const ::primary::LV_ERRORS& Pack::lv_errors(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.LV_ERRORS)
  return _internal_lv_errors(index);
}
inline ::primary::LV_ERRORS* Pack::_internal_add_lv_errors() {
  return lv_errors_.Add();
}
inline ::primary::LV_ERRORS* Pack::add_lv_errors() {
  // @@protoc_insertion_point(field_add:primary.Pack.LV_ERRORS)
  return _internal_add_lv_errors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LV_ERRORS >&
Pack::lv_errors() const {
  // @@protoc_insertion_point(field_list:primary.Pack.LV_ERRORS)
  return lv_errors_;
}

// repeated .primary.SHUTDOWN_STATUS SHUTDOWN_STATUS = 45;
inline int Pack::_internal_shutdown_status_size() const {
  return shutdown_status_.size();
}
inline int Pack::shutdown_status_size() const {
  return _internal_shutdown_status_size();
}
inline void Pack::clear_shutdown_status() {
  shutdown_status_.Clear();
}
inline ::primary::SHUTDOWN_STATUS* Pack::mutable_shutdown_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SHUTDOWN_STATUS)
  return shutdown_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SHUTDOWN_STATUS >*
Pack::mutable_shutdown_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SHUTDOWN_STATUS)
  return &shutdown_status_;
}
inline const ::primary::SHUTDOWN_STATUS& Pack::_internal_shutdown_status(int index) const {
  return shutdown_status_.Get(index);
}
inline const ::primary::SHUTDOWN_STATUS& Pack::shutdown_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SHUTDOWN_STATUS)
  return _internal_shutdown_status(index);
}
inline ::primary::SHUTDOWN_STATUS* Pack::_internal_add_shutdown_status() {
  return shutdown_status_.Add();
}
inline ::primary::SHUTDOWN_STATUS* Pack::add_shutdown_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.SHUTDOWN_STATUS)
  return _internal_add_shutdown_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SHUTDOWN_STATUS >&
Pack::shutdown_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SHUTDOWN_STATUS)
  return shutdown_status_;
}

// repeated .primary.MARKER MARKER = 46;
inline int Pack::_internal_marker_size() const {
  return marker_.size();
}
inline int Pack::marker_size() const {
  return _internal_marker_size();
}
inline void Pack::clear_marker() {
  marker_.Clear();
}
inline ::primary::MARKER* Pack::mutable_marker(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.MARKER)
  return marker_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::MARKER >*
Pack::mutable_marker() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.MARKER)
  return &marker_;
}
inline const ::primary::MARKER& Pack::_internal_marker(int index) const {
  return marker_.Get(index);
}
inline const ::primary::MARKER& Pack::marker(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.MARKER)
  return _internal_marker(index);
}
inline ::primary::MARKER* Pack::_internal_add_marker() {
  return marker_.Add();
}
inline ::primary::MARKER* Pack::add_marker() {
  // @@protoc_insertion_point(field_add:primary.Pack.MARKER)
  return _internal_add_marker();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::MARKER >&
Pack::marker() const {
  // @@protoc_insertion_point(field_list:primary.Pack.MARKER)
  return marker_;
}

// repeated .primary.HV_CELLS_VOLTAGE HV_CELLS_VOLTAGE = 47;
inline int Pack::_internal_hv_cells_voltage_size() const {
  return hv_cells_voltage_.size();
}
inline int Pack::hv_cells_voltage_size() const {
  return _internal_hv_cells_voltage_size();
}
inline void Pack::clear_hv_cells_voltage() {
  hv_cells_voltage_.Clear();
}
inline ::primary::HV_CELLS_VOLTAGE* Pack::mutable_hv_cells_voltage(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_CELLS_VOLTAGE)
  return hv_cells_voltage_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_VOLTAGE >*
Pack::mutable_hv_cells_voltage() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_CELLS_VOLTAGE)
  return &hv_cells_voltage_;
}
inline const ::primary::HV_CELLS_VOLTAGE& Pack::_internal_hv_cells_voltage(int index) const {
  return hv_cells_voltage_.Get(index);
}
inline const ::primary::HV_CELLS_VOLTAGE& Pack::hv_cells_voltage(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_CELLS_VOLTAGE)
  return _internal_hv_cells_voltage(index);
}
inline ::primary::HV_CELLS_VOLTAGE* Pack::_internal_add_hv_cells_voltage() {
  return hv_cells_voltage_.Add();
}
inline ::primary::HV_CELLS_VOLTAGE* Pack::add_hv_cells_voltage() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_CELLS_VOLTAGE)
  return _internal_add_hv_cells_voltage();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_VOLTAGE >&
Pack::hv_cells_voltage() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_CELLS_VOLTAGE)
  return hv_cells_voltage_;
}

// repeated .primary.HV_CELLS_TEMP HV_CELLS_TEMP = 48;
inline int Pack::_internal_hv_cells_temp_size() const {
  return hv_cells_temp_.size();
}
inline int Pack::hv_cells_temp_size() const {
  return _internal_hv_cells_temp_size();
}
inline void Pack::clear_hv_cells_temp() {
  hv_cells_temp_.Clear();
}
inline ::primary::HV_CELLS_TEMP* Pack::mutable_hv_cells_temp(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_CELLS_TEMP)
  return hv_cells_temp_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_TEMP >*
Pack::mutable_hv_cells_temp() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_CELLS_TEMP)
  return &hv_cells_temp_;
}
inline const ::primary::HV_CELLS_TEMP& Pack::_internal_hv_cells_temp(int index) const {
  return hv_cells_temp_.Get(index);
}
inline const ::primary::HV_CELLS_TEMP& Pack::hv_cells_temp(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_CELLS_TEMP)
  return _internal_hv_cells_temp(index);
}
inline ::primary::HV_CELLS_TEMP* Pack::_internal_add_hv_cells_temp() {
  return hv_cells_temp_.Add();
}
inline ::primary::HV_CELLS_TEMP* Pack::add_hv_cells_temp() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_CELLS_TEMP)
  return _internal_add_hv_cells_temp();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELLS_TEMP >&
Pack::hv_cells_temp() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_CELLS_TEMP)
  return hv_cells_temp_;
}

// repeated .primary.HV_CELL_BALANCING_STATUS HV_CELL_BALANCING_STATUS = 49;
inline int Pack::_internal_hv_cell_balancing_status_size() const {
  return hv_cell_balancing_status_.size();
}
inline int Pack::hv_cell_balancing_status_size() const {
  return _internal_hv_cell_balancing_status_size();
}
inline void Pack::clear_hv_cell_balancing_status() {
  hv_cell_balancing_status_.Clear();
}
inline ::primary::HV_CELL_BALANCING_STATUS* Pack::mutable_hv_cell_balancing_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HV_CELL_BALANCING_STATUS)
  return hv_cell_balancing_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELL_BALANCING_STATUS >*
Pack::mutable_hv_cell_balancing_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HV_CELL_BALANCING_STATUS)
  return &hv_cell_balancing_status_;
}
inline const ::primary::HV_CELL_BALANCING_STATUS& Pack::_internal_hv_cell_balancing_status(int index) const {
  return hv_cell_balancing_status_.Get(index);
}
inline const ::primary::HV_CELL_BALANCING_STATUS& Pack::hv_cell_balancing_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HV_CELL_BALANCING_STATUS)
  return _internal_hv_cell_balancing_status(index);
}
inline ::primary::HV_CELL_BALANCING_STATUS* Pack::_internal_add_hv_cell_balancing_status() {
  return hv_cell_balancing_status_.Add();
}
inline ::primary::HV_CELL_BALANCING_STATUS* Pack::add_hv_cell_balancing_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.HV_CELL_BALANCING_STATUS)
  return _internal_add_hv_cell_balancing_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HV_CELL_BALANCING_STATUS >&
Pack::hv_cell_balancing_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HV_CELL_BALANCING_STATUS)
  return hv_cell_balancing_status_;
}

// repeated .primary.SET_CELL_BALANCING_STATUS SET_CELL_BALANCING_STATUS = 50;
inline int Pack::_internal_set_cell_balancing_status_size() const {
  return set_cell_balancing_status_.size();
}
inline int Pack::set_cell_balancing_status_size() const {
  return _internal_set_cell_balancing_status_size();
}
inline void Pack::clear_set_cell_balancing_status() {
  set_cell_balancing_status_.Clear();
}
inline ::primary::SET_CELL_BALANCING_STATUS* Pack::mutable_set_cell_balancing_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SET_CELL_BALANCING_STATUS)
  return set_cell_balancing_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CELL_BALANCING_STATUS >*
Pack::mutable_set_cell_balancing_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SET_CELL_BALANCING_STATUS)
  return &set_cell_balancing_status_;
}
inline const ::primary::SET_CELL_BALANCING_STATUS& Pack::_internal_set_cell_balancing_status(int index) const {
  return set_cell_balancing_status_.Get(index);
}
inline const ::primary::SET_CELL_BALANCING_STATUS& Pack::set_cell_balancing_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SET_CELL_BALANCING_STATUS)
  return _internal_set_cell_balancing_status(index);
}
inline ::primary::SET_CELL_BALANCING_STATUS* Pack::_internal_add_set_cell_balancing_status() {
  return set_cell_balancing_status_.Add();
}
inline ::primary::SET_CELL_BALANCING_STATUS* Pack::add_set_cell_balancing_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.SET_CELL_BALANCING_STATUS)
  return _internal_add_set_cell_balancing_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SET_CELL_BALANCING_STATUS >&
Pack::set_cell_balancing_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SET_CELL_BALANCING_STATUS)
  return set_cell_balancing_status_;
}

// repeated .primary.HANDCART_STATUS HANDCART_STATUS = 51;
inline int Pack::_internal_handcart_status_size() const {
  return handcart_status_.size();
}
inline int Pack::handcart_status_size() const {
  return _internal_handcart_status_size();
}
inline void Pack::clear_handcart_status() {
  handcart_status_.Clear();
}
inline ::primary::HANDCART_STATUS* Pack::mutable_handcart_status(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.HANDCART_STATUS)
  return handcart_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HANDCART_STATUS >*
Pack::mutable_handcart_status() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.HANDCART_STATUS)
  return &handcart_status_;
}
inline const ::primary::HANDCART_STATUS& Pack::_internal_handcart_status(int index) const {
  return handcart_status_.Get(index);
}
inline const ::primary::HANDCART_STATUS& Pack::handcart_status(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.HANDCART_STATUS)
  return _internal_handcart_status(index);
}
inline ::primary::HANDCART_STATUS* Pack::_internal_add_handcart_status() {
  return handcart_status_.Add();
}
inline ::primary::HANDCART_STATUS* Pack::add_handcart_status() {
  // @@protoc_insertion_point(field_add:primary.Pack.HANDCART_STATUS)
  return _internal_add_handcart_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::HANDCART_STATUS >&
Pack::handcart_status() const {
  // @@protoc_insertion_point(field_list:primary.Pack.HANDCART_STATUS)
  return handcart_status_;
}

// repeated .primary.SPEED SPEED = 52;
inline int Pack::_internal_speed_size() const {
  return speed_.size();
}
inline int Pack::speed_size() const {
  return _internal_speed_size();
}
inline void Pack::clear_speed() {
  speed_.Clear();
}
inline ::primary::SPEED* Pack::mutable_speed(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.SPEED)
  return speed_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SPEED >*
Pack::mutable_speed() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.SPEED)
  return &speed_;
}
inline const ::primary::SPEED& Pack::_internal_speed(int index) const {
  return speed_.Get(index);
}
inline const ::primary::SPEED& Pack::speed(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.SPEED)
  return _internal_speed(index);
}
inline ::primary::SPEED* Pack::_internal_add_speed() {
  return speed_.Add();
}
inline ::primary::SPEED* Pack::add_speed() {
  // @@protoc_insertion_point(field_add:primary.Pack.SPEED)
  return _internal_add_speed();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::SPEED >&
Pack::speed() const {
  // @@protoc_insertion_point(field_list:primary.Pack.SPEED)
  return speed_;
}

// repeated .primary.INV_L_REQUEST INV_L_REQUEST = 53;
inline int Pack::_internal_inv_l_request_size() const {
  return inv_l_request_.size();
}
inline int Pack::inv_l_request_size() const {
  return _internal_inv_l_request_size();
}
inline void Pack::clear_inv_l_request() {
  inv_l_request_.Clear();
}
inline ::primary::INV_L_REQUEST* Pack::mutable_inv_l_request(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.INV_L_REQUEST)
  return inv_l_request_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_REQUEST >*
Pack::mutable_inv_l_request() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.INV_L_REQUEST)
  return &inv_l_request_;
}
inline const ::primary::INV_L_REQUEST& Pack::_internal_inv_l_request(int index) const {
  return inv_l_request_.Get(index);
}
inline const ::primary::INV_L_REQUEST& Pack::inv_l_request(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.INV_L_REQUEST)
  return _internal_inv_l_request(index);
}
inline ::primary::INV_L_REQUEST* Pack::_internal_add_inv_l_request() {
  return inv_l_request_.Add();
}
inline ::primary::INV_L_REQUEST* Pack::add_inv_l_request() {
  // @@protoc_insertion_point(field_add:primary.Pack.INV_L_REQUEST)
  return _internal_add_inv_l_request();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_REQUEST >&
Pack::inv_l_request() const {
  // @@protoc_insertion_point(field_list:primary.Pack.INV_L_REQUEST)
  return inv_l_request_;
}

// repeated .primary.INV_R_REQUEST INV_R_REQUEST = 54;
inline int Pack::_internal_inv_r_request_size() const {
  return inv_r_request_.size();
}
inline int Pack::inv_r_request_size() const {
  return _internal_inv_r_request_size();
}
inline void Pack::clear_inv_r_request() {
  inv_r_request_.Clear();
}
inline ::primary::INV_R_REQUEST* Pack::mutable_inv_r_request(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.INV_R_REQUEST)
  return inv_r_request_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_REQUEST >*
Pack::mutable_inv_r_request() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.INV_R_REQUEST)
  return &inv_r_request_;
}
inline const ::primary::INV_R_REQUEST& Pack::_internal_inv_r_request(int index) const {
  return inv_r_request_.Get(index);
}
inline const ::primary::INV_R_REQUEST& Pack::inv_r_request(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.INV_R_REQUEST)
  return _internal_inv_r_request(index);
}
inline ::primary::INV_R_REQUEST* Pack::_internal_add_inv_r_request() {
  return inv_r_request_.Add();
}
inline ::primary::INV_R_REQUEST* Pack::add_inv_r_request() {
  // @@protoc_insertion_point(field_add:primary.Pack.INV_R_REQUEST)
  return _internal_add_inv_r_request();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_REQUEST >&
Pack::inv_r_request() const {
  // @@protoc_insertion_point(field_list:primary.Pack.INV_R_REQUEST)
  return inv_r_request_;
}

// repeated .primary.INV_L_RESPONSE INV_L_RESPONSE = 55;
inline int Pack::_internal_inv_l_response_size() const {
  return inv_l_response_.size();
}
inline int Pack::inv_l_response_size() const {
  return _internal_inv_l_response_size();
}
inline void Pack::clear_inv_l_response() {
  inv_l_response_.Clear();
}
inline ::primary::INV_L_RESPONSE* Pack::mutable_inv_l_response(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.INV_L_RESPONSE)
  return inv_l_response_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_RESPONSE >*
Pack::mutable_inv_l_response() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.INV_L_RESPONSE)
  return &inv_l_response_;
}
inline const ::primary::INV_L_RESPONSE& Pack::_internal_inv_l_response(int index) const {
  return inv_l_response_.Get(index);
}
inline const ::primary::INV_L_RESPONSE& Pack::inv_l_response(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.INV_L_RESPONSE)
  return _internal_inv_l_response(index);
}
inline ::primary::INV_L_RESPONSE* Pack::_internal_add_inv_l_response() {
  return inv_l_response_.Add();
}
inline ::primary::INV_L_RESPONSE* Pack::add_inv_l_response() {
  // @@protoc_insertion_point(field_add:primary.Pack.INV_L_RESPONSE)
  return _internal_add_inv_l_response();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_L_RESPONSE >&
Pack::inv_l_response() const {
  // @@protoc_insertion_point(field_list:primary.Pack.INV_L_RESPONSE)
  return inv_l_response_;
}

// repeated .primary.INV_R_RESPONSE INV_R_RESPONSE = 56;
inline int Pack::_internal_inv_r_response_size() const {
  return inv_r_response_.size();
}
inline int Pack::inv_r_response_size() const {
  return _internal_inv_r_response_size();
}
inline void Pack::clear_inv_r_response() {
  inv_r_response_.Clear();
}
inline ::primary::INV_R_RESPONSE* Pack::mutable_inv_r_response(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.INV_R_RESPONSE)
  return inv_r_response_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_RESPONSE >*
Pack::mutable_inv_r_response() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.INV_R_RESPONSE)
  return &inv_r_response_;
}
inline const ::primary::INV_R_RESPONSE& Pack::_internal_inv_r_response(int index) const {
  return inv_r_response_.Get(index);
}
inline const ::primary::INV_R_RESPONSE& Pack::inv_r_response(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.INV_R_RESPONSE)
  return _internal_inv_r_response(index);
}
inline ::primary::INV_R_RESPONSE* Pack::_internal_add_inv_r_response() {
  return inv_r_response_.Add();
}
inline ::primary::INV_R_RESPONSE* Pack::add_inv_r_response() {
  // @@protoc_insertion_point(field_add:primary.Pack.INV_R_RESPONSE)
  return _internal_add_inv_r_response();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::INV_R_RESPONSE >&
Pack::inv_r_response() const {
  // @@protoc_insertion_point(field_list:primary.Pack.INV_R_RESPONSE)
  return inv_r_response_;
}

// repeated .primary.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 57;
inline int Pack::_internal_flash_cellboard_0_tx_size() const {
  return flash_cellboard_0_tx_.size();
}
inline int Pack::flash_cellboard_0_tx_size() const {
  return _internal_flash_cellboard_0_tx_size();
}
inline void Pack::clear_flash_cellboard_0_tx() {
  flash_cellboard_0_tx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_0_TX* Pack::mutable_flash_cellboard_0_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_0_TX)
  return flash_cellboard_0_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_TX >*
Pack::mutable_flash_cellboard_0_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_0_TX)
  return &flash_cellboard_0_tx_;
}
inline const ::primary::FLASH_CELLBOARD_0_TX& Pack::_internal_flash_cellboard_0_tx(int index) const {
  return flash_cellboard_0_tx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_0_TX& Pack::flash_cellboard_0_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_0_TX)
  return _internal_flash_cellboard_0_tx(index);
}
inline ::primary::FLASH_CELLBOARD_0_TX* Pack::_internal_add_flash_cellboard_0_tx() {
  return flash_cellboard_0_tx_.Add();
}
inline ::primary::FLASH_CELLBOARD_0_TX* Pack::add_flash_cellboard_0_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_0_TX)
  return _internal_add_flash_cellboard_0_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_TX >&
Pack::flash_cellboard_0_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_0_TX)
  return flash_cellboard_0_tx_;
}

// repeated .primary.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 58;
inline int Pack::_internal_flash_cellboard_0_rx_size() const {
  return flash_cellboard_0_rx_.size();
}
inline int Pack::flash_cellboard_0_rx_size() const {
  return _internal_flash_cellboard_0_rx_size();
}
inline void Pack::clear_flash_cellboard_0_rx() {
  flash_cellboard_0_rx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_0_RX* Pack::mutable_flash_cellboard_0_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_0_RX)
  return flash_cellboard_0_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_RX >*
Pack::mutable_flash_cellboard_0_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_0_RX)
  return &flash_cellboard_0_rx_;
}
inline const ::primary::FLASH_CELLBOARD_0_RX& Pack::_internal_flash_cellboard_0_rx(int index) const {
  return flash_cellboard_0_rx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_0_RX& Pack::flash_cellboard_0_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_0_RX)
  return _internal_flash_cellboard_0_rx(index);
}
inline ::primary::FLASH_CELLBOARD_0_RX* Pack::_internal_add_flash_cellboard_0_rx() {
  return flash_cellboard_0_rx_.Add();
}
inline ::primary::FLASH_CELLBOARD_0_RX* Pack::add_flash_cellboard_0_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_0_RX)
  return _internal_add_flash_cellboard_0_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_0_RX >&
Pack::flash_cellboard_0_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_0_RX)
  return flash_cellboard_0_rx_;
}

// repeated .primary.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 59;
inline int Pack::_internal_flash_cellboard_1_tx_size() const {
  return flash_cellboard_1_tx_.size();
}
inline int Pack::flash_cellboard_1_tx_size() const {
  return _internal_flash_cellboard_1_tx_size();
}
inline void Pack::clear_flash_cellboard_1_tx() {
  flash_cellboard_1_tx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_1_TX* Pack::mutable_flash_cellboard_1_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_1_TX)
  return flash_cellboard_1_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_TX >*
Pack::mutable_flash_cellboard_1_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_1_TX)
  return &flash_cellboard_1_tx_;
}
inline const ::primary::FLASH_CELLBOARD_1_TX& Pack::_internal_flash_cellboard_1_tx(int index) const {
  return flash_cellboard_1_tx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_1_TX& Pack::flash_cellboard_1_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_1_TX)
  return _internal_flash_cellboard_1_tx(index);
}
inline ::primary::FLASH_CELLBOARD_1_TX* Pack::_internal_add_flash_cellboard_1_tx() {
  return flash_cellboard_1_tx_.Add();
}
inline ::primary::FLASH_CELLBOARD_1_TX* Pack::add_flash_cellboard_1_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_1_TX)
  return _internal_add_flash_cellboard_1_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_TX >&
Pack::flash_cellboard_1_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_1_TX)
  return flash_cellboard_1_tx_;
}

// repeated .primary.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 60;
inline int Pack::_internal_flash_cellboard_1_rx_size() const {
  return flash_cellboard_1_rx_.size();
}
inline int Pack::flash_cellboard_1_rx_size() const {
  return _internal_flash_cellboard_1_rx_size();
}
inline void Pack::clear_flash_cellboard_1_rx() {
  flash_cellboard_1_rx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_1_RX* Pack::mutable_flash_cellboard_1_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_1_RX)
  return flash_cellboard_1_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_RX >*
Pack::mutable_flash_cellboard_1_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_1_RX)
  return &flash_cellboard_1_rx_;
}
inline const ::primary::FLASH_CELLBOARD_1_RX& Pack::_internal_flash_cellboard_1_rx(int index) const {
  return flash_cellboard_1_rx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_1_RX& Pack::flash_cellboard_1_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_1_RX)
  return _internal_flash_cellboard_1_rx(index);
}
inline ::primary::FLASH_CELLBOARD_1_RX* Pack::_internal_add_flash_cellboard_1_rx() {
  return flash_cellboard_1_rx_.Add();
}
inline ::primary::FLASH_CELLBOARD_1_RX* Pack::add_flash_cellboard_1_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_1_RX)
  return _internal_add_flash_cellboard_1_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_1_RX >&
Pack::flash_cellboard_1_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_1_RX)
  return flash_cellboard_1_rx_;
}

// repeated .primary.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 61;
inline int Pack::_internal_flash_cellboard_2_tx_size() const {
  return flash_cellboard_2_tx_.size();
}
inline int Pack::flash_cellboard_2_tx_size() const {
  return _internal_flash_cellboard_2_tx_size();
}
inline void Pack::clear_flash_cellboard_2_tx() {
  flash_cellboard_2_tx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_2_TX* Pack::mutable_flash_cellboard_2_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_2_TX)
  return flash_cellboard_2_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_TX >*
Pack::mutable_flash_cellboard_2_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_2_TX)
  return &flash_cellboard_2_tx_;
}
inline const ::primary::FLASH_CELLBOARD_2_TX& Pack::_internal_flash_cellboard_2_tx(int index) const {
  return flash_cellboard_2_tx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_2_TX& Pack::flash_cellboard_2_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_2_TX)
  return _internal_flash_cellboard_2_tx(index);
}
inline ::primary::FLASH_CELLBOARD_2_TX* Pack::_internal_add_flash_cellboard_2_tx() {
  return flash_cellboard_2_tx_.Add();
}
inline ::primary::FLASH_CELLBOARD_2_TX* Pack::add_flash_cellboard_2_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_2_TX)
  return _internal_add_flash_cellboard_2_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_TX >&
Pack::flash_cellboard_2_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_2_TX)
  return flash_cellboard_2_tx_;
}

// repeated .primary.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 62;
inline int Pack::_internal_flash_cellboard_2_rx_size() const {
  return flash_cellboard_2_rx_.size();
}
inline int Pack::flash_cellboard_2_rx_size() const {
  return _internal_flash_cellboard_2_rx_size();
}
inline void Pack::clear_flash_cellboard_2_rx() {
  flash_cellboard_2_rx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_2_RX* Pack::mutable_flash_cellboard_2_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_2_RX)
  return flash_cellboard_2_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_RX >*
Pack::mutable_flash_cellboard_2_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_2_RX)
  return &flash_cellboard_2_rx_;
}
inline const ::primary::FLASH_CELLBOARD_2_RX& Pack::_internal_flash_cellboard_2_rx(int index) const {
  return flash_cellboard_2_rx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_2_RX& Pack::flash_cellboard_2_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_2_RX)
  return _internal_flash_cellboard_2_rx(index);
}
inline ::primary::FLASH_CELLBOARD_2_RX* Pack::_internal_add_flash_cellboard_2_rx() {
  return flash_cellboard_2_rx_.Add();
}
inline ::primary::FLASH_CELLBOARD_2_RX* Pack::add_flash_cellboard_2_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_2_RX)
  return _internal_add_flash_cellboard_2_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_2_RX >&
Pack::flash_cellboard_2_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_2_RX)
  return flash_cellboard_2_rx_;
}

// repeated .primary.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 63;
inline int Pack::_internal_flash_cellboard_3_tx_size() const {
  return flash_cellboard_3_tx_.size();
}
inline int Pack::flash_cellboard_3_tx_size() const {
  return _internal_flash_cellboard_3_tx_size();
}
inline void Pack::clear_flash_cellboard_3_tx() {
  flash_cellboard_3_tx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_3_TX* Pack::mutable_flash_cellboard_3_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_3_TX)
  return flash_cellboard_3_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_TX >*
Pack::mutable_flash_cellboard_3_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_3_TX)
  return &flash_cellboard_3_tx_;
}
inline const ::primary::FLASH_CELLBOARD_3_TX& Pack::_internal_flash_cellboard_3_tx(int index) const {
  return flash_cellboard_3_tx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_3_TX& Pack::flash_cellboard_3_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_3_TX)
  return _internal_flash_cellboard_3_tx(index);
}
inline ::primary::FLASH_CELLBOARD_3_TX* Pack::_internal_add_flash_cellboard_3_tx() {
  return flash_cellboard_3_tx_.Add();
}
inline ::primary::FLASH_CELLBOARD_3_TX* Pack::add_flash_cellboard_3_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_3_TX)
  return _internal_add_flash_cellboard_3_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_TX >&
Pack::flash_cellboard_3_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_3_TX)
  return flash_cellboard_3_tx_;
}

// repeated .primary.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 64;
inline int Pack::_internal_flash_cellboard_3_rx_size() const {
  return flash_cellboard_3_rx_.size();
}
inline int Pack::flash_cellboard_3_rx_size() const {
  return _internal_flash_cellboard_3_rx_size();
}
inline void Pack::clear_flash_cellboard_3_rx() {
  flash_cellboard_3_rx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_3_RX* Pack::mutable_flash_cellboard_3_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_3_RX)
  return flash_cellboard_3_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_RX >*
Pack::mutable_flash_cellboard_3_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_3_RX)
  return &flash_cellboard_3_rx_;
}
inline const ::primary::FLASH_CELLBOARD_3_RX& Pack::_internal_flash_cellboard_3_rx(int index) const {
  return flash_cellboard_3_rx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_3_RX& Pack::flash_cellboard_3_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_3_RX)
  return _internal_flash_cellboard_3_rx(index);
}
inline ::primary::FLASH_CELLBOARD_3_RX* Pack::_internal_add_flash_cellboard_3_rx() {
  return flash_cellboard_3_rx_.Add();
}
inline ::primary::FLASH_CELLBOARD_3_RX* Pack::add_flash_cellboard_3_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_3_RX)
  return _internal_add_flash_cellboard_3_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_3_RX >&
Pack::flash_cellboard_3_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_3_RX)
  return flash_cellboard_3_rx_;
}

// repeated .primary.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 65;
inline int Pack::_internal_flash_cellboard_4_tx_size() const {
  return flash_cellboard_4_tx_.size();
}
inline int Pack::flash_cellboard_4_tx_size() const {
  return _internal_flash_cellboard_4_tx_size();
}
inline void Pack::clear_flash_cellboard_4_tx() {
  flash_cellboard_4_tx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_4_TX* Pack::mutable_flash_cellboard_4_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_4_TX)
  return flash_cellboard_4_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_TX >*
Pack::mutable_flash_cellboard_4_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_4_TX)
  return &flash_cellboard_4_tx_;
}
inline const ::primary::FLASH_CELLBOARD_4_TX& Pack::_internal_flash_cellboard_4_tx(int index) const {
  return flash_cellboard_4_tx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_4_TX& Pack::flash_cellboard_4_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_4_TX)
  return _internal_flash_cellboard_4_tx(index);
}
inline ::primary::FLASH_CELLBOARD_4_TX* Pack::_internal_add_flash_cellboard_4_tx() {
  return flash_cellboard_4_tx_.Add();
}
inline ::primary::FLASH_CELLBOARD_4_TX* Pack::add_flash_cellboard_4_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_4_TX)
  return _internal_add_flash_cellboard_4_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_TX >&
Pack::flash_cellboard_4_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_4_TX)
  return flash_cellboard_4_tx_;
}

// repeated .primary.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 66;
inline int Pack::_internal_flash_cellboard_4_rx_size() const {
  return flash_cellboard_4_rx_.size();
}
inline int Pack::flash_cellboard_4_rx_size() const {
  return _internal_flash_cellboard_4_rx_size();
}
inline void Pack::clear_flash_cellboard_4_rx() {
  flash_cellboard_4_rx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_4_RX* Pack::mutable_flash_cellboard_4_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_4_RX)
  return flash_cellboard_4_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_RX >*
Pack::mutable_flash_cellboard_4_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_4_RX)
  return &flash_cellboard_4_rx_;
}
inline const ::primary::FLASH_CELLBOARD_4_RX& Pack::_internal_flash_cellboard_4_rx(int index) const {
  return flash_cellboard_4_rx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_4_RX& Pack::flash_cellboard_4_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_4_RX)
  return _internal_flash_cellboard_4_rx(index);
}
inline ::primary::FLASH_CELLBOARD_4_RX* Pack::_internal_add_flash_cellboard_4_rx() {
  return flash_cellboard_4_rx_.Add();
}
inline ::primary::FLASH_CELLBOARD_4_RX* Pack::add_flash_cellboard_4_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_4_RX)
  return _internal_add_flash_cellboard_4_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_4_RX >&
Pack::flash_cellboard_4_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_4_RX)
  return flash_cellboard_4_rx_;
}

// repeated .primary.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 67;
inline int Pack::_internal_flash_cellboard_5_tx_size() const {
  return flash_cellboard_5_tx_.size();
}
inline int Pack::flash_cellboard_5_tx_size() const {
  return _internal_flash_cellboard_5_tx_size();
}
inline void Pack::clear_flash_cellboard_5_tx() {
  flash_cellboard_5_tx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_5_TX* Pack::mutable_flash_cellboard_5_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_5_TX)
  return flash_cellboard_5_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_TX >*
Pack::mutable_flash_cellboard_5_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_5_TX)
  return &flash_cellboard_5_tx_;
}
inline const ::primary::FLASH_CELLBOARD_5_TX& Pack::_internal_flash_cellboard_5_tx(int index) const {
  return flash_cellboard_5_tx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_5_TX& Pack::flash_cellboard_5_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_5_TX)
  return _internal_flash_cellboard_5_tx(index);
}
inline ::primary::FLASH_CELLBOARD_5_TX* Pack::_internal_add_flash_cellboard_5_tx() {
  return flash_cellboard_5_tx_.Add();
}
inline ::primary::FLASH_CELLBOARD_5_TX* Pack::add_flash_cellboard_5_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_5_TX)
  return _internal_add_flash_cellboard_5_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_TX >&
Pack::flash_cellboard_5_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_5_TX)
  return flash_cellboard_5_tx_;
}

// repeated .primary.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 68;
inline int Pack::_internal_flash_cellboard_5_rx_size() const {
  return flash_cellboard_5_rx_.size();
}
inline int Pack::flash_cellboard_5_rx_size() const {
  return _internal_flash_cellboard_5_rx_size();
}
inline void Pack::clear_flash_cellboard_5_rx() {
  flash_cellboard_5_rx_.Clear();
}
inline ::primary::FLASH_CELLBOARD_5_RX* Pack::mutable_flash_cellboard_5_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_CELLBOARD_5_RX)
  return flash_cellboard_5_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_RX >*
Pack::mutable_flash_cellboard_5_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_CELLBOARD_5_RX)
  return &flash_cellboard_5_rx_;
}
inline const ::primary::FLASH_CELLBOARD_5_RX& Pack::_internal_flash_cellboard_5_rx(int index) const {
  return flash_cellboard_5_rx_.Get(index);
}
inline const ::primary::FLASH_CELLBOARD_5_RX& Pack::flash_cellboard_5_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_CELLBOARD_5_RX)
  return _internal_flash_cellboard_5_rx(index);
}
inline ::primary::FLASH_CELLBOARD_5_RX* Pack::_internal_add_flash_cellboard_5_rx() {
  return flash_cellboard_5_rx_.Add();
}
inline ::primary::FLASH_CELLBOARD_5_RX* Pack::add_flash_cellboard_5_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_CELLBOARD_5_RX)
  return _internal_add_flash_cellboard_5_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_CELLBOARD_5_RX >&
Pack::flash_cellboard_5_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_CELLBOARD_5_RX)
  return flash_cellboard_5_rx_;
}

// repeated .primary.FLASH_BMS_HV_TX FLASH_BMS_HV_TX = 69;
inline int Pack::_internal_flash_bms_hv_tx_size() const {
  return flash_bms_hv_tx_.size();
}
inline int Pack::flash_bms_hv_tx_size() const {
  return _internal_flash_bms_hv_tx_size();
}
inline void Pack::clear_flash_bms_hv_tx() {
  flash_bms_hv_tx_.Clear();
}
inline ::primary::FLASH_BMS_HV_TX* Pack::mutable_flash_bms_hv_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_BMS_HV_TX)
  return flash_bms_hv_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_TX >*
Pack::mutable_flash_bms_hv_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_BMS_HV_TX)
  return &flash_bms_hv_tx_;
}
inline const ::primary::FLASH_BMS_HV_TX& Pack::_internal_flash_bms_hv_tx(int index) const {
  return flash_bms_hv_tx_.Get(index);
}
inline const ::primary::FLASH_BMS_HV_TX& Pack::flash_bms_hv_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_BMS_HV_TX)
  return _internal_flash_bms_hv_tx(index);
}
inline ::primary::FLASH_BMS_HV_TX* Pack::_internal_add_flash_bms_hv_tx() {
  return flash_bms_hv_tx_.Add();
}
inline ::primary::FLASH_BMS_HV_TX* Pack::add_flash_bms_hv_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_BMS_HV_TX)
  return _internal_add_flash_bms_hv_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_TX >&
Pack::flash_bms_hv_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_BMS_HV_TX)
  return flash_bms_hv_tx_;
}

// repeated .primary.FLASH_BMS_HV_RX FLASH_BMS_HV_RX = 70;
inline int Pack::_internal_flash_bms_hv_rx_size() const {
  return flash_bms_hv_rx_.size();
}
inline int Pack::flash_bms_hv_rx_size() const {
  return _internal_flash_bms_hv_rx_size();
}
inline void Pack::clear_flash_bms_hv_rx() {
  flash_bms_hv_rx_.Clear();
}
inline ::primary::FLASH_BMS_HV_RX* Pack::mutable_flash_bms_hv_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_BMS_HV_RX)
  return flash_bms_hv_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_RX >*
Pack::mutable_flash_bms_hv_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_BMS_HV_RX)
  return &flash_bms_hv_rx_;
}
inline const ::primary::FLASH_BMS_HV_RX& Pack::_internal_flash_bms_hv_rx(int index) const {
  return flash_bms_hv_rx_.Get(index);
}
inline const ::primary::FLASH_BMS_HV_RX& Pack::flash_bms_hv_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_BMS_HV_RX)
  return _internal_flash_bms_hv_rx(index);
}
inline ::primary::FLASH_BMS_HV_RX* Pack::_internal_add_flash_bms_hv_rx() {
  return flash_bms_hv_rx_.Add();
}
inline ::primary::FLASH_BMS_HV_RX* Pack::add_flash_bms_hv_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_BMS_HV_RX)
  return _internal_add_flash_bms_hv_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_HV_RX >&
Pack::flash_bms_hv_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_BMS_HV_RX)
  return flash_bms_hv_rx_;
}

// repeated .primary.FLASH_BMS_LV_TX FLASH_BMS_LV_TX = 71;
inline int Pack::_internal_flash_bms_lv_tx_size() const {
  return flash_bms_lv_tx_.size();
}
inline int Pack::flash_bms_lv_tx_size() const {
  return _internal_flash_bms_lv_tx_size();
}
inline void Pack::clear_flash_bms_lv_tx() {
  flash_bms_lv_tx_.Clear();
}
inline ::primary::FLASH_BMS_LV_TX* Pack::mutable_flash_bms_lv_tx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_BMS_LV_TX)
  return flash_bms_lv_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_TX >*
Pack::mutable_flash_bms_lv_tx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_BMS_LV_TX)
  return &flash_bms_lv_tx_;
}
inline const ::primary::FLASH_BMS_LV_TX& Pack::_internal_flash_bms_lv_tx(int index) const {
  return flash_bms_lv_tx_.Get(index);
}
inline const ::primary::FLASH_BMS_LV_TX& Pack::flash_bms_lv_tx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_BMS_LV_TX)
  return _internal_flash_bms_lv_tx(index);
}
inline ::primary::FLASH_BMS_LV_TX* Pack::_internal_add_flash_bms_lv_tx() {
  return flash_bms_lv_tx_.Add();
}
inline ::primary::FLASH_BMS_LV_TX* Pack::add_flash_bms_lv_tx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_BMS_LV_TX)
  return _internal_add_flash_bms_lv_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_TX >&
Pack::flash_bms_lv_tx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_BMS_LV_TX)
  return flash_bms_lv_tx_;
}

// repeated .primary.FLASH_BMS_LV_RX FLASH_BMS_LV_RX = 72;
inline int Pack::_internal_flash_bms_lv_rx_size() const {
  return flash_bms_lv_rx_.size();
}
inline int Pack::flash_bms_lv_rx_size() const {
  return _internal_flash_bms_lv_rx_size();
}
inline void Pack::clear_flash_bms_lv_rx() {
  flash_bms_lv_rx_.Clear();
}
inline ::primary::FLASH_BMS_LV_RX* Pack::mutable_flash_bms_lv_rx(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.FLASH_BMS_LV_RX)
  return flash_bms_lv_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_RX >*
Pack::mutable_flash_bms_lv_rx() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.FLASH_BMS_LV_RX)
  return &flash_bms_lv_rx_;
}
inline const ::primary::FLASH_BMS_LV_RX& Pack::_internal_flash_bms_lv_rx(int index) const {
  return flash_bms_lv_rx_.Get(index);
}
inline const ::primary::FLASH_BMS_LV_RX& Pack::flash_bms_lv_rx(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.FLASH_BMS_LV_RX)
  return _internal_flash_bms_lv_rx(index);
}
inline ::primary::FLASH_BMS_LV_RX* Pack::_internal_add_flash_bms_lv_rx() {
  return flash_bms_lv_rx_.Add();
}
inline ::primary::FLASH_BMS_LV_RX* Pack::add_flash_bms_lv_rx() {
  // @@protoc_insertion_point(field_add:primary.Pack.FLASH_BMS_LV_RX)
  return _internal_add_flash_bms_lv_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::FLASH_BMS_LV_RX >&
Pack::flash_bms_lv_rx() const {
  // @@protoc_insertion_point(field_list:primary.Pack.FLASH_BMS_LV_RX)
  return flash_bms_lv_rx_;
}

// repeated .primary.BRUSA_NLG5_CTL BRUSA_NLG5_CTL = 73;
inline int Pack::_internal_brusa_nlg5_ctl_size() const {
  return brusa_nlg5_ctl_.size();
}
inline int Pack::brusa_nlg5_ctl_size() const {
  return _internal_brusa_nlg5_ctl_size();
}
inline void Pack::clear_brusa_nlg5_ctl() {
  brusa_nlg5_ctl_.Clear();
}
inline ::primary::BRUSA_NLG5_CTL* Pack::mutable_brusa_nlg5_ctl(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BRUSA_NLG5_CTL)
  return brusa_nlg5_ctl_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_NLG5_CTL >*
Pack::mutable_brusa_nlg5_ctl() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BRUSA_NLG5_CTL)
  return &brusa_nlg5_ctl_;
}
inline const ::primary::BRUSA_NLG5_CTL& Pack::_internal_brusa_nlg5_ctl(int index) const {
  return brusa_nlg5_ctl_.Get(index);
}
inline const ::primary::BRUSA_NLG5_CTL& Pack::brusa_nlg5_ctl(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BRUSA_NLG5_CTL)
  return _internal_brusa_nlg5_ctl(index);
}
inline ::primary::BRUSA_NLG5_CTL* Pack::_internal_add_brusa_nlg5_ctl() {
  return brusa_nlg5_ctl_.Add();
}
inline ::primary::BRUSA_NLG5_CTL* Pack::add_brusa_nlg5_ctl() {
  // @@protoc_insertion_point(field_add:primary.Pack.BRUSA_NLG5_CTL)
  return _internal_add_brusa_nlg5_ctl();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_NLG5_CTL >&
Pack::brusa_nlg5_ctl() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BRUSA_NLG5_CTL)
  return brusa_nlg5_ctl_;
}

// repeated .primary.BRUSA_ST BRUSA_ST = 74;
inline int Pack::_internal_brusa_st_size() const {
  return brusa_st_.size();
}
inline int Pack::brusa_st_size() const {
  return _internal_brusa_st_size();
}
inline void Pack::clear_brusa_st() {
  brusa_st_.Clear();
}
inline ::primary::BRUSA_ST* Pack::mutable_brusa_st(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BRUSA_ST)
  return brusa_st_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ST >*
Pack::mutable_brusa_st() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BRUSA_ST)
  return &brusa_st_;
}
inline const ::primary::BRUSA_ST& Pack::_internal_brusa_st(int index) const {
  return brusa_st_.Get(index);
}
inline const ::primary::BRUSA_ST& Pack::brusa_st(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BRUSA_ST)
  return _internal_brusa_st(index);
}
inline ::primary::BRUSA_ST* Pack::_internal_add_brusa_st() {
  return brusa_st_.Add();
}
inline ::primary::BRUSA_ST* Pack::add_brusa_st() {
  // @@protoc_insertion_point(field_add:primary.Pack.BRUSA_ST)
  return _internal_add_brusa_st();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ST >&
Pack::brusa_st() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BRUSA_ST)
  return brusa_st_;
}

// repeated .primary.BRUSA_ACT_I BRUSA_ACT_I = 75;
inline int Pack::_internal_brusa_act_i_size() const {
  return brusa_act_i_.size();
}
inline int Pack::brusa_act_i_size() const {
  return _internal_brusa_act_i_size();
}
inline void Pack::clear_brusa_act_i() {
  brusa_act_i_.Clear();
}
inline ::primary::BRUSA_ACT_I* Pack::mutable_brusa_act_i(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BRUSA_ACT_I)
  return brusa_act_i_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_I >*
Pack::mutable_brusa_act_i() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BRUSA_ACT_I)
  return &brusa_act_i_;
}
inline const ::primary::BRUSA_ACT_I& Pack::_internal_brusa_act_i(int index) const {
  return brusa_act_i_.Get(index);
}
inline const ::primary::BRUSA_ACT_I& Pack::brusa_act_i(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BRUSA_ACT_I)
  return _internal_brusa_act_i(index);
}
inline ::primary::BRUSA_ACT_I* Pack::_internal_add_brusa_act_i() {
  return brusa_act_i_.Add();
}
inline ::primary::BRUSA_ACT_I* Pack::add_brusa_act_i() {
  // @@protoc_insertion_point(field_add:primary.Pack.BRUSA_ACT_I)
  return _internal_add_brusa_act_i();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_I >&
Pack::brusa_act_i() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BRUSA_ACT_I)
  return brusa_act_i_;
}

// repeated .primary.BRUSA_ACT_II BRUSA_ACT_II = 76;
inline int Pack::_internal_brusa_act_ii_size() const {
  return brusa_act_ii_.size();
}
inline int Pack::brusa_act_ii_size() const {
  return _internal_brusa_act_ii_size();
}
inline void Pack::clear_brusa_act_ii() {
  brusa_act_ii_.Clear();
}
inline ::primary::BRUSA_ACT_II* Pack::mutable_brusa_act_ii(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BRUSA_ACT_II)
  return brusa_act_ii_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_II >*
Pack::mutable_brusa_act_ii() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BRUSA_ACT_II)
  return &brusa_act_ii_;
}
inline const ::primary::BRUSA_ACT_II& Pack::_internal_brusa_act_ii(int index) const {
  return brusa_act_ii_.Get(index);
}
inline const ::primary::BRUSA_ACT_II& Pack::brusa_act_ii(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BRUSA_ACT_II)
  return _internal_brusa_act_ii(index);
}
inline ::primary::BRUSA_ACT_II* Pack::_internal_add_brusa_act_ii() {
  return brusa_act_ii_.Add();
}
inline ::primary::BRUSA_ACT_II* Pack::add_brusa_act_ii() {
  // @@protoc_insertion_point(field_add:primary.Pack.BRUSA_ACT_II)
  return _internal_add_brusa_act_ii();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ACT_II >&
Pack::brusa_act_ii() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BRUSA_ACT_II)
  return brusa_act_ii_;
}

// repeated .primary.BRUSA_TEMP BRUSA_TEMP = 77;
inline int Pack::_internal_brusa_temp_size() const {
  return brusa_temp_.size();
}
inline int Pack::brusa_temp_size() const {
  return _internal_brusa_temp_size();
}
inline void Pack::clear_brusa_temp() {
  brusa_temp_.Clear();
}
inline ::primary::BRUSA_TEMP* Pack::mutable_brusa_temp(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BRUSA_TEMP)
  return brusa_temp_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_TEMP >*
Pack::mutable_brusa_temp() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BRUSA_TEMP)
  return &brusa_temp_;
}
inline const ::primary::BRUSA_TEMP& Pack::_internal_brusa_temp(int index) const {
  return brusa_temp_.Get(index);
}
inline const ::primary::BRUSA_TEMP& Pack::brusa_temp(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BRUSA_TEMP)
  return _internal_brusa_temp(index);
}
inline ::primary::BRUSA_TEMP* Pack::_internal_add_brusa_temp() {
  return brusa_temp_.Add();
}
inline ::primary::BRUSA_TEMP* Pack::add_brusa_temp() {
  // @@protoc_insertion_point(field_add:primary.Pack.BRUSA_TEMP)
  return _internal_add_brusa_temp();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_TEMP >&
Pack::brusa_temp() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BRUSA_TEMP)
  return brusa_temp_;
}

// repeated .primary.BRUSA_ERR BRUSA_ERR = 78;
inline int Pack::_internal_brusa_err_size() const {
  return brusa_err_.size();
}
inline int Pack::brusa_err_size() const {
  return _internal_brusa_err_size();
}
inline void Pack::clear_brusa_err() {
  brusa_err_.Clear();
}
inline ::primary::BRUSA_ERR* Pack::mutable_brusa_err(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.BRUSA_ERR)
  return brusa_err_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ERR >*
Pack::mutable_brusa_err() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.BRUSA_ERR)
  return &brusa_err_;
}
inline const ::primary::BRUSA_ERR& Pack::_internal_brusa_err(int index) const {
  return brusa_err_.Get(index);
}
inline const ::primary::BRUSA_ERR& Pack::brusa_err(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.BRUSA_ERR)
  return _internal_brusa_err(index);
}
inline ::primary::BRUSA_ERR* Pack::_internal_add_brusa_err() {
  return brusa_err_.Add();
}
inline ::primary::BRUSA_ERR* Pack::add_brusa_err() {
  // @@protoc_insertion_point(field_add:primary.Pack.BRUSA_ERR)
  return _internal_add_brusa_err();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::BRUSA_ERR >&
Pack::brusa_err() const {
  // @@protoc_insertion_point(field_list:primary.Pack.BRUSA_ERR)
  return brusa_err_;
}

// repeated .primary.CONTROL_OUTPUT CONTROL_OUTPUT = 79;
inline int Pack::_internal_control_output_size() const {
  return control_output_.size();
}
inline int Pack::control_output_size() const {
  return _internal_control_output_size();
}
inline void Pack::clear_control_output() {
  control_output_.Clear();
}
inline ::primary::CONTROL_OUTPUT* Pack::mutable_control_output(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.CONTROL_OUTPUT)
  return control_output_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CONTROL_OUTPUT >*
Pack::mutable_control_output() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.CONTROL_OUTPUT)
  return &control_output_;
}
inline const ::primary::CONTROL_OUTPUT& Pack::_internal_control_output(int index) const {
  return control_output_.Get(index);
}
inline const ::primary::CONTROL_OUTPUT& Pack::control_output(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.CONTROL_OUTPUT)
  return _internal_control_output(index);
}
inline ::primary::CONTROL_OUTPUT* Pack::_internal_add_control_output() {
  return control_output_.Add();
}
inline ::primary::CONTROL_OUTPUT* Pack::add_control_output() {
  // @@protoc_insertion_point(field_add:primary.Pack.CONTROL_OUTPUT)
  return _internal_add_control_output();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::CONTROL_OUTPUT >&
Pack::control_output() const {
  // @@protoc_insertion_point(field_list:primary.Pack.CONTROL_OUTPUT)
  return control_output_;
}

// repeated .primary.LC_RESET LC_RESET = 80;
inline int Pack::_internal_lc_reset_size() const {
  return lc_reset_.size();
}
inline int Pack::lc_reset_size() const {
  return _internal_lc_reset_size();
}
inline void Pack::clear_lc_reset() {
  lc_reset_.Clear();
}
inline ::primary::LC_RESET* Pack::mutable_lc_reset(int index) {
  // @@protoc_insertion_point(field_mutable:primary.Pack.LC_RESET)
  return lc_reset_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LC_RESET >*
Pack::mutable_lc_reset() {
  // @@protoc_insertion_point(field_mutable_list:primary.Pack.LC_RESET)
  return &lc_reset_;
}
inline const ::primary::LC_RESET& Pack::_internal_lc_reset(int index) const {
  return lc_reset_.Get(index);
}
inline const ::primary::LC_RESET& Pack::lc_reset(int index) const {
  // @@protoc_insertion_point(field_get:primary.Pack.LC_RESET)
  return _internal_lc_reset(index);
}
inline ::primary::LC_RESET* Pack::_internal_add_lc_reset() {
  return lc_reset_.Add();
}
inline ::primary::LC_RESET* Pack::add_lc_reset() {
  // @@protoc_insertion_point(field_add:primary.Pack.LC_RESET)
  return _internal_add_lc_reset();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::primary::LC_RESET >&
Pack::lc_reset() const {
  // @@protoc_insertion_point(field_list:primary.Pack.LC_RESET)
  return lc_reset_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace primary

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::primary::RaceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::RaceType>() {
  return ::primary::RaceType_descriptor();
}
template <> struct is_proto_enum< ::primary::InverterStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::InverterStatus>() {
  return ::primary::InverterStatus_descriptor();
}
template <> struct is_proto_enum< ::primary::CarStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::CarStatus>() {
  return ::primary::CarStatus_descriptor();
}
template <> struct is_proto_enum< ::primary::Toggle> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::Toggle>() {
  return ::primary::Toggle_descriptor();
}
template <> struct is_proto_enum< ::primary::TsStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::TsStatus>() {
  return ::primary::TsStatus_descriptor();
}
template <> struct is_proto_enum< ::primary::SetCarStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::SetCarStatus>() {
  return ::primary::SetCarStatus_descriptor();
}
template <> struct is_proto_enum< ::primary::Bound> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::Bound>() {
  return ::primary::Bound_descriptor();
}
template <> struct is_proto_enum< ::primary::Pedal> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::Pedal>() {
  return ::primary::Pedal_descriptor();
}
template <> struct is_proto_enum< ::primary::ImdStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::primary::ImdStatus>() {
  return ::primary::ImdStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_primary_2eproto
