// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bms.proto

#include "bms.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BALANCING_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BOARD_STATUS_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_RX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_TX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_RX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_TX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_RX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_TX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_RX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_TX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_RX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_TX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_RX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_TX_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FW_UPDATE_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TEMPERATURES_bms_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bms_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VOLTAGES_bms_2eproto;
namespace bms {
class BOARD_STATUSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BOARD_STATUS> _instance;
} _BOARD_STATUS_default_instance_;
class TEMPERATURESDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TEMPERATURES> _instance;
} _TEMPERATURES_default_instance_;
class VOLTAGESDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VOLTAGES> _instance;
} _VOLTAGES_default_instance_;
class BALANCINGDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BALANCING> _instance;
} _BALANCING_default_instance_;
class FW_UPDATEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FW_UPDATE> _instance;
} _FW_UPDATE_default_instance_;
class FLASH_CELLBOARD_0_TXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_0_TX> _instance;
} _FLASH_CELLBOARD_0_TX_default_instance_;
class FLASH_CELLBOARD_0_RXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_0_RX> _instance;
} _FLASH_CELLBOARD_0_RX_default_instance_;
class FLASH_CELLBOARD_1_TXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_1_TX> _instance;
} _FLASH_CELLBOARD_1_TX_default_instance_;
class FLASH_CELLBOARD_1_RXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_1_RX> _instance;
} _FLASH_CELLBOARD_1_RX_default_instance_;
class FLASH_CELLBOARD_2_TXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_2_TX> _instance;
} _FLASH_CELLBOARD_2_TX_default_instance_;
class FLASH_CELLBOARD_2_RXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_2_RX> _instance;
} _FLASH_CELLBOARD_2_RX_default_instance_;
class FLASH_CELLBOARD_3_TXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_3_TX> _instance;
} _FLASH_CELLBOARD_3_TX_default_instance_;
class FLASH_CELLBOARD_3_RXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_3_RX> _instance;
} _FLASH_CELLBOARD_3_RX_default_instance_;
class FLASH_CELLBOARD_4_TXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_4_TX> _instance;
} _FLASH_CELLBOARD_4_TX_default_instance_;
class FLASH_CELLBOARD_4_RXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_4_RX> _instance;
} _FLASH_CELLBOARD_4_RX_default_instance_;
class FLASH_CELLBOARD_5_TXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_5_TX> _instance;
} _FLASH_CELLBOARD_5_TX_default_instance_;
class FLASH_CELLBOARD_5_RXDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FLASH_CELLBOARD_5_RX> _instance;
} _FLASH_CELLBOARD_5_RX_default_instance_;
class PackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pack> _instance;
} _Pack_default_instance_;
}  // namespace bms
static void InitDefaultsscc_info_BALANCING_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_BALANCING_default_instance_;
    new (ptr) ::bms::BALANCING();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::BALANCING::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BALANCING_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BALANCING_bms_2eproto}, {}};

static void InitDefaultsscc_info_BOARD_STATUS_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_BOARD_STATUS_default_instance_;
    new (ptr) ::bms::BOARD_STATUS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::BOARD_STATUS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BOARD_STATUS_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BOARD_STATUS_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_0_RX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_0_RX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_0_RX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_0_RX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_RX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_0_RX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_0_TX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_0_TX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_0_TX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_0_TX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_TX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_0_TX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_1_RX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_1_RX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_1_RX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_1_RX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_RX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_1_RX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_1_TX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_1_TX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_1_TX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_1_TX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_TX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_1_TX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_2_RX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_2_RX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_2_RX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_2_RX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_RX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_2_RX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_2_TX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_2_TX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_2_TX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_2_TX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_TX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_2_TX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_3_RX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_3_RX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_3_RX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_3_RX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_RX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_3_RX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_3_TX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_3_TX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_3_TX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_3_TX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_TX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_3_TX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_4_RX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_4_RX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_4_RX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_4_RX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_RX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_4_RX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_4_TX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_4_TX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_4_TX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_4_TX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_TX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_4_TX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_5_RX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_5_RX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_5_RX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_5_RX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_RX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_5_RX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FLASH_CELLBOARD_5_TX_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FLASH_CELLBOARD_5_TX_default_instance_;
    new (ptr) ::bms::FLASH_CELLBOARD_5_TX();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FLASH_CELLBOARD_5_TX::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_TX_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FLASH_CELLBOARD_5_TX_bms_2eproto}, {}};

static void InitDefaultsscc_info_FW_UPDATE_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_FW_UPDATE_default_instance_;
    new (ptr) ::bms::FW_UPDATE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::FW_UPDATE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FW_UPDATE_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FW_UPDATE_bms_2eproto}, {}};

static void InitDefaultsscc_info_Pack_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_Pack_default_instance_;
    new (ptr) ::bms::Pack();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::Pack::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<17> scc_info_Pack_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 17, 0, InitDefaultsscc_info_Pack_bms_2eproto}, {
      &scc_info_BOARD_STATUS_bms_2eproto.base,
      &scc_info_TEMPERATURES_bms_2eproto.base,
      &scc_info_VOLTAGES_bms_2eproto.base,
      &scc_info_BALANCING_bms_2eproto.base,
      &scc_info_FW_UPDATE_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_0_TX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_0_RX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_1_TX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_1_RX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_2_TX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_2_RX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_3_TX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_3_RX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_4_TX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_4_RX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_5_TX_bms_2eproto.base,
      &scc_info_FLASH_CELLBOARD_5_RX_bms_2eproto.base,}};

static void InitDefaultsscc_info_TEMPERATURES_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_TEMPERATURES_default_instance_;
    new (ptr) ::bms::TEMPERATURES();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::TEMPERATURES::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TEMPERATURES_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TEMPERATURES_bms_2eproto}, {}};

static void InitDefaultsscc_info_VOLTAGES_bms_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bms::_VOLTAGES_default_instance_;
    new (ptr) ::bms::VOLTAGES();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bms::VOLTAGES::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VOLTAGES_bms_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VOLTAGES_bms_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bms_2eproto[18];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bms_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bms_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bms_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS, cellboard_id_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS, errors_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS, balancing_status_),
  PROTOBUF_FIELD_OFFSET(::bms::BOARD_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, cellboard_id_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, temp0_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, temp1_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, temp2_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, temp3_),
  PROTOBUF_FIELD_OFFSET(::bms::TEMPERATURES, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES, cellboard_id_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES, start_index_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES, voltage0_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES, voltage1_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES, voltage2_),
  PROTOBUF_FIELD_OFFSET(::bms::VOLTAGES, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, cellboard_id_),
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, board_index_),
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, cells_),
  PROTOBUF_FIELD_OFFSET(::bms::BALANCING, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FW_UPDATE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FW_UPDATE, cellboard_id_),
  PROTOBUF_FIELD_OFFSET(::bms::FW_UPDATE, board_index_),
  PROTOBUF_FIELD_OFFSET(::bms::FW_UPDATE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_0_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_1_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_2_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_3_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_4_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::FLASH_CELLBOARD_5_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bms::Pack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bms::Pack, board_status_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, temperatures_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, voltages_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, balancing_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, fw_update_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_0_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_0_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_1_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_1_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_2_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_2_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_3_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_3_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_4_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_4_rx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_5_tx_),
  PROTOBUF_FIELD_OFFSET(::bms::Pack, flash_cellboard_5_rx_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bms::BOARD_STATUS)},
  { 9, -1, sizeof(::bms::TEMPERATURES)},
  { 21, -1, sizeof(::bms::VOLTAGES)},
  { 32, -1, sizeof(::bms::BALANCING)},
  { 41, -1, sizeof(::bms::FW_UPDATE)},
  { 49, -1, sizeof(::bms::FLASH_CELLBOARD_0_TX)},
  { 55, -1, sizeof(::bms::FLASH_CELLBOARD_0_RX)},
  { 61, -1, sizeof(::bms::FLASH_CELLBOARD_1_TX)},
  { 67, -1, sizeof(::bms::FLASH_CELLBOARD_1_RX)},
  { 73, -1, sizeof(::bms::FLASH_CELLBOARD_2_TX)},
  { 79, -1, sizeof(::bms::FLASH_CELLBOARD_2_RX)},
  { 85, -1, sizeof(::bms::FLASH_CELLBOARD_3_TX)},
  { 91, -1, sizeof(::bms::FLASH_CELLBOARD_3_RX)},
  { 97, -1, sizeof(::bms::FLASH_CELLBOARD_4_TX)},
  { 103, -1, sizeof(::bms::FLASH_CELLBOARD_4_RX)},
  { 109, -1, sizeof(::bms::FLASH_CELLBOARD_5_TX)},
  { 115, -1, sizeof(::bms::FLASH_CELLBOARD_5_RX)},
  { 121, -1, sizeof(::bms::Pack)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_BOARD_STATUS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_TEMPERATURES_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_VOLTAGES_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_BALANCING_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FW_UPDATE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_0_TX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_0_RX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_1_TX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_1_RX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_2_TX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_2_RX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_3_TX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_3_RX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_4_TX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_4_RX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_5_TX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_FLASH_CELLBOARD_5_RX_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bms::_Pack_default_instance_),
};

const char descriptor_table_protodef_bms_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tbms.proto\022\003bms\"\216\001\n\014BOARD_STATUS\022$\n\014cel"
  "lboard_id\030\001 \001(\0162\016.bms.Cellboard\022\016\n\006error"
  "s\030\002 \001(\r\022.\n\020balancing_status\030\003 \001(\0162\024.bms."
  "BalancingStatus\022\030\n\020_inner_timestamp\030\004 \001("
  "\004\"\237\001\n\014TEMPERATURES\022$\n\014cellboard_id\030\001 \001(\016"
  "2\016.bms.Cellboard\022\023\n\013start_index\030\002 \001(\r\022\r\n"
  "\005temp0\030\003 \001(\002\022\r\n\005temp1\030\004 \001(\002\022\r\n\005temp2\030\005 \001"
  "(\002\022\r\n\005temp3\030\006 \001(\002\022\030\n\020_inner_timestamp\030\007 "
  "\001(\004\"\225\001\n\010VOLTAGES\022$\n\014cellboard_id\030\001 \001(\0162\016"
  ".bms.Cellboard\022\023\n\013start_index\030\002 \001(\r\022\020\n\010v"
  "oltage0\030\003 \001(\002\022\020\n\010voltage1\030\004 \001(\002\022\020\n\010volta"
  "ge2\030\005 \001(\002\022\030\n\020_inner_timestamp\030\006 \001(\004\"o\n\tB"
  "ALANCING\022$\n\014cellboard_id\030\001 \001(\0162\016.bms.Cel"
  "lboard\022\023\n\013board_index\030\002 \001(\r\022\r\n\005cells\030\003 \001"
  "(\r\022\030\n\020_inner_timestamp\030\004 \001(\004\"`\n\tFW_UPDAT"
  "E\022$\n\014cellboard_id\030\001 \001(\0162\016.bms.Cellboard\022"
  "\023\n\013board_index\030\002 \001(\r\022\030\n\020_inner_timestamp"
  "\030\003 \001(\004\"0\n\024FLASH_CELLBOARD_0_TX\022\030\n\020_inner"
  "_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_0_RX"
  "\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CELL"
  "BOARD_1_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024"
  "FLASH_CELLBOARD_1_RX\022\030\n\020_inner_timestamp"
  "\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_2_TX\022\030\n\020_inner"
  "_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_2_RX"
  "\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CELL"
  "BOARD_3_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024"
  "FLASH_CELLBOARD_3_RX\022\030\n\020_inner_timestamp"
  "\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_4_TX\022\030\n\020_inner"
  "_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_4_RX"
  "\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CELL"
  "BOARD_5_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024"
  "FLASH_CELLBOARD_5_RX\022\030\n\020_inner_timestamp"
  "\030\001 \001(\004\"\353\006\n\004Pack\022\'\n\014BOARD_STATUS\030\001 \003(\0132\021."
  "bms.BOARD_STATUS\022\'\n\014TEMPERATURES\030\002 \003(\0132\021"
  ".bms.TEMPERATURES\022\037\n\010VOLTAGES\030\003 \003(\0132\r.bm"
  "s.VOLTAGES\022!\n\tBALANCING\030\004 \003(\0132\016.bms.BALA"
  "NCING\022!\n\tFW_UPDATE\030\005 \003(\0132\016.bms.FW_UPDATE"
  "\0227\n\024FLASH_CELLBOARD_0_TX\030\006 \003(\0132\031.bms.FLA"
  "SH_CELLBOARD_0_TX\0227\n\024FLASH_CELLBOARD_0_R"
  "X\030\007 \003(\0132\031.bms.FLASH_CELLBOARD_0_RX\0227\n\024FL"
  "ASH_CELLBOARD_1_TX\030\010 \003(\0132\031.bms.FLASH_CEL"
  "LBOARD_1_TX\0227\n\024FLASH_CELLBOARD_1_RX\030\t \003("
  "\0132\031.bms.FLASH_CELLBOARD_1_RX\0227\n\024FLASH_CE"
  "LLBOARD_2_TX\030\n \003(\0132\031.bms.FLASH_CELLBOARD"
  "_2_TX\0227\n\024FLASH_CELLBOARD_2_RX\030\013 \003(\0132\031.bm"
  "s.FLASH_CELLBOARD_2_RX\0227\n\024FLASH_CELLBOAR"
  "D_3_TX\030\014 \003(\0132\031.bms.FLASH_CELLBOARD_3_TX\022"
  "7\n\024FLASH_CELLBOARD_3_RX\030\r \003(\0132\031.bms.FLAS"
  "H_CELLBOARD_3_RX\0227\n\024FLASH_CELLBOARD_4_TX"
  "\030\016 \003(\0132\031.bms.FLASH_CELLBOARD_4_TX\0227\n\024FLA"
  "SH_CELLBOARD_4_RX\030\017 \003(\0132\031.bms.FLASH_CELL"
  "BOARD_4_RX\0227\n\024FLASH_CELLBOARD_5_TX\030\020 \003(\013"
  "2\031.bms.FLASH_CELLBOARD_5_TX\0227\n\024FLASH_CEL"
  "LBOARD_5_RX\030\021 \003(\0132\031.bms.FLASH_CELLBOARD_"
  "5_RX*\255\001\n\tCellboard\022\031\n\025Cellboard_CELLBOAR"
  "D_0\020\000\022\031\n\025Cellboard_CELLBOARD_1\020\001\022\031\n\025Cell"
  "board_CELLBOARD_2\020\002\022\031\n\025Cellboard_CELLBOA"
  "RD_3\020\003\022\031\n\025Cellboard_CELLBOARD_4\020\004\022\031\n\025Cel"
  "lboard_CELLBOARD_5\020\005*I\n\017BalancingStatus\022"
  "\027\n\023BalancingStatus_OFF\020\000\022\035\n\031BalancingSta"
  "tus_DISCHARGE\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bms_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bms_2eproto_sccs[18] = {
  &scc_info_BALANCING_bms_2eproto.base,
  &scc_info_BOARD_STATUS_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_0_RX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_0_TX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_1_RX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_1_TX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_2_RX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_2_TX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_3_RX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_3_TX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_4_RX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_4_TX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_5_RX_bms_2eproto.base,
  &scc_info_FLASH_CELLBOARD_5_TX_bms_2eproto.base,
  &scc_info_FW_UPDATE_bms_2eproto.base,
  &scc_info_Pack_bms_2eproto.base,
  &scc_info_TEMPERATURES_bms_2eproto.base,
  &scc_info_VOLTAGES_bms_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bms_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bms_2eproto = {
  false, false, descriptor_table_protodef_bms_2eproto, "bms.proto", 2423,
  &descriptor_table_bms_2eproto_once, descriptor_table_bms_2eproto_sccs, descriptor_table_bms_2eproto_deps, 18, 0,
  schemas, file_default_instances, TableStruct_bms_2eproto::offsets,
  file_level_metadata_bms_2eproto, 18, file_level_enum_descriptors_bms_2eproto, file_level_service_descriptors_bms_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bms_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bms_2eproto)), true);
namespace bms {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cellboard_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bms_2eproto);
  return file_level_enum_descriptors_bms_2eproto[0];
}
bool Cellboard_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BalancingStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bms_2eproto);
  return file_level_enum_descriptors_bms_2eproto[1];
}
bool BalancingStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void BOARD_STATUS::InitAsDefaultInstance() {
}
class BOARD_STATUS::_Internal {
 public:
};

BOARD_STATUS::BOARD_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.BOARD_STATUS)
}
BOARD_STATUS::BOARD_STATUS(const BOARD_STATUS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cellboard_id_, &from.cellboard_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&balancing_status_) -
    reinterpret_cast<char*>(&cellboard_id_)) + sizeof(balancing_status_));
  // @@protoc_insertion_point(copy_constructor:bms.BOARD_STATUS)
}

void BOARD_STATUS::SharedCtor() {
  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balancing_status_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(balancing_status_));
}

BOARD_STATUS::~BOARD_STATUS() {
  // @@protoc_insertion_point(destructor:bms.BOARD_STATUS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BOARD_STATUS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BOARD_STATUS::ArenaDtor(void* object) {
  BOARD_STATUS* _this = reinterpret_cast< BOARD_STATUS* >(object);
  (void)_this;
}
void BOARD_STATUS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BOARD_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BOARD_STATUS& BOARD_STATUS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BOARD_STATUS_bms_2eproto.base);
  return *internal_default_instance();
}


void BOARD_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BOARD_STATUS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balancing_status_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(balancing_status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BOARD_STATUS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bms.Cellboard cellboard_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cellboard_id(static_cast<::bms::Cellboard>(val));
        } else goto handle_unusual;
        continue;
      // uint32 errors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bms.BalancingStatus balancing_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_balancing_status(static_cast<::bms::BalancingStatus>(val));
        } else goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BOARD_STATUS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BOARD_STATUS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cellboard_id(), target);
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_errors(), target);
  }

  // .bms.BalancingStatus balancing_status = 3;
  if (this->balancing_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BOARD_STATUS)
  return target;
}

size_t BOARD_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BOARD_STATUS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cellboard_id());
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_errors());
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  // .bms.BalancingStatus balancing_status = 3;
  if (this->balancing_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_balancing_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BOARD_STATUS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.BOARD_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const BOARD_STATUS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BOARD_STATUS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.BOARD_STATUS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.BOARD_STATUS)
    MergeFrom(*source);
  }
}

void BOARD_STATUS::MergeFrom(const BOARD_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BOARD_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cellboard_id() != 0) {
    _internal_set_cellboard_id(from._internal_cellboard_id());
  }
  if (from.errors() != 0) {
    _internal_set_errors(from._internal_errors());
  }
  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from.balancing_status() != 0) {
    _internal_set_balancing_status(from._internal_balancing_status());
  }
}

void BOARD_STATUS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.BOARD_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BOARD_STATUS::CopyFrom(const BOARD_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BOARD_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BOARD_STATUS::IsInitialized() const {
  return true;
}

void BOARD_STATUS::InternalSwap(BOARD_STATUS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BOARD_STATUS, balancing_status_)
      + sizeof(BOARD_STATUS::balancing_status_)
      - PROTOBUF_FIELD_OFFSET(BOARD_STATUS, cellboard_id_)>(
          reinterpret_cast<char*>(&cellboard_id_),
          reinterpret_cast<char*>(&other->cellboard_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BOARD_STATUS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TEMPERATURES::InitAsDefaultInstance() {
}
class TEMPERATURES::_Internal {
 public:
};

TEMPERATURES::TEMPERATURES(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.TEMPERATURES)
}
TEMPERATURES::TEMPERATURES(const TEMPERATURES& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cellboard_id_, &from.cellboard_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&cellboard_id_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.TEMPERATURES)
}

void TEMPERATURES::SharedCtor() {
  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(_inner_timestamp_));
}

TEMPERATURES::~TEMPERATURES() {
  // @@protoc_insertion_point(destructor:bms.TEMPERATURES)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TEMPERATURES::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TEMPERATURES::ArenaDtor(void* object) {
  TEMPERATURES* _this = reinterpret_cast< TEMPERATURES* >(object);
  (void)_this;
}
void TEMPERATURES::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TEMPERATURES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TEMPERATURES& TEMPERATURES::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TEMPERATURES_bms_2eproto.base);
  return *internal_default_instance();
}


void TEMPERATURES::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.TEMPERATURES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TEMPERATURES::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bms.Cellboard cellboard_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cellboard_id(static_cast<::bms::Cellboard>(val));
        } else goto handle_unusual;
        continue;
      // uint32 start_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float temp0 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          temp0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temp1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          temp1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temp2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          temp2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temp3 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          temp3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TEMPERATURES::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.TEMPERATURES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cellboard_id(), target);
  }

  // uint32 start_index = 2;
  if (this->start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start_index(), target);
  }

  // float temp0 = 3;
  if (!(this->temp0() <= 0 && this->temp0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_temp0(), target);
  }

  // float temp1 = 4;
  if (!(this->temp1() <= 0 && this->temp1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_temp1(), target);
  }

  // float temp2 = 5;
  if (!(this->temp2() <= 0 && this->temp2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_temp2(), target);
  }

  // float temp3 = 6;
  if (!(this->temp3() <= 0 && this->temp3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_temp3(), target);
  }

  // uint64 _inner_timestamp = 7;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.TEMPERATURES)
  return target;
}

size_t TEMPERATURES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.TEMPERATURES)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cellboard_id());
  }

  // uint32 start_index = 2;
  if (this->start_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_start_index());
  }

  // float temp0 = 3;
  if (!(this->temp0() <= 0 && this->temp0() >= 0)) {
    total_size += 1 + 4;
  }

  // float temp1 = 4;
  if (!(this->temp1() <= 0 && this->temp1() >= 0)) {
    total_size += 1 + 4;
  }

  // float temp2 = 5;
  if (!(this->temp2() <= 0 && this->temp2() >= 0)) {
    total_size += 1 + 4;
  }

  // float temp3 = 6;
  if (!(this->temp3() <= 0 && this->temp3() >= 0)) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 7;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TEMPERATURES::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.TEMPERATURES)
  GOOGLE_DCHECK_NE(&from, this);
  const TEMPERATURES* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TEMPERATURES>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.TEMPERATURES)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.TEMPERATURES)
    MergeFrom(*source);
  }
}

void TEMPERATURES::MergeFrom(const TEMPERATURES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.TEMPERATURES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cellboard_id() != 0) {
    _internal_set_cellboard_id(from._internal_cellboard_id());
  }
  if (from.start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (!(from.temp0() <= 0 && from.temp0() >= 0)) {
    _internal_set_temp0(from._internal_temp0());
  }
  if (!(from.temp1() <= 0 && from.temp1() >= 0)) {
    _internal_set_temp1(from._internal_temp1());
  }
  if (!(from.temp2() <= 0 && from.temp2() >= 0)) {
    _internal_set_temp2(from._internal_temp2());
  }
  if (!(from.temp3() <= 0 && from.temp3() >= 0)) {
    _internal_set_temp3(from._internal_temp3());
  }
  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void TEMPERATURES::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.TEMPERATURES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEMPERATURES::CopyFrom(const TEMPERATURES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.TEMPERATURES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEMPERATURES::IsInitialized() const {
  return true;
}

void TEMPERATURES::InternalSwap(TEMPERATURES* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TEMPERATURES, _inner_timestamp_)
      + sizeof(TEMPERATURES::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(TEMPERATURES, cellboard_id_)>(
          reinterpret_cast<char*>(&cellboard_id_),
          reinterpret_cast<char*>(&other->cellboard_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TEMPERATURES::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VOLTAGES::InitAsDefaultInstance() {
}
class VOLTAGES::_Internal {
 public:
};

VOLTAGES::VOLTAGES(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.VOLTAGES)
}
VOLTAGES::VOLTAGES(const VOLTAGES& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cellboard_id_, &from.cellboard_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&voltage2_) -
    reinterpret_cast<char*>(&cellboard_id_)) + sizeof(voltage2_));
  // @@protoc_insertion_point(copy_constructor:bms.VOLTAGES)
}

void VOLTAGES::SharedCtor() {
  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voltage2_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(voltage2_));
}

VOLTAGES::~VOLTAGES() {
  // @@protoc_insertion_point(destructor:bms.VOLTAGES)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VOLTAGES::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void VOLTAGES::ArenaDtor(void* object) {
  VOLTAGES* _this = reinterpret_cast< VOLTAGES* >(object);
  (void)_this;
}
void VOLTAGES::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VOLTAGES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VOLTAGES& VOLTAGES::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VOLTAGES_bms_2eproto.base);
  return *internal_default_instance();
}


void VOLTAGES::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.VOLTAGES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voltage2_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(voltage2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VOLTAGES::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bms.Cellboard cellboard_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cellboard_id(static_cast<::bms::Cellboard>(val));
        } else goto handle_unusual;
        continue;
      // uint32 start_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float voltage0 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          voltage0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float voltage1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          voltage1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float voltage2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          voltage2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VOLTAGES::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.VOLTAGES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cellboard_id(), target);
  }

  // uint32 start_index = 2;
  if (this->start_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start_index(), target);
  }

  // float voltage0 = 3;
  if (!(this->voltage0() <= 0 && this->voltage0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_voltage0(), target);
  }

  // float voltage1 = 4;
  if (!(this->voltage1() <= 0 && this->voltage1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_voltage1(), target);
  }

  // float voltage2 = 5;
  if (!(this->voltage2() <= 0 && this->voltage2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_voltage2(), target);
  }

  // uint64 _inner_timestamp = 6;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.VOLTAGES)
  return target;
}

size_t VOLTAGES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.VOLTAGES)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cellboard_id());
  }

  // uint32 start_index = 2;
  if (this->start_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_start_index());
  }

  // float voltage0 = 3;
  if (!(this->voltage0() <= 0 && this->voltage0() >= 0)) {
    total_size += 1 + 4;
  }

  // float voltage1 = 4;
  if (!(this->voltage1() <= 0 && this->voltage1() >= 0)) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 6;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  // float voltage2 = 5;
  if (!(this->voltage2() <= 0 && this->voltage2() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VOLTAGES::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.VOLTAGES)
  GOOGLE_DCHECK_NE(&from, this);
  const VOLTAGES* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VOLTAGES>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.VOLTAGES)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.VOLTAGES)
    MergeFrom(*source);
  }
}

void VOLTAGES::MergeFrom(const VOLTAGES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.VOLTAGES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cellboard_id() != 0) {
    _internal_set_cellboard_id(from._internal_cellboard_id());
  }
  if (from.start_index() != 0) {
    _internal_set_start_index(from._internal_start_index());
  }
  if (!(from.voltage0() <= 0 && from.voltage0() >= 0)) {
    _internal_set_voltage0(from._internal_voltage0());
  }
  if (!(from.voltage1() <= 0 && from.voltage1() >= 0)) {
    _internal_set_voltage1(from._internal_voltage1());
  }
  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (!(from.voltage2() <= 0 && from.voltage2() >= 0)) {
    _internal_set_voltage2(from._internal_voltage2());
  }
}

void VOLTAGES::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.VOLTAGES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VOLTAGES::CopyFrom(const VOLTAGES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.VOLTAGES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VOLTAGES::IsInitialized() const {
  return true;
}

void VOLTAGES::InternalSwap(VOLTAGES* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VOLTAGES, voltage2_)
      + sizeof(VOLTAGES::voltage2_)
      - PROTOBUF_FIELD_OFFSET(VOLTAGES, cellboard_id_)>(
          reinterpret_cast<char*>(&cellboard_id_),
          reinterpret_cast<char*>(&other->cellboard_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VOLTAGES::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BALANCING::InitAsDefaultInstance() {
}
class BALANCING::_Internal {
 public:
};

BALANCING::BALANCING(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.BALANCING)
}
BALANCING::BALANCING(const BALANCING& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cellboard_id_, &from.cellboard_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cells_) -
    reinterpret_cast<char*>(&cellboard_id_)) + sizeof(cells_));
  // @@protoc_insertion_point(copy_constructor:bms.BALANCING)
}

void BALANCING::SharedCtor() {
  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cells_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(cells_));
}

BALANCING::~BALANCING() {
  // @@protoc_insertion_point(destructor:bms.BALANCING)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BALANCING::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BALANCING::ArenaDtor(void* object) {
  BALANCING* _this = reinterpret_cast< BALANCING* >(object);
  (void)_this;
}
void BALANCING::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BALANCING::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BALANCING& BALANCING::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BALANCING_bms_2eproto.base);
  return *internal_default_instance();
}


void BALANCING::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.BALANCING)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cells_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(cells_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BALANCING::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bms.Cellboard cellboard_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cellboard_id(static_cast<::bms::Cellboard>(val));
        } else goto handle_unusual;
        continue;
      // uint32 board_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          board_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 cells = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cells_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BALANCING::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.BALANCING)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cellboard_id(), target);
  }

  // uint32 board_index = 2;
  if (this->board_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_board_index(), target);
  }

  // uint32 cells = 3;
  if (this->cells() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_cells(), target);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.BALANCING)
  return target;
}

size_t BALANCING::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.BALANCING)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cellboard_id());
  }

  // uint32 board_index = 2;
  if (this->board_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_board_index());
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  // uint32 cells = 3;
  if (this->cells() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_cells());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BALANCING::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.BALANCING)
  GOOGLE_DCHECK_NE(&from, this);
  const BALANCING* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BALANCING>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.BALANCING)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.BALANCING)
    MergeFrom(*source);
  }
}

void BALANCING::MergeFrom(const BALANCING& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.BALANCING)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cellboard_id() != 0) {
    _internal_set_cellboard_id(from._internal_cellboard_id());
  }
  if (from.board_index() != 0) {
    _internal_set_board_index(from._internal_board_index());
  }
  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
  if (from.cells() != 0) {
    _internal_set_cells(from._internal_cells());
  }
}

void BALANCING::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.BALANCING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BALANCING::CopyFrom(const BALANCING& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.BALANCING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BALANCING::IsInitialized() const {
  return true;
}

void BALANCING::InternalSwap(BALANCING* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BALANCING, cells_)
      + sizeof(BALANCING::cells_)
      - PROTOBUF_FIELD_OFFSET(BALANCING, cellboard_id_)>(
          reinterpret_cast<char*>(&cellboard_id_),
          reinterpret_cast<char*>(&other->cellboard_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BALANCING::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FW_UPDATE::InitAsDefaultInstance() {
}
class FW_UPDATE::_Internal {
 public:
};

FW_UPDATE::FW_UPDATE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FW_UPDATE)
}
FW_UPDATE::FW_UPDATE(const FW_UPDATE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cellboard_id_, &from.cellboard_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&cellboard_id_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:bms.FW_UPDATE)
}

void FW_UPDATE::SharedCtor() {
  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(_inner_timestamp_));
}

FW_UPDATE::~FW_UPDATE() {
  // @@protoc_insertion_point(destructor:bms.FW_UPDATE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FW_UPDATE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FW_UPDATE::ArenaDtor(void* object) {
  FW_UPDATE* _this = reinterpret_cast< FW_UPDATE* >(object);
  (void)_this;
}
void FW_UPDATE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FW_UPDATE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FW_UPDATE& FW_UPDATE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FW_UPDATE_bms_2eproto.base);
  return *internal_default_instance();
}


void FW_UPDATE::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FW_UPDATE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cellboard_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&cellboard_id_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FW_UPDATE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bms.Cellboard cellboard_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cellboard_id(static_cast<::bms::Cellboard>(val));
        } else goto handle_unusual;
        continue;
      // uint32 board_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          board_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 _inner_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FW_UPDATE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FW_UPDATE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cellboard_id(), target);
  }

  // uint32 board_index = 2;
  if (this->board_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_board_index(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FW_UPDATE)
  return target;
}

size_t FW_UPDATE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FW_UPDATE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bms.Cellboard cellboard_id = 1;
  if (this->cellboard_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cellboard_id());
  }

  // uint32 board_index = 2;
  if (this->board_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_board_index());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FW_UPDATE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FW_UPDATE)
  GOOGLE_DCHECK_NE(&from, this);
  const FW_UPDATE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FW_UPDATE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FW_UPDATE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FW_UPDATE)
    MergeFrom(*source);
  }
}

void FW_UPDATE::MergeFrom(const FW_UPDATE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FW_UPDATE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cellboard_id() != 0) {
    _internal_set_cellboard_id(from._internal_cellboard_id());
  }
  if (from.board_index() != 0) {
    _internal_set_board_index(from._internal_board_index());
  }
  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FW_UPDATE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FW_UPDATE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FW_UPDATE::CopyFrom(const FW_UPDATE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FW_UPDATE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FW_UPDATE::IsInitialized() const {
  return true;
}

void FW_UPDATE::InternalSwap(FW_UPDATE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FW_UPDATE, _inner_timestamp_)
      + sizeof(FW_UPDATE::_inner_timestamp_)
      - PROTOBUF_FIELD_OFFSET(FW_UPDATE, cellboard_id_)>(
          reinterpret_cast<char*>(&cellboard_id_),
          reinterpret_cast<char*>(&other->cellboard_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FW_UPDATE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_0_TX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_0_TX::_Internal {
 public:
};

FLASH_CELLBOARD_0_TX::FLASH_CELLBOARD_0_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_0_TX)
}
FLASH_CELLBOARD_0_TX::FLASH_CELLBOARD_0_TX(const FLASH_CELLBOARD_0_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_0_TX)
}

void FLASH_CELLBOARD_0_TX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_0_TX::~FLASH_CELLBOARD_0_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_0_TX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_0_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_0_TX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_0_TX* _this = reinterpret_cast< FLASH_CELLBOARD_0_TX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_0_TX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_0_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_0_TX& FLASH_CELLBOARD_0_TX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_0_TX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_0_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_0_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_0_TX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_0_TX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_0_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_0_TX)
  return target;
}

size_t FLASH_CELLBOARD_0_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_0_TX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_0_TX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_0_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_0_TX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_0_TX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_0_TX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_0_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_0_TX::MergeFrom(const FLASH_CELLBOARD_0_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_0_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_0_TX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_0_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_0_TX::CopyFrom(const FLASH_CELLBOARD_0_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_0_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_0_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_0_TX::InternalSwap(FLASH_CELLBOARD_0_TX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_0_TX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_0_RX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_0_RX::_Internal {
 public:
};

FLASH_CELLBOARD_0_RX::FLASH_CELLBOARD_0_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_0_RX)
}
FLASH_CELLBOARD_0_RX::FLASH_CELLBOARD_0_RX(const FLASH_CELLBOARD_0_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_0_RX)
}

void FLASH_CELLBOARD_0_RX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_0_RX::~FLASH_CELLBOARD_0_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_0_RX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_0_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_0_RX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_0_RX* _this = reinterpret_cast< FLASH_CELLBOARD_0_RX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_0_RX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_0_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_0_RX& FLASH_CELLBOARD_0_RX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_0_RX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_0_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_0_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_0_RX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_0_RX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_0_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_0_RX)
  return target;
}

size_t FLASH_CELLBOARD_0_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_0_RX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_0_RX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_0_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_0_RX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_0_RX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_0_RX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_0_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_0_RX::MergeFrom(const FLASH_CELLBOARD_0_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_0_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_0_RX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_0_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_0_RX::CopyFrom(const FLASH_CELLBOARD_0_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_0_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_0_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_0_RX::InternalSwap(FLASH_CELLBOARD_0_RX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_0_RX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_1_TX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_1_TX::_Internal {
 public:
};

FLASH_CELLBOARD_1_TX::FLASH_CELLBOARD_1_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_1_TX)
}
FLASH_CELLBOARD_1_TX::FLASH_CELLBOARD_1_TX(const FLASH_CELLBOARD_1_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_1_TX)
}

void FLASH_CELLBOARD_1_TX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_1_TX::~FLASH_CELLBOARD_1_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_1_TX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_1_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_1_TX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_1_TX* _this = reinterpret_cast< FLASH_CELLBOARD_1_TX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_1_TX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_1_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_1_TX& FLASH_CELLBOARD_1_TX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_1_TX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_1_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_1_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_1_TX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_1_TX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_1_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_1_TX)
  return target;
}

size_t FLASH_CELLBOARD_1_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_1_TX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_1_TX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_1_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_1_TX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_1_TX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_1_TX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_1_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_1_TX::MergeFrom(const FLASH_CELLBOARD_1_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_1_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_1_TX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_1_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_1_TX::CopyFrom(const FLASH_CELLBOARD_1_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_1_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_1_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_1_TX::InternalSwap(FLASH_CELLBOARD_1_TX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_1_TX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_1_RX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_1_RX::_Internal {
 public:
};

FLASH_CELLBOARD_1_RX::FLASH_CELLBOARD_1_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_1_RX)
}
FLASH_CELLBOARD_1_RX::FLASH_CELLBOARD_1_RX(const FLASH_CELLBOARD_1_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_1_RX)
}

void FLASH_CELLBOARD_1_RX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_1_RX::~FLASH_CELLBOARD_1_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_1_RX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_1_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_1_RX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_1_RX* _this = reinterpret_cast< FLASH_CELLBOARD_1_RX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_1_RX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_1_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_1_RX& FLASH_CELLBOARD_1_RX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_1_RX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_1_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_1_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_1_RX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_1_RX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_1_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_1_RX)
  return target;
}

size_t FLASH_CELLBOARD_1_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_1_RX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_1_RX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_1_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_1_RX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_1_RX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_1_RX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_1_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_1_RX::MergeFrom(const FLASH_CELLBOARD_1_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_1_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_1_RX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_1_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_1_RX::CopyFrom(const FLASH_CELLBOARD_1_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_1_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_1_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_1_RX::InternalSwap(FLASH_CELLBOARD_1_RX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_1_RX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_2_TX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_2_TX::_Internal {
 public:
};

FLASH_CELLBOARD_2_TX::FLASH_CELLBOARD_2_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_2_TX)
}
FLASH_CELLBOARD_2_TX::FLASH_CELLBOARD_2_TX(const FLASH_CELLBOARD_2_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_2_TX)
}

void FLASH_CELLBOARD_2_TX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_2_TX::~FLASH_CELLBOARD_2_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_2_TX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_2_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_2_TX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_2_TX* _this = reinterpret_cast< FLASH_CELLBOARD_2_TX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_2_TX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_2_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_2_TX& FLASH_CELLBOARD_2_TX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_2_TX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_2_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_2_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_2_TX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_2_TX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_2_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_2_TX)
  return target;
}

size_t FLASH_CELLBOARD_2_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_2_TX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_2_TX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_2_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_2_TX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_2_TX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_2_TX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_2_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_2_TX::MergeFrom(const FLASH_CELLBOARD_2_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_2_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_2_TX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_2_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_2_TX::CopyFrom(const FLASH_CELLBOARD_2_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_2_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_2_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_2_TX::InternalSwap(FLASH_CELLBOARD_2_TX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_2_TX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_2_RX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_2_RX::_Internal {
 public:
};

FLASH_CELLBOARD_2_RX::FLASH_CELLBOARD_2_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_2_RX)
}
FLASH_CELLBOARD_2_RX::FLASH_CELLBOARD_2_RX(const FLASH_CELLBOARD_2_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_2_RX)
}

void FLASH_CELLBOARD_2_RX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_2_RX::~FLASH_CELLBOARD_2_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_2_RX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_2_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_2_RX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_2_RX* _this = reinterpret_cast< FLASH_CELLBOARD_2_RX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_2_RX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_2_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_2_RX& FLASH_CELLBOARD_2_RX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_2_RX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_2_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_2_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_2_RX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_2_RX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_2_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_2_RX)
  return target;
}

size_t FLASH_CELLBOARD_2_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_2_RX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_2_RX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_2_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_2_RX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_2_RX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_2_RX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_2_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_2_RX::MergeFrom(const FLASH_CELLBOARD_2_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_2_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_2_RX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_2_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_2_RX::CopyFrom(const FLASH_CELLBOARD_2_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_2_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_2_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_2_RX::InternalSwap(FLASH_CELLBOARD_2_RX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_2_RX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_3_TX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_3_TX::_Internal {
 public:
};

FLASH_CELLBOARD_3_TX::FLASH_CELLBOARD_3_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_3_TX)
}
FLASH_CELLBOARD_3_TX::FLASH_CELLBOARD_3_TX(const FLASH_CELLBOARD_3_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_3_TX)
}

void FLASH_CELLBOARD_3_TX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_3_TX::~FLASH_CELLBOARD_3_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_3_TX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_3_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_3_TX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_3_TX* _this = reinterpret_cast< FLASH_CELLBOARD_3_TX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_3_TX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_3_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_3_TX& FLASH_CELLBOARD_3_TX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_3_TX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_3_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_3_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_3_TX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_3_TX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_3_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_3_TX)
  return target;
}

size_t FLASH_CELLBOARD_3_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_3_TX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_3_TX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_3_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_3_TX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_3_TX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_3_TX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_3_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_3_TX::MergeFrom(const FLASH_CELLBOARD_3_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_3_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_3_TX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_3_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_3_TX::CopyFrom(const FLASH_CELLBOARD_3_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_3_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_3_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_3_TX::InternalSwap(FLASH_CELLBOARD_3_TX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_3_TX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_3_RX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_3_RX::_Internal {
 public:
};

FLASH_CELLBOARD_3_RX::FLASH_CELLBOARD_3_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_3_RX)
}
FLASH_CELLBOARD_3_RX::FLASH_CELLBOARD_3_RX(const FLASH_CELLBOARD_3_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_3_RX)
}

void FLASH_CELLBOARD_3_RX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_3_RX::~FLASH_CELLBOARD_3_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_3_RX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_3_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_3_RX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_3_RX* _this = reinterpret_cast< FLASH_CELLBOARD_3_RX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_3_RX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_3_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_3_RX& FLASH_CELLBOARD_3_RX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_3_RX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_3_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_3_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_3_RX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_3_RX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_3_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_3_RX)
  return target;
}

size_t FLASH_CELLBOARD_3_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_3_RX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_3_RX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_3_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_3_RX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_3_RX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_3_RX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_3_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_3_RX::MergeFrom(const FLASH_CELLBOARD_3_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_3_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_3_RX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_3_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_3_RX::CopyFrom(const FLASH_CELLBOARD_3_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_3_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_3_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_3_RX::InternalSwap(FLASH_CELLBOARD_3_RX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_3_RX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_4_TX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_4_TX::_Internal {
 public:
};

FLASH_CELLBOARD_4_TX::FLASH_CELLBOARD_4_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_4_TX)
}
FLASH_CELLBOARD_4_TX::FLASH_CELLBOARD_4_TX(const FLASH_CELLBOARD_4_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_4_TX)
}

void FLASH_CELLBOARD_4_TX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_4_TX::~FLASH_CELLBOARD_4_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_4_TX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_4_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_4_TX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_4_TX* _this = reinterpret_cast< FLASH_CELLBOARD_4_TX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_4_TX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_4_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_4_TX& FLASH_CELLBOARD_4_TX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_4_TX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_4_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_4_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_4_TX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_4_TX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_4_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_4_TX)
  return target;
}

size_t FLASH_CELLBOARD_4_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_4_TX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_4_TX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_4_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_4_TX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_4_TX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_4_TX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_4_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_4_TX::MergeFrom(const FLASH_CELLBOARD_4_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_4_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_4_TX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_4_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_4_TX::CopyFrom(const FLASH_CELLBOARD_4_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_4_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_4_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_4_TX::InternalSwap(FLASH_CELLBOARD_4_TX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_4_TX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_4_RX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_4_RX::_Internal {
 public:
};

FLASH_CELLBOARD_4_RX::FLASH_CELLBOARD_4_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_4_RX)
}
FLASH_CELLBOARD_4_RX::FLASH_CELLBOARD_4_RX(const FLASH_CELLBOARD_4_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_4_RX)
}

void FLASH_CELLBOARD_4_RX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_4_RX::~FLASH_CELLBOARD_4_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_4_RX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_4_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_4_RX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_4_RX* _this = reinterpret_cast< FLASH_CELLBOARD_4_RX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_4_RX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_4_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_4_RX& FLASH_CELLBOARD_4_RX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_4_RX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_4_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_4_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_4_RX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_4_RX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_4_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_4_RX)
  return target;
}

size_t FLASH_CELLBOARD_4_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_4_RX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_4_RX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_4_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_4_RX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_4_RX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_4_RX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_4_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_4_RX::MergeFrom(const FLASH_CELLBOARD_4_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_4_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_4_RX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_4_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_4_RX::CopyFrom(const FLASH_CELLBOARD_4_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_4_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_4_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_4_RX::InternalSwap(FLASH_CELLBOARD_4_RX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_4_RX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_5_TX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_5_TX::_Internal {
 public:
};

FLASH_CELLBOARD_5_TX::FLASH_CELLBOARD_5_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_5_TX)
}
FLASH_CELLBOARD_5_TX::FLASH_CELLBOARD_5_TX(const FLASH_CELLBOARD_5_TX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_5_TX)
}

void FLASH_CELLBOARD_5_TX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_5_TX::~FLASH_CELLBOARD_5_TX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_5_TX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_5_TX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_5_TX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_5_TX* _this = reinterpret_cast< FLASH_CELLBOARD_5_TX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_5_TX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_5_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_5_TX& FLASH_CELLBOARD_5_TX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_5_TX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_5_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_5_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_5_TX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_5_TX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_5_TX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_5_TX)
  return target;
}

size_t FLASH_CELLBOARD_5_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_5_TX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_5_TX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_5_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_5_TX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_5_TX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_5_TX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_5_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_5_TX::MergeFrom(const FLASH_CELLBOARD_5_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_5_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_5_TX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_5_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_5_TX::CopyFrom(const FLASH_CELLBOARD_5_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_5_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_5_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_5_TX::InternalSwap(FLASH_CELLBOARD_5_TX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_5_TX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FLASH_CELLBOARD_5_RX::InitAsDefaultInstance() {
}
class FLASH_CELLBOARD_5_RX::_Internal {
 public:
};

FLASH_CELLBOARD_5_RX::FLASH_CELLBOARD_5_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.FLASH_CELLBOARD_5_RX)
}
FLASH_CELLBOARD_5_RX::FLASH_CELLBOARD_5_RX(const FLASH_CELLBOARD_5_RX& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:bms.FLASH_CELLBOARD_5_RX)
}

void FLASH_CELLBOARD_5_RX::SharedCtor() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}

FLASH_CELLBOARD_5_RX::~FLASH_CELLBOARD_5_RX() {
  // @@protoc_insertion_point(destructor:bms.FLASH_CELLBOARD_5_RX)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FLASH_CELLBOARD_5_RX::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FLASH_CELLBOARD_5_RX::ArenaDtor(void* object) {
  FLASH_CELLBOARD_5_RX* _this = reinterpret_cast< FLASH_CELLBOARD_5_RX* >(object);
  (void)_this;
}
void FLASH_CELLBOARD_5_RX::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FLASH_CELLBOARD_5_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FLASH_CELLBOARD_5_RX& FLASH_CELLBOARD_5_RX::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FLASH_CELLBOARD_5_RX_bms_2eproto.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_5_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.FLASH_CELLBOARD_5_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FLASH_CELLBOARD_5_RX::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 _inner_timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _inner_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FLASH_CELLBOARD_5_RX::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.FLASH_CELLBOARD_5_RX)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal__inner_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.FLASH_CELLBOARD_5_RX)
  return target;
}

size_t FLASH_CELLBOARD_5_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.FLASH_CELLBOARD_5_RX)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal__inner_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_5_RX::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.FLASH_CELLBOARD_5_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_5_RX* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FLASH_CELLBOARD_5_RX>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.FLASH_CELLBOARD_5_RX)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.FLASH_CELLBOARD_5_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_5_RX::MergeFrom(const FLASH_CELLBOARD_5_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.FLASH_CELLBOARD_5_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    _internal_set__inner_timestamp(from._internal__inner_timestamp());
  }
}

void FLASH_CELLBOARD_5_RX::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.FLASH_CELLBOARD_5_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_5_RX::CopyFrom(const FLASH_CELLBOARD_5_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.FLASH_CELLBOARD_5_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_5_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_5_RX::InternalSwap(FLASH_CELLBOARD_5_RX* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FLASH_CELLBOARD_5_RX::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pack::InitAsDefaultInstance() {
}
class Pack::_Internal {
 public:
};

Pack::Pack(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  board_status_(arena),
  temperatures_(arena),
  voltages_(arena),
  balancing_(arena),
  fw_update_(arena),
  flash_cellboard_0_tx_(arena),
  flash_cellboard_0_rx_(arena),
  flash_cellboard_1_tx_(arena),
  flash_cellboard_1_rx_(arena),
  flash_cellboard_2_tx_(arena),
  flash_cellboard_2_rx_(arena),
  flash_cellboard_3_tx_(arena),
  flash_cellboard_3_rx_(arena),
  flash_cellboard_4_tx_(arena),
  flash_cellboard_4_rx_(arena),
  flash_cellboard_5_tx_(arena),
  flash_cellboard_5_rx_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bms.Pack)
}
Pack::Pack(const Pack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      board_status_(from.board_status_),
      temperatures_(from.temperatures_),
      voltages_(from.voltages_),
      balancing_(from.balancing_),
      fw_update_(from.fw_update_),
      flash_cellboard_0_tx_(from.flash_cellboard_0_tx_),
      flash_cellboard_0_rx_(from.flash_cellboard_0_rx_),
      flash_cellboard_1_tx_(from.flash_cellboard_1_tx_),
      flash_cellboard_1_rx_(from.flash_cellboard_1_rx_),
      flash_cellboard_2_tx_(from.flash_cellboard_2_tx_),
      flash_cellboard_2_rx_(from.flash_cellboard_2_rx_),
      flash_cellboard_3_tx_(from.flash_cellboard_3_tx_),
      flash_cellboard_3_rx_(from.flash_cellboard_3_rx_),
      flash_cellboard_4_tx_(from.flash_cellboard_4_tx_),
      flash_cellboard_4_rx_(from.flash_cellboard_4_rx_),
      flash_cellboard_5_tx_(from.flash_cellboard_5_tx_),
      flash_cellboard_5_rx_(from.flash_cellboard_5_rx_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bms.Pack)
}

void Pack::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Pack_bms_2eproto.base);
}

Pack::~Pack() {
  // @@protoc_insertion_point(destructor:bms.Pack)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pack::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pack::ArenaDtor(void* object) {
  Pack* _this = reinterpret_cast< Pack* >(object);
  (void)_this;
}
void Pack::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pack& Pack::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pack_bms_2eproto.base);
  return *internal_default_instance();
}


void Pack::Clear() {
// @@protoc_insertion_point(message_clear_start:bms.Pack)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  board_status_.Clear();
  temperatures_.Clear();
  voltages_.Clear();
  balancing_.Clear();
  fw_update_.Clear();
  flash_cellboard_0_tx_.Clear();
  flash_cellboard_0_rx_.Clear();
  flash_cellboard_1_tx_.Clear();
  flash_cellboard_1_rx_.Clear();
  flash_cellboard_2_tx_.Clear();
  flash_cellboard_2_rx_.Clear();
  flash_cellboard_3_tx_.Clear();
  flash_cellboard_3_rx_.Clear();
  flash_cellboard_4_tx_.Clear();
  flash_cellboard_4_rx_.Clear();
  flash_cellboard_5_tx_.Clear();
  flash_cellboard_5_rx_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pack::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bms.BOARD_STATUS BOARD_STATUS = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_board_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.TEMPERATURES TEMPERATURES = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_temperatures(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.VOLTAGES VOLTAGES = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_voltages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.BALANCING BALANCING = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_balancing(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FW_UPDATE FW_UPDATE = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fw_update(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_0_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_0_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_1_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_1_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_2_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_2_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_3_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_3_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_4_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_4_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_5_tx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_flash_cellboard_5_rx(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pack::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bms.Pack)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bms.BOARD_STATUS BOARD_STATUS = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_board_status_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_board_status(i), target, stream);
  }

  // repeated .bms.TEMPERATURES TEMPERATURES = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_temperatures_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_temperatures(i), target, stream);
  }

  // repeated .bms.VOLTAGES VOLTAGES = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_voltages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_voltages(i), target, stream);
  }

  // repeated .bms.BALANCING BALANCING = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_balancing_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_balancing(i), target, stream);
  }

  // repeated .bms.FW_UPDATE FW_UPDATE = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fw_update_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_fw_update(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_0_tx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_flash_cellboard_0_tx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_0_rx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_flash_cellboard_0_rx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_1_tx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_flash_cellboard_1_tx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_1_rx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_flash_cellboard_1_rx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_2_tx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_flash_cellboard_2_tx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_2_rx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_flash_cellboard_2_rx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_3_tx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_flash_cellboard_3_tx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_3_rx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_flash_cellboard_3_rx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_4_tx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, this->_internal_flash_cellboard_4_tx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_4_rx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, this->_internal_flash_cellboard_4_rx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_5_tx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, this->_internal_flash_cellboard_5_tx(i), target, stream);
  }

  // repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flash_cellboard_5_rx_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, this->_internal_flash_cellboard_5_rx(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bms.Pack)
  return target;
}

size_t Pack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bms.Pack)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bms.BOARD_STATUS BOARD_STATUS = 1;
  total_size += 1UL * this->_internal_board_status_size();
  for (const auto& msg : this->board_status_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.TEMPERATURES TEMPERATURES = 2;
  total_size += 1UL * this->_internal_temperatures_size();
  for (const auto& msg : this->temperatures_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.VOLTAGES VOLTAGES = 3;
  total_size += 1UL * this->_internal_voltages_size();
  for (const auto& msg : this->voltages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.BALANCING BALANCING = 4;
  total_size += 1UL * this->_internal_balancing_size();
  for (const auto& msg : this->balancing_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FW_UPDATE FW_UPDATE = 5;
  total_size += 1UL * this->_internal_fw_update_size();
  for (const auto& msg : this->fw_update_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 6;
  total_size += 1UL * this->_internal_flash_cellboard_0_tx_size();
  for (const auto& msg : this->flash_cellboard_0_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 7;
  total_size += 1UL * this->_internal_flash_cellboard_0_rx_size();
  for (const auto& msg : this->flash_cellboard_0_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 8;
  total_size += 1UL * this->_internal_flash_cellboard_1_tx_size();
  for (const auto& msg : this->flash_cellboard_1_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 9;
  total_size += 1UL * this->_internal_flash_cellboard_1_rx_size();
  for (const auto& msg : this->flash_cellboard_1_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 10;
  total_size += 1UL * this->_internal_flash_cellboard_2_tx_size();
  for (const auto& msg : this->flash_cellboard_2_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 11;
  total_size += 1UL * this->_internal_flash_cellboard_2_rx_size();
  for (const auto& msg : this->flash_cellboard_2_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 12;
  total_size += 1UL * this->_internal_flash_cellboard_3_tx_size();
  for (const auto& msg : this->flash_cellboard_3_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 13;
  total_size += 1UL * this->_internal_flash_cellboard_3_rx_size();
  for (const auto& msg : this->flash_cellboard_3_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 14;
  total_size += 1UL * this->_internal_flash_cellboard_4_tx_size();
  for (const auto& msg : this->flash_cellboard_4_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 15;
  total_size += 1UL * this->_internal_flash_cellboard_4_rx_size();
  for (const auto& msg : this->flash_cellboard_4_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 16;
  total_size += 2UL * this->_internal_flash_cellboard_5_tx_size();
  for (const auto& msg : this->flash_cellboard_5_tx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 17;
  total_size += 2UL * this->_internal_flash_cellboard_5_rx_size();
  for (const auto& msg : this->flash_cellboard_5_rx_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pack::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bms.Pack)
  GOOGLE_DCHECK_NE(&from, this);
  const Pack* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pack>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bms.Pack)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bms.Pack)
    MergeFrom(*source);
  }
}

void Pack::MergeFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bms.Pack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  board_status_.MergeFrom(from.board_status_);
  temperatures_.MergeFrom(from.temperatures_);
  voltages_.MergeFrom(from.voltages_);
  balancing_.MergeFrom(from.balancing_);
  fw_update_.MergeFrom(from.fw_update_);
  flash_cellboard_0_tx_.MergeFrom(from.flash_cellboard_0_tx_);
  flash_cellboard_0_rx_.MergeFrom(from.flash_cellboard_0_rx_);
  flash_cellboard_1_tx_.MergeFrom(from.flash_cellboard_1_tx_);
  flash_cellboard_1_rx_.MergeFrom(from.flash_cellboard_1_rx_);
  flash_cellboard_2_tx_.MergeFrom(from.flash_cellboard_2_tx_);
  flash_cellboard_2_rx_.MergeFrom(from.flash_cellboard_2_rx_);
  flash_cellboard_3_tx_.MergeFrom(from.flash_cellboard_3_tx_);
  flash_cellboard_3_rx_.MergeFrom(from.flash_cellboard_3_rx_);
  flash_cellboard_4_tx_.MergeFrom(from.flash_cellboard_4_tx_);
  flash_cellboard_4_rx_.MergeFrom(from.flash_cellboard_4_rx_);
  flash_cellboard_5_tx_.MergeFrom(from.flash_cellboard_5_tx_);
  flash_cellboard_5_rx_.MergeFrom(from.flash_cellboard_5_rx_);
}

void Pack::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bms.Pack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pack::CopyFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bms.Pack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pack::IsInitialized() const {
  return true;
}

void Pack::InternalSwap(Pack* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  board_status_.InternalSwap(&other->board_status_);
  temperatures_.InternalSwap(&other->temperatures_);
  voltages_.InternalSwap(&other->voltages_);
  balancing_.InternalSwap(&other->balancing_);
  fw_update_.InternalSwap(&other->fw_update_);
  flash_cellboard_0_tx_.InternalSwap(&other->flash_cellboard_0_tx_);
  flash_cellboard_0_rx_.InternalSwap(&other->flash_cellboard_0_rx_);
  flash_cellboard_1_tx_.InternalSwap(&other->flash_cellboard_1_tx_);
  flash_cellboard_1_rx_.InternalSwap(&other->flash_cellboard_1_rx_);
  flash_cellboard_2_tx_.InternalSwap(&other->flash_cellboard_2_tx_);
  flash_cellboard_2_rx_.InternalSwap(&other->flash_cellboard_2_rx_);
  flash_cellboard_3_tx_.InternalSwap(&other->flash_cellboard_3_tx_);
  flash_cellboard_3_rx_.InternalSwap(&other->flash_cellboard_3_rx_);
  flash_cellboard_4_tx_.InternalSwap(&other->flash_cellboard_4_tx_);
  flash_cellboard_4_rx_.InternalSwap(&other->flash_cellboard_4_rx_);
  flash_cellboard_5_tx_.InternalSwap(&other->flash_cellboard_5_tx_);
  flash_cellboard_5_rx_.InternalSwap(&other->flash_cellboard_5_rx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pack::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bms
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bms::BOARD_STATUS* Arena::CreateMaybeMessage< ::bms::BOARD_STATUS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BOARD_STATUS >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::TEMPERATURES* Arena::CreateMaybeMessage< ::bms::TEMPERATURES >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::TEMPERATURES >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::VOLTAGES* Arena::CreateMaybeMessage< ::bms::VOLTAGES >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::VOLTAGES >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::BALANCING* Arena::CreateMaybeMessage< ::bms::BALANCING >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::BALANCING >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FW_UPDATE* Arena::CreateMaybeMessage< ::bms::FW_UPDATE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FW_UPDATE >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_0_TX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_0_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_0_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_0_RX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_0_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_0_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_1_TX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_1_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_1_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_1_RX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_1_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_1_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_2_TX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_2_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_2_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_2_RX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_2_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_2_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_3_TX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_3_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_3_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_3_RX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_3_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_3_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_4_TX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_4_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_4_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_4_RX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_4_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_4_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_5_TX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_5_TX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_5_TX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::FLASH_CELLBOARD_5_RX* Arena::CreateMaybeMessage< ::bms::FLASH_CELLBOARD_5_RX >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::FLASH_CELLBOARD_5_RX >(arena);
}
template<> PROTOBUF_NOINLINE ::bms::Pack* Arena::CreateMaybeMessage< ::bms::Pack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bms::Pack >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
