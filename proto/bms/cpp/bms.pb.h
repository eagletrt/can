// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bms.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bms_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bms_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bms_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bms_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[18]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bms_2eproto;
namespace bms {
class BALANCING;
class BALANCINGDefaultTypeInternal;
extern BALANCINGDefaultTypeInternal _BALANCING_default_instance_;
class BOARD_STATUS;
class BOARD_STATUSDefaultTypeInternal;
extern BOARD_STATUSDefaultTypeInternal _BOARD_STATUS_default_instance_;
class FLASH_CELLBOARD_0_RX;
class FLASH_CELLBOARD_0_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_0_RXDefaultTypeInternal _FLASH_CELLBOARD_0_RX_default_instance_;
class FLASH_CELLBOARD_0_TX;
class FLASH_CELLBOARD_0_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_0_TXDefaultTypeInternal _FLASH_CELLBOARD_0_TX_default_instance_;
class FLASH_CELLBOARD_1_RX;
class FLASH_CELLBOARD_1_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_1_RXDefaultTypeInternal _FLASH_CELLBOARD_1_RX_default_instance_;
class FLASH_CELLBOARD_1_TX;
class FLASH_CELLBOARD_1_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_1_TXDefaultTypeInternal _FLASH_CELLBOARD_1_TX_default_instance_;
class FLASH_CELLBOARD_2_RX;
class FLASH_CELLBOARD_2_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_2_RXDefaultTypeInternal _FLASH_CELLBOARD_2_RX_default_instance_;
class FLASH_CELLBOARD_2_TX;
class FLASH_CELLBOARD_2_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_2_TXDefaultTypeInternal _FLASH_CELLBOARD_2_TX_default_instance_;
class FLASH_CELLBOARD_3_RX;
class FLASH_CELLBOARD_3_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_3_RXDefaultTypeInternal _FLASH_CELLBOARD_3_RX_default_instance_;
class FLASH_CELLBOARD_3_TX;
class FLASH_CELLBOARD_3_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_3_TXDefaultTypeInternal _FLASH_CELLBOARD_3_TX_default_instance_;
class FLASH_CELLBOARD_4_RX;
class FLASH_CELLBOARD_4_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_4_RXDefaultTypeInternal _FLASH_CELLBOARD_4_RX_default_instance_;
class FLASH_CELLBOARD_4_TX;
class FLASH_CELLBOARD_4_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_4_TXDefaultTypeInternal _FLASH_CELLBOARD_4_TX_default_instance_;
class FLASH_CELLBOARD_5_RX;
class FLASH_CELLBOARD_5_RXDefaultTypeInternal;
extern FLASH_CELLBOARD_5_RXDefaultTypeInternal _FLASH_CELLBOARD_5_RX_default_instance_;
class FLASH_CELLBOARD_5_TX;
class FLASH_CELLBOARD_5_TXDefaultTypeInternal;
extern FLASH_CELLBOARD_5_TXDefaultTypeInternal _FLASH_CELLBOARD_5_TX_default_instance_;
class FW_UPDATE;
class FW_UPDATEDefaultTypeInternal;
extern FW_UPDATEDefaultTypeInternal _FW_UPDATE_default_instance_;
class Pack;
class PackDefaultTypeInternal;
extern PackDefaultTypeInternal _Pack_default_instance_;
class TEMPERATURES;
class TEMPERATURESDefaultTypeInternal;
extern TEMPERATURESDefaultTypeInternal _TEMPERATURES_default_instance_;
class VOLTAGES;
class VOLTAGESDefaultTypeInternal;
extern VOLTAGESDefaultTypeInternal _VOLTAGES_default_instance_;
}  // namespace bms
PROTOBUF_NAMESPACE_OPEN
template<> ::bms::BALANCING* Arena::CreateMaybeMessage<::bms::BALANCING>(Arena*);
template<> ::bms::BOARD_STATUS* Arena::CreateMaybeMessage<::bms::BOARD_STATUS>(Arena*);
template<> ::bms::FLASH_CELLBOARD_0_RX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_0_RX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_0_TX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_0_TX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_1_RX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_1_RX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_1_TX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_1_TX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_2_RX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_2_RX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_2_TX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_2_TX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_3_RX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_3_RX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_3_TX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_3_TX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_4_RX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_4_RX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_4_TX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_4_TX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_5_RX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_5_RX>(Arena*);
template<> ::bms::FLASH_CELLBOARD_5_TX* Arena::CreateMaybeMessage<::bms::FLASH_CELLBOARD_5_TX>(Arena*);
template<> ::bms::FW_UPDATE* Arena::CreateMaybeMessage<::bms::FW_UPDATE>(Arena*);
template<> ::bms::Pack* Arena::CreateMaybeMessage<::bms::Pack>(Arena*);
template<> ::bms::TEMPERATURES* Arena::CreateMaybeMessage<::bms::TEMPERATURES>(Arena*);
template<> ::bms::VOLTAGES* Arena::CreateMaybeMessage<::bms::VOLTAGES>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bms {

enum Cellboard : int {
  Cellboard_CELLBOARD_0 = 0,
  Cellboard_CELLBOARD_1 = 1,
  Cellboard_CELLBOARD_2 = 2,
  Cellboard_CELLBOARD_3 = 3,
  Cellboard_CELLBOARD_4 = 4,
  Cellboard_CELLBOARD_5 = 5,
  Cellboard_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Cellboard_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Cellboard_IsValid(int value);
constexpr Cellboard Cellboard_MIN = Cellboard_CELLBOARD_0;
constexpr Cellboard Cellboard_MAX = Cellboard_CELLBOARD_5;
constexpr int Cellboard_ARRAYSIZE = Cellboard_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Cellboard_descriptor();
template<typename T>
inline const std::string& Cellboard_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Cellboard>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Cellboard_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Cellboard_descriptor(), enum_t_value);
}
inline bool Cellboard_Parse(
    const std::string& name, Cellboard* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Cellboard>(
    Cellboard_descriptor(), name, value);
}
enum BalancingStatus : int {
  BalancingStatus_OFF = 0,
  BalancingStatus_DISCHARGE = 1,
  BalancingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  BalancingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool BalancingStatus_IsValid(int value);
constexpr BalancingStatus BalancingStatus_MIN = BalancingStatus_OFF;
constexpr BalancingStatus BalancingStatus_MAX = BalancingStatus_DISCHARGE;
constexpr int BalancingStatus_ARRAYSIZE = BalancingStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BalancingStatus_descriptor();
template<typename T>
inline const std::string& BalancingStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, BalancingStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function BalancingStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    BalancingStatus_descriptor(), enum_t_value);
}
inline bool BalancingStatus_Parse(
    const std::string& name, BalancingStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<BalancingStatus>(
    BalancingStatus_descriptor(), name, value);
}
// ===================================================================

class BOARD_STATUS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.BOARD_STATUS) */ {
 public:
  inline BOARD_STATUS() : BOARD_STATUS(nullptr) {};
  virtual ~BOARD_STATUS();

  BOARD_STATUS(const BOARD_STATUS& from);
  BOARD_STATUS(BOARD_STATUS&& from) noexcept
    : BOARD_STATUS() {
    *this = ::std::move(from);
  }

  inline BOARD_STATUS& operator=(const BOARD_STATUS& from) {
    CopyFrom(from);
    return *this;
  }
  inline BOARD_STATUS& operator=(BOARD_STATUS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BOARD_STATUS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BOARD_STATUS* internal_default_instance() {
    return reinterpret_cast<const BOARD_STATUS*>(
               &_BOARD_STATUS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BOARD_STATUS& a, BOARD_STATUS& b) {
    a.Swap(&b);
  }
  inline void Swap(BOARD_STATUS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BOARD_STATUS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BOARD_STATUS* New() const final {
    return CreateMaybeMessage<BOARD_STATUS>(nullptr);
  }

  BOARD_STATUS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BOARD_STATUS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BOARD_STATUS& from);
  void MergeFrom(const BOARD_STATUS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BOARD_STATUS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.BOARD_STATUS";
  }
  protected:
  explicit BOARD_STATUS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCellboardIdFieldNumber = 1,
    kErrorsFieldNumber = 2,
    kInnerTimestampFieldNumber = 4,
    kBalancingStatusFieldNumber = 3,
  };
  // .bms.Cellboard cellboard_id = 1;
  void clear_cellboard_id();
  ::bms::Cellboard cellboard_id() const;
  void set_cellboard_id(::bms::Cellboard value);
  private:
  ::bms::Cellboard _internal_cellboard_id() const;
  void _internal_set_cellboard_id(::bms::Cellboard value);
  public:

  // uint32 errors = 2;
  void clear_errors();
  ::PROTOBUF_NAMESPACE_ID::uint32 errors() const;
  void set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errors() const;
  void _internal_set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 4;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .bms.BalancingStatus balancing_status = 3;
  void clear_balancing_status();
  ::bms::BalancingStatus balancing_status() const;
  void set_balancing_status(::bms::BalancingStatus value);
  private:
  ::bms::BalancingStatus _internal_balancing_status() const;
  void _internal_set_balancing_status(::bms::BalancingStatus value);
  public:

  // @@protoc_insertion_point(class_scope:bms.BOARD_STATUS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int cellboard_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errors_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  int balancing_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class TEMPERATURES PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.TEMPERATURES) */ {
 public:
  inline TEMPERATURES() : TEMPERATURES(nullptr) {};
  virtual ~TEMPERATURES();

  TEMPERATURES(const TEMPERATURES& from);
  TEMPERATURES(TEMPERATURES&& from) noexcept
    : TEMPERATURES() {
    *this = ::std::move(from);
  }

  inline TEMPERATURES& operator=(const TEMPERATURES& from) {
    CopyFrom(from);
    return *this;
  }
  inline TEMPERATURES& operator=(TEMPERATURES&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TEMPERATURES& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TEMPERATURES* internal_default_instance() {
    return reinterpret_cast<const TEMPERATURES*>(
               &_TEMPERATURES_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TEMPERATURES& a, TEMPERATURES& b) {
    a.Swap(&b);
  }
  inline void Swap(TEMPERATURES* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TEMPERATURES* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TEMPERATURES* New() const final {
    return CreateMaybeMessage<TEMPERATURES>(nullptr);
  }

  TEMPERATURES* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TEMPERATURES>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TEMPERATURES& from);
  void MergeFrom(const TEMPERATURES& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TEMPERATURES* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.TEMPERATURES";
  }
  protected:
  explicit TEMPERATURES(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCellboardIdFieldNumber = 1,
    kStartIndexFieldNumber = 2,
    kTemp0FieldNumber = 3,
    kTemp1FieldNumber = 4,
    kTemp2FieldNumber = 5,
    kTemp3FieldNumber = 6,
    kInnerTimestampFieldNumber = 7,
  };
  // .bms.Cellboard cellboard_id = 1;
  void clear_cellboard_id();
  ::bms::Cellboard cellboard_id() const;
  void set_cellboard_id(::bms::Cellboard value);
  private:
  ::bms::Cellboard _internal_cellboard_id() const;
  void _internal_set_cellboard_id(::bms::Cellboard value);
  public:

  // uint32 start_index = 2;
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float temp0 = 3;
  void clear_temp0();
  float temp0() const;
  void set_temp0(float value);
  private:
  float _internal_temp0() const;
  void _internal_set_temp0(float value);
  public:

  // float temp1 = 4;
  void clear_temp1();
  float temp1() const;
  void set_temp1(float value);
  private:
  float _internal_temp1() const;
  void _internal_set_temp1(float value);
  public:

  // float temp2 = 5;
  void clear_temp2();
  float temp2() const;
  void set_temp2(float value);
  private:
  float _internal_temp2() const;
  void _internal_set_temp2(float value);
  public:

  // float temp3 = 6;
  void clear_temp3();
  float temp3() const;
  void set_temp3(float value);
  private:
  float _internal_temp3() const;
  void _internal_set_temp3(float value);
  public:

  // uint64 _inner_timestamp = 7;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.TEMPERATURES)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int cellboard_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index_;
  float temp0_;
  float temp1_;
  float temp2_;
  float temp3_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class VOLTAGES PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.VOLTAGES) */ {
 public:
  inline VOLTAGES() : VOLTAGES(nullptr) {};
  virtual ~VOLTAGES();

  VOLTAGES(const VOLTAGES& from);
  VOLTAGES(VOLTAGES&& from) noexcept
    : VOLTAGES() {
    *this = ::std::move(from);
  }

  inline VOLTAGES& operator=(const VOLTAGES& from) {
    CopyFrom(from);
    return *this;
  }
  inline VOLTAGES& operator=(VOLTAGES&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VOLTAGES& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VOLTAGES* internal_default_instance() {
    return reinterpret_cast<const VOLTAGES*>(
               &_VOLTAGES_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(VOLTAGES& a, VOLTAGES& b) {
    a.Swap(&b);
  }
  inline void Swap(VOLTAGES* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VOLTAGES* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VOLTAGES* New() const final {
    return CreateMaybeMessage<VOLTAGES>(nullptr);
  }

  VOLTAGES* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VOLTAGES>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VOLTAGES& from);
  void MergeFrom(const VOLTAGES& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VOLTAGES* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.VOLTAGES";
  }
  protected:
  explicit VOLTAGES(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCellboardIdFieldNumber = 1,
    kStartIndexFieldNumber = 2,
    kVoltage0FieldNumber = 3,
    kVoltage1FieldNumber = 4,
    kInnerTimestampFieldNumber = 6,
    kVoltage2FieldNumber = 5,
  };
  // .bms.Cellboard cellboard_id = 1;
  void clear_cellboard_id();
  ::bms::Cellboard cellboard_id() const;
  void set_cellboard_id(::bms::Cellboard value);
  private:
  ::bms::Cellboard _internal_cellboard_id() const;
  void _internal_set_cellboard_id(::bms::Cellboard value);
  public:

  // uint32 start_index = 2;
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float voltage0 = 3;
  void clear_voltage0();
  float voltage0() const;
  void set_voltage0(float value);
  private:
  float _internal_voltage0() const;
  void _internal_set_voltage0(float value);
  public:

  // float voltage1 = 4;
  void clear_voltage1();
  float voltage1() const;
  void set_voltage1(float value);
  private:
  float _internal_voltage1() const;
  void _internal_set_voltage1(float value);
  public:

  // uint64 _inner_timestamp = 6;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float voltage2 = 5;
  void clear_voltage2();
  float voltage2() const;
  void set_voltage2(float value);
  private:
  float _internal_voltage2() const;
  void _internal_set_voltage2(float value);
  public:

  // @@protoc_insertion_point(class_scope:bms.VOLTAGES)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int cellboard_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index_;
  float voltage0_;
  float voltage1_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  float voltage2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class BALANCING PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.BALANCING) */ {
 public:
  inline BALANCING() : BALANCING(nullptr) {};
  virtual ~BALANCING();

  BALANCING(const BALANCING& from);
  BALANCING(BALANCING&& from) noexcept
    : BALANCING() {
    *this = ::std::move(from);
  }

  inline BALANCING& operator=(const BALANCING& from) {
    CopyFrom(from);
    return *this;
  }
  inline BALANCING& operator=(BALANCING&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BALANCING& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BALANCING* internal_default_instance() {
    return reinterpret_cast<const BALANCING*>(
               &_BALANCING_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(BALANCING& a, BALANCING& b) {
    a.Swap(&b);
  }
  inline void Swap(BALANCING* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BALANCING* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BALANCING* New() const final {
    return CreateMaybeMessage<BALANCING>(nullptr);
  }

  BALANCING* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BALANCING>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BALANCING& from);
  void MergeFrom(const BALANCING& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BALANCING* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.BALANCING";
  }
  protected:
  explicit BALANCING(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCellboardIdFieldNumber = 1,
    kBoardIndexFieldNumber = 2,
    kInnerTimestampFieldNumber = 4,
    kCellsFieldNumber = 3,
  };
  // .bms.Cellboard cellboard_id = 1;
  void clear_cellboard_id();
  ::bms::Cellboard cellboard_id() const;
  void set_cellboard_id(::bms::Cellboard value);
  private:
  ::bms::Cellboard _internal_cellboard_id() const;
  void _internal_set_cellboard_id(::bms::Cellboard value);
  public:

  // uint32 board_index = 2;
  void clear_board_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 board_index() const;
  void set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_board_index() const;
  void _internal_set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 4;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 cells = 3;
  void clear_cells();
  ::PROTOBUF_NAMESPACE_ID::uint32 cells() const;
  void set_cells(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cells() const;
  void _internal_set_cells(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.BALANCING)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int cellboard_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 board_index_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cells_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FW_UPDATE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FW_UPDATE) */ {
 public:
  inline FW_UPDATE() : FW_UPDATE(nullptr) {};
  virtual ~FW_UPDATE();

  FW_UPDATE(const FW_UPDATE& from);
  FW_UPDATE(FW_UPDATE&& from) noexcept
    : FW_UPDATE() {
    *this = ::std::move(from);
  }

  inline FW_UPDATE& operator=(const FW_UPDATE& from) {
    CopyFrom(from);
    return *this;
  }
  inline FW_UPDATE& operator=(FW_UPDATE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FW_UPDATE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FW_UPDATE* internal_default_instance() {
    return reinterpret_cast<const FW_UPDATE*>(
               &_FW_UPDATE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(FW_UPDATE& a, FW_UPDATE& b) {
    a.Swap(&b);
  }
  inline void Swap(FW_UPDATE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FW_UPDATE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FW_UPDATE* New() const final {
    return CreateMaybeMessage<FW_UPDATE>(nullptr);
  }

  FW_UPDATE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FW_UPDATE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FW_UPDATE& from);
  void MergeFrom(const FW_UPDATE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FW_UPDATE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FW_UPDATE";
  }
  protected:
  explicit FW_UPDATE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCellboardIdFieldNumber = 1,
    kBoardIndexFieldNumber = 2,
    kInnerTimestampFieldNumber = 3,
  };
  // .bms.Cellboard cellboard_id = 1;
  void clear_cellboard_id();
  ::bms::Cellboard cellboard_id() const;
  void set_cellboard_id(::bms::Cellboard value);
  private:
  ::bms::Cellboard _internal_cellboard_id() const;
  void _internal_set_cellboard_id(::bms::Cellboard value);
  public:

  // uint32 board_index = 2;
  void clear_board_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 board_index() const;
  void set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_board_index() const;
  void _internal_set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 _inner_timestamp = 3;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FW_UPDATE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int cellboard_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 board_index_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_0_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_0_TX) */ {
 public:
  inline FLASH_CELLBOARD_0_TX() : FLASH_CELLBOARD_0_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_0_TX();

  FLASH_CELLBOARD_0_TX(const FLASH_CELLBOARD_0_TX& from);
  FLASH_CELLBOARD_0_TX(FLASH_CELLBOARD_0_TX&& from) noexcept
    : FLASH_CELLBOARD_0_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_0_TX& operator=(const FLASH_CELLBOARD_0_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_0_TX& operator=(FLASH_CELLBOARD_0_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_0_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_0_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_0_TX*>(
               &_FLASH_CELLBOARD_0_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(FLASH_CELLBOARD_0_TX& a, FLASH_CELLBOARD_0_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_0_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_0_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_0_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_TX>(nullptr);
  }

  FLASH_CELLBOARD_0_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_0_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_0_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_0_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_0_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_0_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_0_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_0_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_0_RX) */ {
 public:
  inline FLASH_CELLBOARD_0_RX() : FLASH_CELLBOARD_0_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_0_RX();

  FLASH_CELLBOARD_0_RX(const FLASH_CELLBOARD_0_RX& from);
  FLASH_CELLBOARD_0_RX(FLASH_CELLBOARD_0_RX&& from) noexcept
    : FLASH_CELLBOARD_0_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_0_RX& operator=(const FLASH_CELLBOARD_0_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_0_RX& operator=(FLASH_CELLBOARD_0_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_0_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_0_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_0_RX*>(
               &_FLASH_CELLBOARD_0_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(FLASH_CELLBOARD_0_RX& a, FLASH_CELLBOARD_0_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_0_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_0_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_0_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_RX>(nullptr);
  }

  FLASH_CELLBOARD_0_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_0_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_0_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_0_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_0_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_0_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_0_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_0_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_1_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_1_TX) */ {
 public:
  inline FLASH_CELLBOARD_1_TX() : FLASH_CELLBOARD_1_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_1_TX();

  FLASH_CELLBOARD_1_TX(const FLASH_CELLBOARD_1_TX& from);
  FLASH_CELLBOARD_1_TX(FLASH_CELLBOARD_1_TX&& from) noexcept
    : FLASH_CELLBOARD_1_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_1_TX& operator=(const FLASH_CELLBOARD_1_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_1_TX& operator=(FLASH_CELLBOARD_1_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_1_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_1_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_1_TX*>(
               &_FLASH_CELLBOARD_1_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(FLASH_CELLBOARD_1_TX& a, FLASH_CELLBOARD_1_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_1_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_1_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_1_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_TX>(nullptr);
  }

  FLASH_CELLBOARD_1_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_1_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_1_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_1_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_1_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_1_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_1_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_1_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_1_RX) */ {
 public:
  inline FLASH_CELLBOARD_1_RX() : FLASH_CELLBOARD_1_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_1_RX();

  FLASH_CELLBOARD_1_RX(const FLASH_CELLBOARD_1_RX& from);
  FLASH_CELLBOARD_1_RX(FLASH_CELLBOARD_1_RX&& from) noexcept
    : FLASH_CELLBOARD_1_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_1_RX& operator=(const FLASH_CELLBOARD_1_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_1_RX& operator=(FLASH_CELLBOARD_1_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_1_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_1_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_1_RX*>(
               &_FLASH_CELLBOARD_1_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(FLASH_CELLBOARD_1_RX& a, FLASH_CELLBOARD_1_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_1_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_1_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_1_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_RX>(nullptr);
  }

  FLASH_CELLBOARD_1_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_1_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_1_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_1_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_1_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_1_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_1_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_1_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_2_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_2_TX) */ {
 public:
  inline FLASH_CELLBOARD_2_TX() : FLASH_CELLBOARD_2_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_2_TX();

  FLASH_CELLBOARD_2_TX(const FLASH_CELLBOARD_2_TX& from);
  FLASH_CELLBOARD_2_TX(FLASH_CELLBOARD_2_TX&& from) noexcept
    : FLASH_CELLBOARD_2_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_2_TX& operator=(const FLASH_CELLBOARD_2_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_2_TX& operator=(FLASH_CELLBOARD_2_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_2_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_2_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_2_TX*>(
               &_FLASH_CELLBOARD_2_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(FLASH_CELLBOARD_2_TX& a, FLASH_CELLBOARD_2_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_2_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_2_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_2_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_TX>(nullptr);
  }

  FLASH_CELLBOARD_2_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_2_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_2_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_2_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_2_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_2_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_2_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_2_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_2_RX) */ {
 public:
  inline FLASH_CELLBOARD_2_RX() : FLASH_CELLBOARD_2_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_2_RX();

  FLASH_CELLBOARD_2_RX(const FLASH_CELLBOARD_2_RX& from);
  FLASH_CELLBOARD_2_RX(FLASH_CELLBOARD_2_RX&& from) noexcept
    : FLASH_CELLBOARD_2_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_2_RX& operator=(const FLASH_CELLBOARD_2_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_2_RX& operator=(FLASH_CELLBOARD_2_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_2_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_2_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_2_RX*>(
               &_FLASH_CELLBOARD_2_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(FLASH_CELLBOARD_2_RX& a, FLASH_CELLBOARD_2_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_2_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_2_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_2_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_RX>(nullptr);
  }

  FLASH_CELLBOARD_2_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_2_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_2_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_2_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_2_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_2_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_2_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_2_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_3_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_3_TX) */ {
 public:
  inline FLASH_CELLBOARD_3_TX() : FLASH_CELLBOARD_3_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_3_TX();

  FLASH_CELLBOARD_3_TX(const FLASH_CELLBOARD_3_TX& from);
  FLASH_CELLBOARD_3_TX(FLASH_CELLBOARD_3_TX&& from) noexcept
    : FLASH_CELLBOARD_3_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_3_TX& operator=(const FLASH_CELLBOARD_3_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_3_TX& operator=(FLASH_CELLBOARD_3_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_3_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_3_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_3_TX*>(
               &_FLASH_CELLBOARD_3_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(FLASH_CELLBOARD_3_TX& a, FLASH_CELLBOARD_3_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_3_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_3_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_3_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_TX>(nullptr);
  }

  FLASH_CELLBOARD_3_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_3_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_3_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_3_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_3_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_3_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_3_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_3_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_3_RX) */ {
 public:
  inline FLASH_CELLBOARD_3_RX() : FLASH_CELLBOARD_3_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_3_RX();

  FLASH_CELLBOARD_3_RX(const FLASH_CELLBOARD_3_RX& from);
  FLASH_CELLBOARD_3_RX(FLASH_CELLBOARD_3_RX&& from) noexcept
    : FLASH_CELLBOARD_3_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_3_RX& operator=(const FLASH_CELLBOARD_3_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_3_RX& operator=(FLASH_CELLBOARD_3_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_3_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_3_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_3_RX*>(
               &_FLASH_CELLBOARD_3_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(FLASH_CELLBOARD_3_RX& a, FLASH_CELLBOARD_3_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_3_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_3_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_3_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_RX>(nullptr);
  }

  FLASH_CELLBOARD_3_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_3_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_3_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_3_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_3_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_3_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_3_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_3_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_4_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_4_TX) */ {
 public:
  inline FLASH_CELLBOARD_4_TX() : FLASH_CELLBOARD_4_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_4_TX();

  FLASH_CELLBOARD_4_TX(const FLASH_CELLBOARD_4_TX& from);
  FLASH_CELLBOARD_4_TX(FLASH_CELLBOARD_4_TX&& from) noexcept
    : FLASH_CELLBOARD_4_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_4_TX& operator=(const FLASH_CELLBOARD_4_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_4_TX& operator=(FLASH_CELLBOARD_4_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_4_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_4_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_4_TX*>(
               &_FLASH_CELLBOARD_4_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(FLASH_CELLBOARD_4_TX& a, FLASH_CELLBOARD_4_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_4_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_4_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_4_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_TX>(nullptr);
  }

  FLASH_CELLBOARD_4_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_4_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_4_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_4_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_4_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_4_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_4_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_4_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_4_RX) */ {
 public:
  inline FLASH_CELLBOARD_4_RX() : FLASH_CELLBOARD_4_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_4_RX();

  FLASH_CELLBOARD_4_RX(const FLASH_CELLBOARD_4_RX& from);
  FLASH_CELLBOARD_4_RX(FLASH_CELLBOARD_4_RX&& from) noexcept
    : FLASH_CELLBOARD_4_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_4_RX& operator=(const FLASH_CELLBOARD_4_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_4_RX& operator=(FLASH_CELLBOARD_4_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_4_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_4_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_4_RX*>(
               &_FLASH_CELLBOARD_4_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(FLASH_CELLBOARD_4_RX& a, FLASH_CELLBOARD_4_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_4_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_4_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_4_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_RX>(nullptr);
  }

  FLASH_CELLBOARD_4_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_4_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_4_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_4_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_4_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_4_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_4_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_4_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_5_TX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_5_TX) */ {
 public:
  inline FLASH_CELLBOARD_5_TX() : FLASH_CELLBOARD_5_TX(nullptr) {};
  virtual ~FLASH_CELLBOARD_5_TX();

  FLASH_CELLBOARD_5_TX(const FLASH_CELLBOARD_5_TX& from);
  FLASH_CELLBOARD_5_TX(FLASH_CELLBOARD_5_TX&& from) noexcept
    : FLASH_CELLBOARD_5_TX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_5_TX& operator=(const FLASH_CELLBOARD_5_TX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_5_TX& operator=(FLASH_CELLBOARD_5_TX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_5_TX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_5_TX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_5_TX*>(
               &_FLASH_CELLBOARD_5_TX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(FLASH_CELLBOARD_5_TX& a, FLASH_CELLBOARD_5_TX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_5_TX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_5_TX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_5_TX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_TX>(nullptr);
  }

  FLASH_CELLBOARD_5_TX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_TX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_5_TX& from);
  void MergeFrom(const FLASH_CELLBOARD_5_TX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_5_TX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_5_TX";
  }
  protected:
  explicit FLASH_CELLBOARD_5_TX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_5_TX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class FLASH_CELLBOARD_5_RX PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.FLASH_CELLBOARD_5_RX) */ {
 public:
  inline FLASH_CELLBOARD_5_RX() : FLASH_CELLBOARD_5_RX(nullptr) {};
  virtual ~FLASH_CELLBOARD_5_RX();

  FLASH_CELLBOARD_5_RX(const FLASH_CELLBOARD_5_RX& from);
  FLASH_CELLBOARD_5_RX(FLASH_CELLBOARD_5_RX&& from) noexcept
    : FLASH_CELLBOARD_5_RX() {
    *this = ::std::move(from);
  }

  inline FLASH_CELLBOARD_5_RX& operator=(const FLASH_CELLBOARD_5_RX& from) {
    CopyFrom(from);
    return *this;
  }
  inline FLASH_CELLBOARD_5_RX& operator=(FLASH_CELLBOARD_5_RX&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FLASH_CELLBOARD_5_RX& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FLASH_CELLBOARD_5_RX* internal_default_instance() {
    return reinterpret_cast<const FLASH_CELLBOARD_5_RX*>(
               &_FLASH_CELLBOARD_5_RX_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(FLASH_CELLBOARD_5_RX& a, FLASH_CELLBOARD_5_RX& b) {
    a.Swap(&b);
  }
  inline void Swap(FLASH_CELLBOARD_5_RX* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FLASH_CELLBOARD_5_RX* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FLASH_CELLBOARD_5_RX* New() const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_RX>(nullptr);
  }

  FLASH_CELLBOARD_5_RX* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FLASH_CELLBOARD_5_RX>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FLASH_CELLBOARD_5_RX& from);
  void MergeFrom(const FLASH_CELLBOARD_5_RX& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FLASH_CELLBOARD_5_RX* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.FLASH_CELLBOARD_5_RX";
  }
  protected:
  explicit FLASH_CELLBOARD_5_RX(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInnerTimestampFieldNumber = 1,
  };
  // uint64 _inner_timestamp = 1;
  void clear__inner_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp() const;
  void set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__inner_timestamp() const;
  void _internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:bms.FLASH_CELLBOARD_5_RX)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _inner_timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// -------------------------------------------------------------------

class Pack PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bms.Pack) */ {
 public:
  inline Pack() : Pack(nullptr) {};
  virtual ~Pack();

  Pack(const Pack& from);
  Pack(Pack&& from) noexcept
    : Pack() {
    *this = ::std::move(from);
  }

  inline Pack& operator=(const Pack& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pack& operator=(Pack&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Pack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pack* internal_default_instance() {
    return reinterpret_cast<const Pack*>(
               &_Pack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Pack& a, Pack& b) {
    a.Swap(&b);
  }
  inline void Swap(Pack* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pack* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Pack* New() const final {
    return CreateMaybeMessage<Pack>(nullptr);
  }

  Pack* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Pack>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Pack& from);
  void MergeFrom(const Pack& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pack* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bms.Pack";
  }
  protected:
  explicit Pack(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bms_2eproto);
    return ::descriptor_table_bms_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBOARDSTATUSFieldNumber = 1,
    kTEMPERATURESFieldNumber = 2,
    kVOLTAGESFieldNumber = 3,
    kBALANCINGFieldNumber = 4,
    kFWUPDATEFieldNumber = 5,
    kFLASHCELLBOARD0TXFieldNumber = 6,
    kFLASHCELLBOARD0RXFieldNumber = 7,
    kFLASHCELLBOARD1TXFieldNumber = 8,
    kFLASHCELLBOARD1RXFieldNumber = 9,
    kFLASHCELLBOARD2TXFieldNumber = 10,
    kFLASHCELLBOARD2RXFieldNumber = 11,
    kFLASHCELLBOARD3TXFieldNumber = 12,
    kFLASHCELLBOARD3RXFieldNumber = 13,
    kFLASHCELLBOARD4TXFieldNumber = 14,
    kFLASHCELLBOARD4RXFieldNumber = 15,
    kFLASHCELLBOARD5TXFieldNumber = 16,
    kFLASHCELLBOARD5RXFieldNumber = 17,
  };
  // repeated .bms.BOARD_STATUS BOARD_STATUS = 1;
  int board_status_size() const;
  private:
  int _internal_board_status_size() const;
  public:
  void clear_board_status();
  ::bms::BOARD_STATUS* mutable_board_status(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BOARD_STATUS >*
      mutable_board_status();
  private:
  const ::bms::BOARD_STATUS& _internal_board_status(int index) const;
  ::bms::BOARD_STATUS* _internal_add_board_status();
  public:
  const ::bms::BOARD_STATUS& board_status(int index) const;
  ::bms::BOARD_STATUS* add_board_status();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BOARD_STATUS >&
      board_status() const;

  // repeated .bms.TEMPERATURES TEMPERATURES = 2;
  int temperatures_size() const;
  private:
  int _internal_temperatures_size() const;
  public:
  void clear_temperatures();
  ::bms::TEMPERATURES* mutable_temperatures(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::TEMPERATURES >*
      mutable_temperatures();
  private:
  const ::bms::TEMPERATURES& _internal_temperatures(int index) const;
  ::bms::TEMPERATURES* _internal_add_temperatures();
  public:
  const ::bms::TEMPERATURES& temperatures(int index) const;
  ::bms::TEMPERATURES* add_temperatures();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::TEMPERATURES >&
      temperatures() const;

  // repeated .bms.VOLTAGES VOLTAGES = 3;
  int voltages_size() const;
  private:
  int _internal_voltages_size() const;
  public:
  void clear_voltages();
  ::bms::VOLTAGES* mutable_voltages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::VOLTAGES >*
      mutable_voltages();
  private:
  const ::bms::VOLTAGES& _internal_voltages(int index) const;
  ::bms::VOLTAGES* _internal_add_voltages();
  public:
  const ::bms::VOLTAGES& voltages(int index) const;
  ::bms::VOLTAGES* add_voltages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::VOLTAGES >&
      voltages() const;

  // repeated .bms.BALANCING BALANCING = 4;
  int balancing_size() const;
  private:
  int _internal_balancing_size() const;
  public:
  void clear_balancing();
  ::bms::BALANCING* mutable_balancing(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BALANCING >*
      mutable_balancing();
  private:
  const ::bms::BALANCING& _internal_balancing(int index) const;
  ::bms::BALANCING* _internal_add_balancing();
  public:
  const ::bms::BALANCING& balancing(int index) const;
  ::bms::BALANCING* add_balancing();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BALANCING >&
      balancing() const;

  // repeated .bms.FW_UPDATE FW_UPDATE = 5;
  int fw_update_size() const;
  private:
  int _internal_fw_update_size() const;
  public:
  void clear_fw_update();
  ::bms::FW_UPDATE* mutable_fw_update(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FW_UPDATE >*
      mutable_fw_update();
  private:
  const ::bms::FW_UPDATE& _internal_fw_update(int index) const;
  ::bms::FW_UPDATE* _internal_add_fw_update();
  public:
  const ::bms::FW_UPDATE& fw_update(int index) const;
  ::bms::FW_UPDATE* add_fw_update();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FW_UPDATE >&
      fw_update() const;

  // repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 6;
  int flash_cellboard_0_tx_size() const;
  private:
  int _internal_flash_cellboard_0_tx_size() const;
  public:
  void clear_flash_cellboard_0_tx();
  ::bms::FLASH_CELLBOARD_0_TX* mutable_flash_cellboard_0_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_TX >*
      mutable_flash_cellboard_0_tx();
  private:
  const ::bms::FLASH_CELLBOARD_0_TX& _internal_flash_cellboard_0_tx(int index) const;
  ::bms::FLASH_CELLBOARD_0_TX* _internal_add_flash_cellboard_0_tx();
  public:
  const ::bms::FLASH_CELLBOARD_0_TX& flash_cellboard_0_tx(int index) const;
  ::bms::FLASH_CELLBOARD_0_TX* add_flash_cellboard_0_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_TX >&
      flash_cellboard_0_tx() const;

  // repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 7;
  int flash_cellboard_0_rx_size() const;
  private:
  int _internal_flash_cellboard_0_rx_size() const;
  public:
  void clear_flash_cellboard_0_rx();
  ::bms::FLASH_CELLBOARD_0_RX* mutable_flash_cellboard_0_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_RX >*
      mutable_flash_cellboard_0_rx();
  private:
  const ::bms::FLASH_CELLBOARD_0_RX& _internal_flash_cellboard_0_rx(int index) const;
  ::bms::FLASH_CELLBOARD_0_RX* _internal_add_flash_cellboard_0_rx();
  public:
  const ::bms::FLASH_CELLBOARD_0_RX& flash_cellboard_0_rx(int index) const;
  ::bms::FLASH_CELLBOARD_0_RX* add_flash_cellboard_0_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_RX >&
      flash_cellboard_0_rx() const;

  // repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 8;
  int flash_cellboard_1_tx_size() const;
  private:
  int _internal_flash_cellboard_1_tx_size() const;
  public:
  void clear_flash_cellboard_1_tx();
  ::bms::FLASH_CELLBOARD_1_TX* mutable_flash_cellboard_1_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_TX >*
      mutable_flash_cellboard_1_tx();
  private:
  const ::bms::FLASH_CELLBOARD_1_TX& _internal_flash_cellboard_1_tx(int index) const;
  ::bms::FLASH_CELLBOARD_1_TX* _internal_add_flash_cellboard_1_tx();
  public:
  const ::bms::FLASH_CELLBOARD_1_TX& flash_cellboard_1_tx(int index) const;
  ::bms::FLASH_CELLBOARD_1_TX* add_flash_cellboard_1_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_TX >&
      flash_cellboard_1_tx() const;

  // repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 9;
  int flash_cellboard_1_rx_size() const;
  private:
  int _internal_flash_cellboard_1_rx_size() const;
  public:
  void clear_flash_cellboard_1_rx();
  ::bms::FLASH_CELLBOARD_1_RX* mutable_flash_cellboard_1_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_RX >*
      mutable_flash_cellboard_1_rx();
  private:
  const ::bms::FLASH_CELLBOARD_1_RX& _internal_flash_cellboard_1_rx(int index) const;
  ::bms::FLASH_CELLBOARD_1_RX* _internal_add_flash_cellboard_1_rx();
  public:
  const ::bms::FLASH_CELLBOARD_1_RX& flash_cellboard_1_rx(int index) const;
  ::bms::FLASH_CELLBOARD_1_RX* add_flash_cellboard_1_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_RX >&
      flash_cellboard_1_rx() const;

  // repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 10;
  int flash_cellboard_2_tx_size() const;
  private:
  int _internal_flash_cellboard_2_tx_size() const;
  public:
  void clear_flash_cellboard_2_tx();
  ::bms::FLASH_CELLBOARD_2_TX* mutable_flash_cellboard_2_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_TX >*
      mutable_flash_cellboard_2_tx();
  private:
  const ::bms::FLASH_CELLBOARD_2_TX& _internal_flash_cellboard_2_tx(int index) const;
  ::bms::FLASH_CELLBOARD_2_TX* _internal_add_flash_cellboard_2_tx();
  public:
  const ::bms::FLASH_CELLBOARD_2_TX& flash_cellboard_2_tx(int index) const;
  ::bms::FLASH_CELLBOARD_2_TX* add_flash_cellboard_2_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_TX >&
      flash_cellboard_2_tx() const;

  // repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 11;
  int flash_cellboard_2_rx_size() const;
  private:
  int _internal_flash_cellboard_2_rx_size() const;
  public:
  void clear_flash_cellboard_2_rx();
  ::bms::FLASH_CELLBOARD_2_RX* mutable_flash_cellboard_2_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_RX >*
      mutable_flash_cellboard_2_rx();
  private:
  const ::bms::FLASH_CELLBOARD_2_RX& _internal_flash_cellboard_2_rx(int index) const;
  ::bms::FLASH_CELLBOARD_2_RX* _internal_add_flash_cellboard_2_rx();
  public:
  const ::bms::FLASH_CELLBOARD_2_RX& flash_cellboard_2_rx(int index) const;
  ::bms::FLASH_CELLBOARD_2_RX* add_flash_cellboard_2_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_RX >&
      flash_cellboard_2_rx() const;

  // repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 12;
  int flash_cellboard_3_tx_size() const;
  private:
  int _internal_flash_cellboard_3_tx_size() const;
  public:
  void clear_flash_cellboard_3_tx();
  ::bms::FLASH_CELLBOARD_3_TX* mutable_flash_cellboard_3_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_TX >*
      mutable_flash_cellboard_3_tx();
  private:
  const ::bms::FLASH_CELLBOARD_3_TX& _internal_flash_cellboard_3_tx(int index) const;
  ::bms::FLASH_CELLBOARD_3_TX* _internal_add_flash_cellboard_3_tx();
  public:
  const ::bms::FLASH_CELLBOARD_3_TX& flash_cellboard_3_tx(int index) const;
  ::bms::FLASH_CELLBOARD_3_TX* add_flash_cellboard_3_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_TX >&
      flash_cellboard_3_tx() const;

  // repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 13;
  int flash_cellboard_3_rx_size() const;
  private:
  int _internal_flash_cellboard_3_rx_size() const;
  public:
  void clear_flash_cellboard_3_rx();
  ::bms::FLASH_CELLBOARD_3_RX* mutable_flash_cellboard_3_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_RX >*
      mutable_flash_cellboard_3_rx();
  private:
  const ::bms::FLASH_CELLBOARD_3_RX& _internal_flash_cellboard_3_rx(int index) const;
  ::bms::FLASH_CELLBOARD_3_RX* _internal_add_flash_cellboard_3_rx();
  public:
  const ::bms::FLASH_CELLBOARD_3_RX& flash_cellboard_3_rx(int index) const;
  ::bms::FLASH_CELLBOARD_3_RX* add_flash_cellboard_3_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_RX >&
      flash_cellboard_3_rx() const;

  // repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 14;
  int flash_cellboard_4_tx_size() const;
  private:
  int _internal_flash_cellboard_4_tx_size() const;
  public:
  void clear_flash_cellboard_4_tx();
  ::bms::FLASH_CELLBOARD_4_TX* mutable_flash_cellboard_4_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_TX >*
      mutable_flash_cellboard_4_tx();
  private:
  const ::bms::FLASH_CELLBOARD_4_TX& _internal_flash_cellboard_4_tx(int index) const;
  ::bms::FLASH_CELLBOARD_4_TX* _internal_add_flash_cellboard_4_tx();
  public:
  const ::bms::FLASH_CELLBOARD_4_TX& flash_cellboard_4_tx(int index) const;
  ::bms::FLASH_CELLBOARD_4_TX* add_flash_cellboard_4_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_TX >&
      flash_cellboard_4_tx() const;

  // repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 15;
  int flash_cellboard_4_rx_size() const;
  private:
  int _internal_flash_cellboard_4_rx_size() const;
  public:
  void clear_flash_cellboard_4_rx();
  ::bms::FLASH_CELLBOARD_4_RX* mutable_flash_cellboard_4_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_RX >*
      mutable_flash_cellboard_4_rx();
  private:
  const ::bms::FLASH_CELLBOARD_4_RX& _internal_flash_cellboard_4_rx(int index) const;
  ::bms::FLASH_CELLBOARD_4_RX* _internal_add_flash_cellboard_4_rx();
  public:
  const ::bms::FLASH_CELLBOARD_4_RX& flash_cellboard_4_rx(int index) const;
  ::bms::FLASH_CELLBOARD_4_RX* add_flash_cellboard_4_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_RX >&
      flash_cellboard_4_rx() const;

  // repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 16;
  int flash_cellboard_5_tx_size() const;
  private:
  int _internal_flash_cellboard_5_tx_size() const;
  public:
  void clear_flash_cellboard_5_tx();
  ::bms::FLASH_CELLBOARD_5_TX* mutable_flash_cellboard_5_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_TX >*
      mutable_flash_cellboard_5_tx();
  private:
  const ::bms::FLASH_CELLBOARD_5_TX& _internal_flash_cellboard_5_tx(int index) const;
  ::bms::FLASH_CELLBOARD_5_TX* _internal_add_flash_cellboard_5_tx();
  public:
  const ::bms::FLASH_CELLBOARD_5_TX& flash_cellboard_5_tx(int index) const;
  ::bms::FLASH_CELLBOARD_5_TX* add_flash_cellboard_5_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_TX >&
      flash_cellboard_5_tx() const;

  // repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 17;
  int flash_cellboard_5_rx_size() const;
  private:
  int _internal_flash_cellboard_5_rx_size() const;
  public:
  void clear_flash_cellboard_5_rx();
  ::bms::FLASH_CELLBOARD_5_RX* mutable_flash_cellboard_5_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_RX >*
      mutable_flash_cellboard_5_rx();
  private:
  const ::bms::FLASH_CELLBOARD_5_RX& _internal_flash_cellboard_5_rx(int index) const;
  ::bms::FLASH_CELLBOARD_5_RX* _internal_add_flash_cellboard_5_rx();
  public:
  const ::bms::FLASH_CELLBOARD_5_RX& flash_cellboard_5_rx(int index) const;
  ::bms::FLASH_CELLBOARD_5_RX* add_flash_cellboard_5_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_RX >&
      flash_cellboard_5_rx() const;

  // @@protoc_insertion_point(class_scope:bms.Pack)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BOARD_STATUS > board_status_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::TEMPERATURES > temperatures_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::VOLTAGES > voltages_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BALANCING > balancing_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FW_UPDATE > fw_update_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_TX > flash_cellboard_0_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_RX > flash_cellboard_0_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_TX > flash_cellboard_1_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_RX > flash_cellboard_1_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_TX > flash_cellboard_2_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_RX > flash_cellboard_2_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_TX > flash_cellboard_3_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_RX > flash_cellboard_3_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_TX > flash_cellboard_4_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_RX > flash_cellboard_4_rx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_TX > flash_cellboard_5_tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_RX > flash_cellboard_5_rx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bms_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BOARD_STATUS

// .bms.Cellboard cellboard_id = 1;
inline void BOARD_STATUS::clear_cellboard_id() {
  cellboard_id_ = 0;
}
inline ::bms::Cellboard BOARD_STATUS::_internal_cellboard_id() const {
  return static_cast< ::bms::Cellboard >(cellboard_id_);
}
inline ::bms::Cellboard BOARD_STATUS::cellboard_id() const {
  // @@protoc_insertion_point(field_get:bms.BOARD_STATUS.cellboard_id)
  return _internal_cellboard_id();
}
inline void BOARD_STATUS::_internal_set_cellboard_id(::bms::Cellboard value) {
  
  cellboard_id_ = value;
}
inline void BOARD_STATUS::set_cellboard_id(::bms::Cellboard value) {
  _internal_set_cellboard_id(value);
  // @@protoc_insertion_point(field_set:bms.BOARD_STATUS.cellboard_id)
}

// uint32 errors = 2;
inline void BOARD_STATUS::clear_errors() {
  errors_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BOARD_STATUS::_internal_errors() const {
  return errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BOARD_STATUS::errors() const {
  // @@protoc_insertion_point(field_get:bms.BOARD_STATUS.errors)
  return _internal_errors();
}
inline void BOARD_STATUS::_internal_set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  errors_ = value;
}
inline void BOARD_STATUS::set_errors(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errors(value);
  // @@protoc_insertion_point(field_set:bms.BOARD_STATUS.errors)
}

// .bms.BalancingStatus balancing_status = 3;
inline void BOARD_STATUS::clear_balancing_status() {
  balancing_status_ = 0;
}
inline ::bms::BalancingStatus BOARD_STATUS::_internal_balancing_status() const {
  return static_cast< ::bms::BalancingStatus >(balancing_status_);
}
inline ::bms::BalancingStatus BOARD_STATUS::balancing_status() const {
  // @@protoc_insertion_point(field_get:bms.BOARD_STATUS.balancing_status)
  return _internal_balancing_status();
}
inline void BOARD_STATUS::_internal_set_balancing_status(::bms::BalancingStatus value) {
  
  balancing_status_ = value;
}
inline void BOARD_STATUS::set_balancing_status(::bms::BalancingStatus value) {
  _internal_set_balancing_status(value);
  // @@protoc_insertion_point(field_set:bms.BOARD_STATUS.balancing_status)
}

// uint64 _inner_timestamp = 4;
inline void BOARD_STATUS::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BOARD_STATUS::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BOARD_STATUS::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.BOARD_STATUS._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BOARD_STATUS::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BOARD_STATUS::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.BOARD_STATUS._inner_timestamp)
}

// -------------------------------------------------------------------

// TEMPERATURES

// .bms.Cellboard cellboard_id = 1;
inline void TEMPERATURES::clear_cellboard_id() {
  cellboard_id_ = 0;
}
inline ::bms::Cellboard TEMPERATURES::_internal_cellboard_id() const {
  return static_cast< ::bms::Cellboard >(cellboard_id_);
}
inline ::bms::Cellboard TEMPERATURES::cellboard_id() const {
  // @@protoc_insertion_point(field_get:bms.TEMPERATURES.cellboard_id)
  return _internal_cellboard_id();
}
inline void TEMPERATURES::_internal_set_cellboard_id(::bms::Cellboard value) {
  
  cellboard_id_ = value;
}
inline void TEMPERATURES::set_cellboard_id(::bms::Cellboard value) {
  _internal_set_cellboard_id(value);
  // @@protoc_insertion_point(field_set:bms.TEMPERATURES.cellboard_id)
}

// uint32 start_index = 2;
inline void TEMPERATURES::clear_start_index() {
  start_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TEMPERATURES::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TEMPERATURES::start_index() const {
  // @@protoc_insertion_point(field_get:bms.TEMPERATURES.start_index)
  return _internal_start_index();
}
inline void TEMPERATURES::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_index_ = value;
}
inline void TEMPERATURES::set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:bms.TEMPERATURES.start_index)
}

// float temp0 = 3;
inline void TEMPERATURES::clear_temp0() {
  temp0_ = 0;
}
inline float TEMPERATURES::_internal_temp0() const {
  return temp0_;
}
inline float TEMPERATURES::temp0() const {
  // @@protoc_insertion_point(field_get:bms.TEMPERATURES.temp0)
  return _internal_temp0();
}
inline void TEMPERATURES::_internal_set_temp0(float value) {
  
  temp0_ = value;
}
inline void TEMPERATURES::set_temp0(float value) {
  _internal_set_temp0(value);
  // @@protoc_insertion_point(field_set:bms.TEMPERATURES.temp0)
}

// float temp1 = 4;
inline void TEMPERATURES::clear_temp1() {
  temp1_ = 0;
}
inline float TEMPERATURES::_internal_temp1() const {
  return temp1_;
}
inline float TEMPERATURES::temp1() const {
  // @@protoc_insertion_point(field_get:bms.TEMPERATURES.temp1)
  return _internal_temp1();
}
inline void TEMPERATURES::_internal_set_temp1(float value) {
  
  temp1_ = value;
}
inline void TEMPERATURES::set_temp1(float value) {
  _internal_set_temp1(value);
  // @@protoc_insertion_point(field_set:bms.TEMPERATURES.temp1)
}

// float temp2 = 5;
inline void TEMPERATURES::clear_temp2() {
  temp2_ = 0;
}
inline float TEMPERATURES::_internal_temp2() const {
  return temp2_;
}
inline float TEMPERATURES::temp2() const {
  // @@protoc_insertion_point(field_get:bms.TEMPERATURES.temp2)
  return _internal_temp2();
}
inline void TEMPERATURES::_internal_set_temp2(float value) {
  
  temp2_ = value;
}
inline void TEMPERATURES::set_temp2(float value) {
  _internal_set_temp2(value);
  // @@protoc_insertion_point(field_set:bms.TEMPERATURES.temp2)
}

// float temp3 = 6;
inline void TEMPERATURES::clear_temp3() {
  temp3_ = 0;
}
inline float TEMPERATURES::_internal_temp3() const {
  return temp3_;
}
inline float TEMPERATURES::temp3() const {
  // @@protoc_insertion_point(field_get:bms.TEMPERATURES.temp3)
  return _internal_temp3();
}
inline void TEMPERATURES::_internal_set_temp3(float value) {
  
  temp3_ = value;
}
inline void TEMPERATURES::set_temp3(float value) {
  _internal_set_temp3(value);
  // @@protoc_insertion_point(field_set:bms.TEMPERATURES.temp3)
}

// uint64 _inner_timestamp = 7;
inline void TEMPERATURES::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TEMPERATURES::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TEMPERATURES::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.TEMPERATURES._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void TEMPERATURES::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void TEMPERATURES::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.TEMPERATURES._inner_timestamp)
}

// -------------------------------------------------------------------

// VOLTAGES

// .bms.Cellboard cellboard_id = 1;
inline void VOLTAGES::clear_cellboard_id() {
  cellboard_id_ = 0;
}
inline ::bms::Cellboard VOLTAGES::_internal_cellboard_id() const {
  return static_cast< ::bms::Cellboard >(cellboard_id_);
}
inline ::bms::Cellboard VOLTAGES::cellboard_id() const {
  // @@protoc_insertion_point(field_get:bms.VOLTAGES.cellboard_id)
  return _internal_cellboard_id();
}
inline void VOLTAGES::_internal_set_cellboard_id(::bms::Cellboard value) {
  
  cellboard_id_ = value;
}
inline void VOLTAGES::set_cellboard_id(::bms::Cellboard value) {
  _internal_set_cellboard_id(value);
  // @@protoc_insertion_point(field_set:bms.VOLTAGES.cellboard_id)
}

// uint32 start_index = 2;
inline void VOLTAGES::clear_start_index() {
  start_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VOLTAGES::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VOLTAGES::start_index() const {
  // @@protoc_insertion_point(field_get:bms.VOLTAGES.start_index)
  return _internal_start_index();
}
inline void VOLTAGES::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_index_ = value;
}
inline void VOLTAGES::set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:bms.VOLTAGES.start_index)
}

// float voltage0 = 3;
inline void VOLTAGES::clear_voltage0() {
  voltage0_ = 0;
}
inline float VOLTAGES::_internal_voltage0() const {
  return voltage0_;
}
inline float VOLTAGES::voltage0() const {
  // @@protoc_insertion_point(field_get:bms.VOLTAGES.voltage0)
  return _internal_voltage0();
}
inline void VOLTAGES::_internal_set_voltage0(float value) {
  
  voltage0_ = value;
}
inline void VOLTAGES::set_voltage0(float value) {
  _internal_set_voltage0(value);
  // @@protoc_insertion_point(field_set:bms.VOLTAGES.voltage0)
}

// float voltage1 = 4;
inline void VOLTAGES::clear_voltage1() {
  voltage1_ = 0;
}
inline float VOLTAGES::_internal_voltage1() const {
  return voltage1_;
}
inline float VOLTAGES::voltage1() const {
  // @@protoc_insertion_point(field_get:bms.VOLTAGES.voltage1)
  return _internal_voltage1();
}
inline void VOLTAGES::_internal_set_voltage1(float value) {
  
  voltage1_ = value;
}
inline void VOLTAGES::set_voltage1(float value) {
  _internal_set_voltage1(value);
  // @@protoc_insertion_point(field_set:bms.VOLTAGES.voltage1)
}

// float voltage2 = 5;
inline void VOLTAGES::clear_voltage2() {
  voltage2_ = 0;
}
inline float VOLTAGES::_internal_voltage2() const {
  return voltage2_;
}
inline float VOLTAGES::voltage2() const {
  // @@protoc_insertion_point(field_get:bms.VOLTAGES.voltage2)
  return _internal_voltage2();
}
inline void VOLTAGES::_internal_set_voltage2(float value) {
  
  voltage2_ = value;
}
inline void VOLTAGES::set_voltage2(float value) {
  _internal_set_voltage2(value);
  // @@protoc_insertion_point(field_set:bms.VOLTAGES.voltage2)
}

// uint64 _inner_timestamp = 6;
inline void VOLTAGES::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VOLTAGES::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VOLTAGES::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.VOLTAGES._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void VOLTAGES::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void VOLTAGES::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.VOLTAGES._inner_timestamp)
}

// -------------------------------------------------------------------

// BALANCING

// .bms.Cellboard cellboard_id = 1;
inline void BALANCING::clear_cellboard_id() {
  cellboard_id_ = 0;
}
inline ::bms::Cellboard BALANCING::_internal_cellboard_id() const {
  return static_cast< ::bms::Cellboard >(cellboard_id_);
}
inline ::bms::Cellboard BALANCING::cellboard_id() const {
  // @@protoc_insertion_point(field_get:bms.BALANCING.cellboard_id)
  return _internal_cellboard_id();
}
inline void BALANCING::_internal_set_cellboard_id(::bms::Cellboard value) {
  
  cellboard_id_ = value;
}
inline void BALANCING::set_cellboard_id(::bms::Cellboard value) {
  _internal_set_cellboard_id(value);
  // @@protoc_insertion_point(field_set:bms.BALANCING.cellboard_id)
}

// uint32 board_index = 2;
inline void BALANCING::clear_board_index() {
  board_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BALANCING::_internal_board_index() const {
  return board_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BALANCING::board_index() const {
  // @@protoc_insertion_point(field_get:bms.BALANCING.board_index)
  return _internal_board_index();
}
inline void BALANCING::_internal_set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  board_index_ = value;
}
inline void BALANCING::set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_board_index(value);
  // @@protoc_insertion_point(field_set:bms.BALANCING.board_index)
}

// uint32 cells = 3;
inline void BALANCING::clear_cells() {
  cells_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BALANCING::_internal_cells() const {
  return cells_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BALANCING::cells() const {
  // @@protoc_insertion_point(field_get:bms.BALANCING.cells)
  return _internal_cells();
}
inline void BALANCING::_internal_set_cells(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cells_ = value;
}
inline void BALANCING::set_cells(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cells(value);
  // @@protoc_insertion_point(field_set:bms.BALANCING.cells)
}

// uint64 _inner_timestamp = 4;
inline void BALANCING::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BALANCING::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BALANCING::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.BALANCING._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void BALANCING::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void BALANCING::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.BALANCING._inner_timestamp)
}

// -------------------------------------------------------------------

// FW_UPDATE

// .bms.Cellboard cellboard_id = 1;
inline void FW_UPDATE::clear_cellboard_id() {
  cellboard_id_ = 0;
}
inline ::bms::Cellboard FW_UPDATE::_internal_cellboard_id() const {
  return static_cast< ::bms::Cellboard >(cellboard_id_);
}
inline ::bms::Cellboard FW_UPDATE::cellboard_id() const {
  // @@protoc_insertion_point(field_get:bms.FW_UPDATE.cellboard_id)
  return _internal_cellboard_id();
}
inline void FW_UPDATE::_internal_set_cellboard_id(::bms::Cellboard value) {
  
  cellboard_id_ = value;
}
inline void FW_UPDATE::set_cellboard_id(::bms::Cellboard value) {
  _internal_set_cellboard_id(value);
  // @@protoc_insertion_point(field_set:bms.FW_UPDATE.cellboard_id)
}

// uint32 board_index = 2;
inline void FW_UPDATE::clear_board_index() {
  board_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FW_UPDATE::_internal_board_index() const {
  return board_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FW_UPDATE::board_index() const {
  // @@protoc_insertion_point(field_get:bms.FW_UPDATE.board_index)
  return _internal_board_index();
}
inline void FW_UPDATE::_internal_set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  board_index_ = value;
}
inline void FW_UPDATE::set_board_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_board_index(value);
  // @@protoc_insertion_point(field_set:bms.FW_UPDATE.board_index)
}

// uint64 _inner_timestamp = 3;
inline void FW_UPDATE::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FW_UPDATE::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FW_UPDATE::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FW_UPDATE._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FW_UPDATE::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FW_UPDATE::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FW_UPDATE._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_0_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_0_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_0_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_0_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_0_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_0_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_0_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_0_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_0_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_0_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_0_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_0_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_0_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_1_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_1_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_1_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_1_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_1_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_1_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_1_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_1_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_1_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_1_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_1_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_1_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_1_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_2_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_2_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_2_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_2_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_2_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_2_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_2_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_2_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_2_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_2_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_2_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_2_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_2_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_3_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_3_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_3_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_3_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_3_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_3_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_3_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_3_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_3_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_3_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_3_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_3_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_3_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_4_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_4_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_4_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_4_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_4_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_4_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_4_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_4_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_4_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_4_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_4_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_4_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_4_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_5_TX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_5_TX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_TX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_TX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_5_TX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_5_TX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_5_TX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_5_TX._inner_timestamp)
}

// -------------------------------------------------------------------

// FLASH_CELLBOARD_5_RX

// uint64 _inner_timestamp = 1;
inline void FLASH_CELLBOARD_5_RX::clear__inner_timestamp() {
  _inner_timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_RX::_internal__inner_timestamp() const {
  return _inner_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FLASH_CELLBOARD_5_RX::_inner_timestamp() const {
  // @@protoc_insertion_point(field_get:bms.FLASH_CELLBOARD_5_RX._inner_timestamp)
  return _internal__inner_timestamp();
}
inline void FLASH_CELLBOARD_5_RX::_internal_set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _inner_timestamp_ = value;
}
inline void FLASH_CELLBOARD_5_RX::set__inner_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__inner_timestamp(value);
  // @@protoc_insertion_point(field_set:bms.FLASH_CELLBOARD_5_RX._inner_timestamp)
}

// -------------------------------------------------------------------

// Pack

// repeated .bms.BOARD_STATUS BOARD_STATUS = 1;
inline int Pack::_internal_board_status_size() const {
  return board_status_.size();
}
inline int Pack::board_status_size() const {
  return _internal_board_status_size();
}
inline void Pack::clear_board_status() {
  board_status_.Clear();
}
inline ::bms::BOARD_STATUS* Pack::mutable_board_status(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.BOARD_STATUS)
  return board_status_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BOARD_STATUS >*
Pack::mutable_board_status() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.BOARD_STATUS)
  return &board_status_;
}
inline const ::bms::BOARD_STATUS& Pack::_internal_board_status(int index) const {
  return board_status_.Get(index);
}
inline const ::bms::BOARD_STATUS& Pack::board_status(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.BOARD_STATUS)
  return _internal_board_status(index);
}
inline ::bms::BOARD_STATUS* Pack::_internal_add_board_status() {
  return board_status_.Add();
}
inline ::bms::BOARD_STATUS* Pack::add_board_status() {
  // @@protoc_insertion_point(field_add:bms.Pack.BOARD_STATUS)
  return _internal_add_board_status();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BOARD_STATUS >&
Pack::board_status() const {
  // @@protoc_insertion_point(field_list:bms.Pack.BOARD_STATUS)
  return board_status_;
}

// repeated .bms.TEMPERATURES TEMPERATURES = 2;
inline int Pack::_internal_temperatures_size() const {
  return temperatures_.size();
}
inline int Pack::temperatures_size() const {
  return _internal_temperatures_size();
}
inline void Pack::clear_temperatures() {
  temperatures_.Clear();
}
inline ::bms::TEMPERATURES* Pack::mutable_temperatures(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.TEMPERATURES)
  return temperatures_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::TEMPERATURES >*
Pack::mutable_temperatures() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.TEMPERATURES)
  return &temperatures_;
}
inline const ::bms::TEMPERATURES& Pack::_internal_temperatures(int index) const {
  return temperatures_.Get(index);
}
inline const ::bms::TEMPERATURES& Pack::temperatures(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.TEMPERATURES)
  return _internal_temperatures(index);
}
inline ::bms::TEMPERATURES* Pack::_internal_add_temperatures() {
  return temperatures_.Add();
}
inline ::bms::TEMPERATURES* Pack::add_temperatures() {
  // @@protoc_insertion_point(field_add:bms.Pack.TEMPERATURES)
  return _internal_add_temperatures();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::TEMPERATURES >&
Pack::temperatures() const {
  // @@protoc_insertion_point(field_list:bms.Pack.TEMPERATURES)
  return temperatures_;
}

// repeated .bms.VOLTAGES VOLTAGES = 3;
inline int Pack::_internal_voltages_size() const {
  return voltages_.size();
}
inline int Pack::voltages_size() const {
  return _internal_voltages_size();
}
inline void Pack::clear_voltages() {
  voltages_.Clear();
}
inline ::bms::VOLTAGES* Pack::mutable_voltages(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.VOLTAGES)
  return voltages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::VOLTAGES >*
Pack::mutable_voltages() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.VOLTAGES)
  return &voltages_;
}
inline const ::bms::VOLTAGES& Pack::_internal_voltages(int index) const {
  return voltages_.Get(index);
}
inline const ::bms::VOLTAGES& Pack::voltages(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.VOLTAGES)
  return _internal_voltages(index);
}
inline ::bms::VOLTAGES* Pack::_internal_add_voltages() {
  return voltages_.Add();
}
inline ::bms::VOLTAGES* Pack::add_voltages() {
  // @@protoc_insertion_point(field_add:bms.Pack.VOLTAGES)
  return _internal_add_voltages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::VOLTAGES >&
Pack::voltages() const {
  // @@protoc_insertion_point(field_list:bms.Pack.VOLTAGES)
  return voltages_;
}

// repeated .bms.BALANCING BALANCING = 4;
inline int Pack::_internal_balancing_size() const {
  return balancing_.size();
}
inline int Pack::balancing_size() const {
  return _internal_balancing_size();
}
inline void Pack::clear_balancing() {
  balancing_.Clear();
}
inline ::bms::BALANCING* Pack::mutable_balancing(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.BALANCING)
  return balancing_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BALANCING >*
Pack::mutable_balancing() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.BALANCING)
  return &balancing_;
}
inline const ::bms::BALANCING& Pack::_internal_balancing(int index) const {
  return balancing_.Get(index);
}
inline const ::bms::BALANCING& Pack::balancing(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.BALANCING)
  return _internal_balancing(index);
}
inline ::bms::BALANCING* Pack::_internal_add_balancing() {
  return balancing_.Add();
}
inline ::bms::BALANCING* Pack::add_balancing() {
  // @@protoc_insertion_point(field_add:bms.Pack.BALANCING)
  return _internal_add_balancing();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::BALANCING >&
Pack::balancing() const {
  // @@protoc_insertion_point(field_list:bms.Pack.BALANCING)
  return balancing_;
}

// repeated .bms.FW_UPDATE FW_UPDATE = 5;
inline int Pack::_internal_fw_update_size() const {
  return fw_update_.size();
}
inline int Pack::fw_update_size() const {
  return _internal_fw_update_size();
}
inline void Pack::clear_fw_update() {
  fw_update_.Clear();
}
inline ::bms::FW_UPDATE* Pack::mutable_fw_update(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FW_UPDATE)
  return fw_update_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FW_UPDATE >*
Pack::mutable_fw_update() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FW_UPDATE)
  return &fw_update_;
}
inline const ::bms::FW_UPDATE& Pack::_internal_fw_update(int index) const {
  return fw_update_.Get(index);
}
inline const ::bms::FW_UPDATE& Pack::fw_update(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FW_UPDATE)
  return _internal_fw_update(index);
}
inline ::bms::FW_UPDATE* Pack::_internal_add_fw_update() {
  return fw_update_.Add();
}
inline ::bms::FW_UPDATE* Pack::add_fw_update() {
  // @@protoc_insertion_point(field_add:bms.Pack.FW_UPDATE)
  return _internal_add_fw_update();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FW_UPDATE >&
Pack::fw_update() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FW_UPDATE)
  return fw_update_;
}

// repeated .bms.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 6;
inline int Pack::_internal_flash_cellboard_0_tx_size() const {
  return flash_cellboard_0_tx_.size();
}
inline int Pack::flash_cellboard_0_tx_size() const {
  return _internal_flash_cellboard_0_tx_size();
}
inline void Pack::clear_flash_cellboard_0_tx() {
  flash_cellboard_0_tx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_0_TX* Pack::mutable_flash_cellboard_0_tx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_0_TX)
  return flash_cellboard_0_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_TX >*
Pack::mutable_flash_cellboard_0_tx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_0_TX)
  return &flash_cellboard_0_tx_;
}
inline const ::bms::FLASH_CELLBOARD_0_TX& Pack::_internal_flash_cellboard_0_tx(int index) const {
  return flash_cellboard_0_tx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_0_TX& Pack::flash_cellboard_0_tx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_0_TX)
  return _internal_flash_cellboard_0_tx(index);
}
inline ::bms::FLASH_CELLBOARD_0_TX* Pack::_internal_add_flash_cellboard_0_tx() {
  return flash_cellboard_0_tx_.Add();
}
inline ::bms::FLASH_CELLBOARD_0_TX* Pack::add_flash_cellboard_0_tx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_0_TX)
  return _internal_add_flash_cellboard_0_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_TX >&
Pack::flash_cellboard_0_tx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_0_TX)
  return flash_cellboard_0_tx_;
}

// repeated .bms.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 7;
inline int Pack::_internal_flash_cellboard_0_rx_size() const {
  return flash_cellboard_0_rx_.size();
}
inline int Pack::flash_cellboard_0_rx_size() const {
  return _internal_flash_cellboard_0_rx_size();
}
inline void Pack::clear_flash_cellboard_0_rx() {
  flash_cellboard_0_rx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_0_RX* Pack::mutable_flash_cellboard_0_rx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_0_RX)
  return flash_cellboard_0_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_RX >*
Pack::mutable_flash_cellboard_0_rx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_0_RX)
  return &flash_cellboard_0_rx_;
}
inline const ::bms::FLASH_CELLBOARD_0_RX& Pack::_internal_flash_cellboard_0_rx(int index) const {
  return flash_cellboard_0_rx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_0_RX& Pack::flash_cellboard_0_rx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_0_RX)
  return _internal_flash_cellboard_0_rx(index);
}
inline ::bms::FLASH_CELLBOARD_0_RX* Pack::_internal_add_flash_cellboard_0_rx() {
  return flash_cellboard_0_rx_.Add();
}
inline ::bms::FLASH_CELLBOARD_0_RX* Pack::add_flash_cellboard_0_rx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_0_RX)
  return _internal_add_flash_cellboard_0_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_0_RX >&
Pack::flash_cellboard_0_rx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_0_RX)
  return flash_cellboard_0_rx_;
}

// repeated .bms.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 8;
inline int Pack::_internal_flash_cellboard_1_tx_size() const {
  return flash_cellboard_1_tx_.size();
}
inline int Pack::flash_cellboard_1_tx_size() const {
  return _internal_flash_cellboard_1_tx_size();
}
inline void Pack::clear_flash_cellboard_1_tx() {
  flash_cellboard_1_tx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_1_TX* Pack::mutable_flash_cellboard_1_tx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_1_TX)
  return flash_cellboard_1_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_TX >*
Pack::mutable_flash_cellboard_1_tx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_1_TX)
  return &flash_cellboard_1_tx_;
}
inline const ::bms::FLASH_CELLBOARD_1_TX& Pack::_internal_flash_cellboard_1_tx(int index) const {
  return flash_cellboard_1_tx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_1_TX& Pack::flash_cellboard_1_tx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_1_TX)
  return _internal_flash_cellboard_1_tx(index);
}
inline ::bms::FLASH_CELLBOARD_1_TX* Pack::_internal_add_flash_cellboard_1_tx() {
  return flash_cellboard_1_tx_.Add();
}
inline ::bms::FLASH_CELLBOARD_1_TX* Pack::add_flash_cellboard_1_tx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_1_TX)
  return _internal_add_flash_cellboard_1_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_TX >&
Pack::flash_cellboard_1_tx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_1_TX)
  return flash_cellboard_1_tx_;
}

// repeated .bms.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 9;
inline int Pack::_internal_flash_cellboard_1_rx_size() const {
  return flash_cellboard_1_rx_.size();
}
inline int Pack::flash_cellboard_1_rx_size() const {
  return _internal_flash_cellboard_1_rx_size();
}
inline void Pack::clear_flash_cellboard_1_rx() {
  flash_cellboard_1_rx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_1_RX* Pack::mutable_flash_cellboard_1_rx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_1_RX)
  return flash_cellboard_1_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_RX >*
Pack::mutable_flash_cellboard_1_rx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_1_RX)
  return &flash_cellboard_1_rx_;
}
inline const ::bms::FLASH_CELLBOARD_1_RX& Pack::_internal_flash_cellboard_1_rx(int index) const {
  return flash_cellboard_1_rx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_1_RX& Pack::flash_cellboard_1_rx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_1_RX)
  return _internal_flash_cellboard_1_rx(index);
}
inline ::bms::FLASH_CELLBOARD_1_RX* Pack::_internal_add_flash_cellboard_1_rx() {
  return flash_cellboard_1_rx_.Add();
}
inline ::bms::FLASH_CELLBOARD_1_RX* Pack::add_flash_cellboard_1_rx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_1_RX)
  return _internal_add_flash_cellboard_1_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_1_RX >&
Pack::flash_cellboard_1_rx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_1_RX)
  return flash_cellboard_1_rx_;
}

// repeated .bms.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 10;
inline int Pack::_internal_flash_cellboard_2_tx_size() const {
  return flash_cellboard_2_tx_.size();
}
inline int Pack::flash_cellboard_2_tx_size() const {
  return _internal_flash_cellboard_2_tx_size();
}
inline void Pack::clear_flash_cellboard_2_tx() {
  flash_cellboard_2_tx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_2_TX* Pack::mutable_flash_cellboard_2_tx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_2_TX)
  return flash_cellboard_2_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_TX >*
Pack::mutable_flash_cellboard_2_tx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_2_TX)
  return &flash_cellboard_2_tx_;
}
inline const ::bms::FLASH_CELLBOARD_2_TX& Pack::_internal_flash_cellboard_2_tx(int index) const {
  return flash_cellboard_2_tx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_2_TX& Pack::flash_cellboard_2_tx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_2_TX)
  return _internal_flash_cellboard_2_tx(index);
}
inline ::bms::FLASH_CELLBOARD_2_TX* Pack::_internal_add_flash_cellboard_2_tx() {
  return flash_cellboard_2_tx_.Add();
}
inline ::bms::FLASH_CELLBOARD_2_TX* Pack::add_flash_cellboard_2_tx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_2_TX)
  return _internal_add_flash_cellboard_2_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_TX >&
Pack::flash_cellboard_2_tx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_2_TX)
  return flash_cellboard_2_tx_;
}

// repeated .bms.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 11;
inline int Pack::_internal_flash_cellboard_2_rx_size() const {
  return flash_cellboard_2_rx_.size();
}
inline int Pack::flash_cellboard_2_rx_size() const {
  return _internal_flash_cellboard_2_rx_size();
}
inline void Pack::clear_flash_cellboard_2_rx() {
  flash_cellboard_2_rx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_2_RX* Pack::mutable_flash_cellboard_2_rx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_2_RX)
  return flash_cellboard_2_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_RX >*
Pack::mutable_flash_cellboard_2_rx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_2_RX)
  return &flash_cellboard_2_rx_;
}
inline const ::bms::FLASH_CELLBOARD_2_RX& Pack::_internal_flash_cellboard_2_rx(int index) const {
  return flash_cellboard_2_rx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_2_RX& Pack::flash_cellboard_2_rx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_2_RX)
  return _internal_flash_cellboard_2_rx(index);
}
inline ::bms::FLASH_CELLBOARD_2_RX* Pack::_internal_add_flash_cellboard_2_rx() {
  return flash_cellboard_2_rx_.Add();
}
inline ::bms::FLASH_CELLBOARD_2_RX* Pack::add_flash_cellboard_2_rx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_2_RX)
  return _internal_add_flash_cellboard_2_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_2_RX >&
Pack::flash_cellboard_2_rx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_2_RX)
  return flash_cellboard_2_rx_;
}

// repeated .bms.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 12;
inline int Pack::_internal_flash_cellboard_3_tx_size() const {
  return flash_cellboard_3_tx_.size();
}
inline int Pack::flash_cellboard_3_tx_size() const {
  return _internal_flash_cellboard_3_tx_size();
}
inline void Pack::clear_flash_cellboard_3_tx() {
  flash_cellboard_3_tx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_3_TX* Pack::mutable_flash_cellboard_3_tx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_3_TX)
  return flash_cellboard_3_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_TX >*
Pack::mutable_flash_cellboard_3_tx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_3_TX)
  return &flash_cellboard_3_tx_;
}
inline const ::bms::FLASH_CELLBOARD_3_TX& Pack::_internal_flash_cellboard_3_tx(int index) const {
  return flash_cellboard_3_tx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_3_TX& Pack::flash_cellboard_3_tx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_3_TX)
  return _internal_flash_cellboard_3_tx(index);
}
inline ::bms::FLASH_CELLBOARD_3_TX* Pack::_internal_add_flash_cellboard_3_tx() {
  return flash_cellboard_3_tx_.Add();
}
inline ::bms::FLASH_CELLBOARD_3_TX* Pack::add_flash_cellboard_3_tx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_3_TX)
  return _internal_add_flash_cellboard_3_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_TX >&
Pack::flash_cellboard_3_tx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_3_TX)
  return flash_cellboard_3_tx_;
}

// repeated .bms.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 13;
inline int Pack::_internal_flash_cellboard_3_rx_size() const {
  return flash_cellboard_3_rx_.size();
}
inline int Pack::flash_cellboard_3_rx_size() const {
  return _internal_flash_cellboard_3_rx_size();
}
inline void Pack::clear_flash_cellboard_3_rx() {
  flash_cellboard_3_rx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_3_RX* Pack::mutable_flash_cellboard_3_rx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_3_RX)
  return flash_cellboard_3_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_RX >*
Pack::mutable_flash_cellboard_3_rx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_3_RX)
  return &flash_cellboard_3_rx_;
}
inline const ::bms::FLASH_CELLBOARD_3_RX& Pack::_internal_flash_cellboard_3_rx(int index) const {
  return flash_cellboard_3_rx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_3_RX& Pack::flash_cellboard_3_rx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_3_RX)
  return _internal_flash_cellboard_3_rx(index);
}
inline ::bms::FLASH_CELLBOARD_3_RX* Pack::_internal_add_flash_cellboard_3_rx() {
  return flash_cellboard_3_rx_.Add();
}
inline ::bms::FLASH_CELLBOARD_3_RX* Pack::add_flash_cellboard_3_rx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_3_RX)
  return _internal_add_flash_cellboard_3_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_3_RX >&
Pack::flash_cellboard_3_rx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_3_RX)
  return flash_cellboard_3_rx_;
}

// repeated .bms.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 14;
inline int Pack::_internal_flash_cellboard_4_tx_size() const {
  return flash_cellboard_4_tx_.size();
}
inline int Pack::flash_cellboard_4_tx_size() const {
  return _internal_flash_cellboard_4_tx_size();
}
inline void Pack::clear_flash_cellboard_4_tx() {
  flash_cellboard_4_tx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_4_TX* Pack::mutable_flash_cellboard_4_tx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_4_TX)
  return flash_cellboard_4_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_TX >*
Pack::mutable_flash_cellboard_4_tx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_4_TX)
  return &flash_cellboard_4_tx_;
}
inline const ::bms::FLASH_CELLBOARD_4_TX& Pack::_internal_flash_cellboard_4_tx(int index) const {
  return flash_cellboard_4_tx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_4_TX& Pack::flash_cellboard_4_tx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_4_TX)
  return _internal_flash_cellboard_4_tx(index);
}
inline ::bms::FLASH_CELLBOARD_4_TX* Pack::_internal_add_flash_cellboard_4_tx() {
  return flash_cellboard_4_tx_.Add();
}
inline ::bms::FLASH_CELLBOARD_4_TX* Pack::add_flash_cellboard_4_tx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_4_TX)
  return _internal_add_flash_cellboard_4_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_TX >&
Pack::flash_cellboard_4_tx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_4_TX)
  return flash_cellboard_4_tx_;
}

// repeated .bms.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 15;
inline int Pack::_internal_flash_cellboard_4_rx_size() const {
  return flash_cellboard_4_rx_.size();
}
inline int Pack::flash_cellboard_4_rx_size() const {
  return _internal_flash_cellboard_4_rx_size();
}
inline void Pack::clear_flash_cellboard_4_rx() {
  flash_cellboard_4_rx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_4_RX* Pack::mutable_flash_cellboard_4_rx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_4_RX)
  return flash_cellboard_4_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_RX >*
Pack::mutable_flash_cellboard_4_rx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_4_RX)
  return &flash_cellboard_4_rx_;
}
inline const ::bms::FLASH_CELLBOARD_4_RX& Pack::_internal_flash_cellboard_4_rx(int index) const {
  return flash_cellboard_4_rx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_4_RX& Pack::flash_cellboard_4_rx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_4_RX)
  return _internal_flash_cellboard_4_rx(index);
}
inline ::bms::FLASH_CELLBOARD_4_RX* Pack::_internal_add_flash_cellboard_4_rx() {
  return flash_cellboard_4_rx_.Add();
}
inline ::bms::FLASH_CELLBOARD_4_RX* Pack::add_flash_cellboard_4_rx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_4_RX)
  return _internal_add_flash_cellboard_4_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_4_RX >&
Pack::flash_cellboard_4_rx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_4_RX)
  return flash_cellboard_4_rx_;
}

// repeated .bms.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 16;
inline int Pack::_internal_flash_cellboard_5_tx_size() const {
  return flash_cellboard_5_tx_.size();
}
inline int Pack::flash_cellboard_5_tx_size() const {
  return _internal_flash_cellboard_5_tx_size();
}
inline void Pack::clear_flash_cellboard_5_tx() {
  flash_cellboard_5_tx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_5_TX* Pack::mutable_flash_cellboard_5_tx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_5_TX)
  return flash_cellboard_5_tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_TX >*
Pack::mutable_flash_cellboard_5_tx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_5_TX)
  return &flash_cellboard_5_tx_;
}
inline const ::bms::FLASH_CELLBOARD_5_TX& Pack::_internal_flash_cellboard_5_tx(int index) const {
  return flash_cellboard_5_tx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_5_TX& Pack::flash_cellboard_5_tx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_5_TX)
  return _internal_flash_cellboard_5_tx(index);
}
inline ::bms::FLASH_CELLBOARD_5_TX* Pack::_internal_add_flash_cellboard_5_tx() {
  return flash_cellboard_5_tx_.Add();
}
inline ::bms::FLASH_CELLBOARD_5_TX* Pack::add_flash_cellboard_5_tx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_5_TX)
  return _internal_add_flash_cellboard_5_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_TX >&
Pack::flash_cellboard_5_tx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_5_TX)
  return flash_cellboard_5_tx_;
}

// repeated .bms.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 17;
inline int Pack::_internal_flash_cellboard_5_rx_size() const {
  return flash_cellboard_5_rx_.size();
}
inline int Pack::flash_cellboard_5_rx_size() const {
  return _internal_flash_cellboard_5_rx_size();
}
inline void Pack::clear_flash_cellboard_5_rx() {
  flash_cellboard_5_rx_.Clear();
}
inline ::bms::FLASH_CELLBOARD_5_RX* Pack::mutable_flash_cellboard_5_rx(int index) {
  // @@protoc_insertion_point(field_mutable:bms.Pack.FLASH_CELLBOARD_5_RX)
  return flash_cellboard_5_rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_RX >*
Pack::mutable_flash_cellboard_5_rx() {
  // @@protoc_insertion_point(field_mutable_list:bms.Pack.FLASH_CELLBOARD_5_RX)
  return &flash_cellboard_5_rx_;
}
inline const ::bms::FLASH_CELLBOARD_5_RX& Pack::_internal_flash_cellboard_5_rx(int index) const {
  return flash_cellboard_5_rx_.Get(index);
}
inline const ::bms::FLASH_CELLBOARD_5_RX& Pack::flash_cellboard_5_rx(int index) const {
  // @@protoc_insertion_point(field_get:bms.Pack.FLASH_CELLBOARD_5_RX)
  return _internal_flash_cellboard_5_rx(index);
}
inline ::bms::FLASH_CELLBOARD_5_RX* Pack::_internal_add_flash_cellboard_5_rx() {
  return flash_cellboard_5_rx_.Add();
}
inline ::bms::FLASH_CELLBOARD_5_RX* Pack::add_flash_cellboard_5_rx() {
  // @@protoc_insertion_point(field_add:bms.Pack.FLASH_CELLBOARD_5_RX)
  return _internal_add_flash_cellboard_5_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bms::FLASH_CELLBOARD_5_RX >&
Pack::flash_cellboard_5_rx() const {
  // @@protoc_insertion_point(field_list:bms.Pack.FLASH_CELLBOARD_5_RX)
  return flash_cellboard_5_rx_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bms

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::bms::Cellboard> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bms::Cellboard>() {
  return ::bms::Cellboard_descriptor();
}
template <> struct is_proto_enum< ::bms::BalancingStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bms::BalancingStatus>() {
  return ::bms::BalancingStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bms_2eproto
